[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"# **Mr. Agent**","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F09-3/tp/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"  ","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"* The application is no different than normal mobile contact applications. Our application, targeted towards insurance agents, will ease them in storing their customer\u0027s information.","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"* Features:","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"  - Customizable insurance and client categories","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"  - Connections between customers","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"  - Client’s insurance contract → end date, price, company","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"  - Advanced search (by location, contract, date, company etc)","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"  - Appointment (todo) → when list out can sort by date","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"  - Transaction/contract","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"  - Contacts become inactive after a specific period","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"-":5,"zzkzzzz":18}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":9}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":".background {","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":".label {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":".label-bright {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":".label-header {","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":".text-field {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":".tab-pane {","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":".table-view {","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-color:","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"        transparent","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"        transparent","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"        transparent;","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"jessicajacelyn"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"jessicajacelyn"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"jessicajacelyn"},"content":".split-pane {","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"jessicajacelyn"},"content":".list-view {","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"jessicajacelyn"},"content":".list-cell {","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"jessicajacelyn"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"jessicajacelyn"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"jessicajacelyn"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"jessicajacelyn"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"jessicajacelyn"},"content":".list-cell .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"jessicajacelyn"},"content":".cell_big_label {","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"jessicajacelyn"},"content":".cell_small_label {","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"jessicajacelyn"},"content":".stack-pane {","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"jessicajacelyn"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"jessicajacelyn"},"content":".pane-with-border {","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"jessicajacelyn"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"jessicajacelyn"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"jessicajacelyn"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"jessicajacelyn"},"content":".status-bar {","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"jessicajacelyn"},"content":".result-display {","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"jessicajacelyn"},"content":".result-display .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"jessicajacelyn"},"content":".status-bar .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"jessicajacelyn"},"content":".status-bar-with-border {","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"jessicajacelyn"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":176,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"jessicajacelyn"},"content":".grid-pane {","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"jessicajacelyn"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"jessicajacelyn"},"content":".context-menu {","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":191,"author":{"gitId":"jessicajacelyn"},"content":".context-menu .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"jessicajacelyn"},"content":".menu-bar {","lastModifiedDate":"2022-03-09"},{"lineNumber":196,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-09"},{"lineNumber":197,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":198,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":199,"author":{"gitId":"jessicajacelyn"},"content":".menu-bar .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":200,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-03-09"},{"lineNumber":201,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-09"},{"lineNumber":202,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":203,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":205,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":206,"author":{"gitId":"jessicajacelyn"},"content":".menu .left-container {","lastModifiedDate":"2022-03-09"},{"lineNumber":207,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-03-09"},{"lineNumber":208,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":209,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":210,"author":{"gitId":"jessicajacelyn"},"content":"/*","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"jessicajacelyn"},"content":" * Metro style Push Button","lastModifiedDate":"2022-03-09"},{"lineNumber":212,"author":{"gitId":"jessicajacelyn"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-03-09"},{"lineNumber":213,"author":{"gitId":"jessicajacelyn"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":215,"author":{"gitId":"jessicajacelyn"},"content":".button {","lastModifiedDate":"2022-03-09"},{"lineNumber":216,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-03-09"},{"lineNumber":217,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-03-09"},{"lineNumber":218,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":219,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":220,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-09"},{"lineNumber":221,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-09"},{"lineNumber":222,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-03-09"},{"lineNumber":224,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":226,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":227,"author":{"gitId":"jessicajacelyn"},"content":".button:hover {","lastModifiedDate":"2022-03-09"},{"lineNumber":228,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-03-09"},{"lineNumber":229,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":230,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":231,"author":{"gitId":"jessicajacelyn"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-03-09"},{"lineNumber":232,"author":{"gitId":"jessicajacelyn"},"content":"  -fx-background-color: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":233,"author":{"gitId":"jessicajacelyn"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-03-09"},{"lineNumber":234,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":235,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":236,"author":{"gitId":"jessicajacelyn"},"content":".button:focused {","lastModifiedDate":"2022-03-09"},{"lineNumber":237,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2022-03-09"},{"lineNumber":238,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":239,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-03-09"},{"lineNumber":240,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":241,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":242,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":243,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":244,"author":{"gitId":"jessicajacelyn"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-03-09"},{"lineNumber":245,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-03-09"},{"lineNumber":246,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-09"},{"lineNumber":247,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":248,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":249,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":250,"author":{"gitId":"jessicajacelyn"},"content":".button:default {","lastModifiedDate":"2022-03-09"},{"lineNumber":251,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-09"},{"lineNumber":252,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-09"},{"lineNumber":253,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":254,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":255,"author":{"gitId":"jessicajacelyn"},"content":".button:default:hover {","lastModifiedDate":"2022-03-09"},{"lineNumber":256,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-03-09"},{"lineNumber":257,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":258,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":259,"author":{"gitId":"jessicajacelyn"},"content":".dialog-pane {","lastModifiedDate":"2022-03-09"},{"lineNumber":260,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":262,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":263,"author":{"gitId":"jessicajacelyn"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-03-09"},{"lineNumber":264,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-09"},{"lineNumber":265,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":266,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":267,"author":{"gitId":"jessicajacelyn"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-03-09"},{"lineNumber":268,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-09"},{"lineNumber":269,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-09"},{"lineNumber":270,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":271,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"jessicajacelyn"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-03-09"},{"lineNumber":274,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-03-09"},{"lineNumber":275,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":276,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":277,"author":{"gitId":"jessicajacelyn"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-03-09"},{"lineNumber":278,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-09"},{"lineNumber":279,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-03-09"},{"lineNumber":280,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":281,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":282,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":283,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":284,"author":{"gitId":"jessicajacelyn"},"content":".scroll-bar {","lastModifiedDate":"2022-03-09"},{"lineNumber":285,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-09"},{"lineNumber":286,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":287,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":288,"author":{"gitId":"jessicajacelyn"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-03-09"},{"lineNumber":289,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2022-03-09"},{"lineNumber":290,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":291,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":292,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":293,"author":{"gitId":"jessicajacelyn"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2022-03-09"},{"lineNumber":294,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-09"},{"lineNumber":295,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":296,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":297,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":298,"author":{"gitId":"jessicajacelyn"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2022-03-09"},{"lineNumber":299,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":300,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":301,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":302,"author":{"gitId":"jessicajacelyn"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-03-09"},{"lineNumber":303,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-03-09"},{"lineNumber":304,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":305,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":306,"author":{"gitId":"jessicajacelyn"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-03-09"},{"lineNumber":307,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":308,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":309,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":310,"author":{"gitId":"jessicajacelyn"},"content":"#cardPane {","lastModifiedDate":"2022-03-09"},{"lineNumber":311,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-09"},{"lineNumber":312,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":313,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":314,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":315,"author":{"gitId":"jessicajacelyn"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-03-09"},{"lineNumber":316,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-03-09"},{"lineNumber":317,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-03-09"},{"lineNumber":318,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":319,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":320,"author":{"gitId":"jessicajacelyn"},"content":"#commandTextField {","lastModifiedDate":"2022-03-09"},{"lineNumber":321,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2022-03-09"},{"lineNumber":322,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":323,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2022-03-09"},{"lineNumber":324,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":325,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":326,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-09"},{"lineNumber":327,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-09"},{"lineNumber":328,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":329,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":330,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":331,"author":{"gitId":"jessicajacelyn"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2022-03-09"},{"lineNumber":332,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":333,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":334,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":335,"author":{"gitId":"jessicajacelyn"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-03-09"},{"lineNumber":336,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2022-03-09"},{"lineNumber":337,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":338,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":339,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":340,"author":{"gitId":"jessicajacelyn"},"content":"#tags {","lastModifiedDate":"2022-03-09"},{"lineNumber":341,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-09"},{"lineNumber":342,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":343,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":344,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":345,"author":{"gitId":"jessicajacelyn"},"content":"#tags .label {","lastModifiedDate":"2022-03-09"},{"lineNumber":346,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":347,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2022-03-09"},{"lineNumber":348,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":349,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":350,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-09"},{"lineNumber":351,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-09"},{"lineNumber":352,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":352}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":".error {","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":".list-cell:empty {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background: #383838;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":".tag-selector {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-color: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":".tooltip-text {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":20}},{"path":"bin/main/view/HelpWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"#copyButton {","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"#copyButton:hover {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"#copyButton:armed {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":19}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":44}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":58}},{"path":"bin/main/view/PersonListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":36}},{"path":"bin/main/view/PersonListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":8}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":9}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"Not a valid FXML file","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":4}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"jessicajacelyn":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"    archiveName \u003d \u0027MrAgent.jar\u0027","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"zzkzzzz":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"### Mo Yunbin","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"\u003cimg src\u003d\"images/yunbinmo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"[[github](http://github.com/yunbinmo)]","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"[[portfolio](team/yunbinmo.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"* Role: Integration","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"* Responsibilities: Appointment","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"### Koh Su En","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"\u003cimg src\u003d\"images/seksek13.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"[[github](http://github.com/seksek13)]","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"[[portfolio](team/seksek13.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"* Role: Documentation","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"* Responsibilities: Responsible for the quality of various project documents.","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"### Jessica Jacelyn","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"\u003cimg src\u003d\"images/jessicajacelyn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"[[github](http://github.com/jessicajacelyn)] [[portfolio](team/jessicajacelyn.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"* Responsibilities: Deliverables and deadlines + Scheduling and Tracking","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"### Zheng ZiKang","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"\u003cimg src\u003d\"images/zzkzzzz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"[[github](http://github.com/zzkzzzz)]","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"[[portfolio](team/zzkzzzz.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"* Responsibilities: Testing + Code quality","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yunbinmo":6,"seksek13":7,"jessicajacelyn":3,"-":30,"zzkzzzz":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"By: Team CS2103-F09-3  (Mo YunBin, Jessica Jacelyn, Koh Su En, Zheng ZiKang)","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"- [1. Acknowledgements](#Acknowledgements)","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"- [2. Setting up](#Settingup)","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"- [3. Design](#Design)","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"  - [3.1. Architecture](#Architecture)","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"  - [3.2. UI component](#UI)","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"  - [3.3. Logic component](#Logic)","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"  - [3.4. Model component](#Model)","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"  - [3.5. Storage component](#Storage)","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"  - [3.6. Common classes](#Common)","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"- [4. Implementation](#Implementation)","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    - [4.1. Sort Records Feature](#SortRecords)","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    - [4.2. Sort Appointments Feature](#SortAppointments)","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    - [4.3. List history feature](#ListHistory)","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    - [4.4. Click event feature](#Click)","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    - [4.5. Add Records Feature](#AddRecord)","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    - [4.6. Find Appointments Feature](#FindAppointments)","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"- [5. Documentation](#Documentation)","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"- [Appendix A: Product Scope](#scope)","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"- [Appendix B: User Stories](#userStories)","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"- [Appendix C: Use Cases](#usecases)","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"- [Appendix D: Non Functional Requirements](#Non-Functional)","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"- [Appendix E: Glossary](#Glossary)","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"- [Appendix F: Instructions for Manual Testing](#manual)","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Acknowledgements\"\u003e\u003c/a\u003e**1. Acknowledgements**","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"* [se-edu/addressbook-level3](https://github.com/se-edu/addressbook-level3)","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"* [se-edu/addressbook-level4](https://github.com/se-edu/addressbook-level4)","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Settingup\"\u003e\u003c/a\u003e**2. Setting up, getting started**","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Settingup\"\u003e\u003c/a\u003e**3. Design**","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"Architecture\"\u003e\u003c/a\u003e3.1. Architecture","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"\u003cimg src\u003d\"images/Arch.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete -c 1`.","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"\u003cimg src\u003d\"images/ArchSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"* Defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"* Implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"UI\"\u003e\u003c/a\u003e3.2. UI component","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"seksek13"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `AppointmentListPanel`, `InsuranceListPanel`, `RecordListPanel`, `ExpiredRecordPanel`, `ObejctDetailedPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jessicajacelyn"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"jessicajacelyn"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"jessicajacelyn"},"content":"* Keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"jessicajacelyn"},"content":"* Depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"jessicajacelyn"},"content":"* Does not replace the right panel - `AppointmentListPanel` at any time.","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"jessicajacelyn"},"content":"* Based on the user commands, left panel changes accordingly. e.g. when `list -r` is entered, `RecordListPanel` will replace the existing panel.","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"jessicajacelyn"},"content":"* Listens for user click on `PersonListPanel` and will update the `ObjectDetailedPanel` to show respective client\u0027s information.","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"Logic\"\u003e\u003c/a\u003e3.3. Logic component","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"jessicajacelyn"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a client).","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"jessicajacelyn"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"jessicajacelyn"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete -c 1\")` API call.","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"jessicajacelyn"},"content":"![Interactions Inside the Logic Component for the `delete -c 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"Model\"\u003e\u003c/a\u003e3.4. Model component","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"yunbinmo"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103-F09-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"yunbinmo"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"1200\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"yunbinmo"},"content":"* stores different kinds of  address book data i.e., all `Person`, `Appointment`, `Record`, and `Insurance` objects (which are contained in an `UniquePersonList`, an `UniqueAppointmentList`, an `UniqueRecordList` and an `UniqueInsuranceList` respectively).","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"yunbinmo"},"content":"* for example, stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change. The same mechanism applies to `Appointment`, `Record`, and `Insurance` objects as well.","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"yunbinmo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model (containing `Person` object only for simplicity) is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"Storage\"\u003e\u003c/a\u003e3.5. Storage component","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"zzkzzzz"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103-F09-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"* can save address book data, insurance book data, record book data, appointment book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"* inherits from both `AddressBookStorage`, `InsuranceBookStorage`, `RecordBookStorage`, `AppointmentBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":171,"author":{"gitId":"jessicajacelyn"},"content":"* note that for history related features will only read from existing storage and will not create new json file. For example, list expired record command will search in RecordBookStorage to find expired records.","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"Common\"\u003e\u003c/a\u003e3.6. Common classes","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"zzkzzzz"},"content":"## **4. Implementation**","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"SortRecords\"\u003e\u003c/a\u003e4.1. Sort Records Feature","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":185,"author":{"gitId":"zzkzzzz"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":187,"author":{"gitId":"jessicajacelyn"},"content":"The Sort Records Feature is facilitated by `SortRecordCommand`. It extends `Command` with its own execution logic. It supports the following commands:","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":189,"author":{"gitId":"zzkzzzz"},"content":"* `sort -r sa` — Sort the records by start date in ascending order.","lastModifiedDate":"2022-03-21"},{"lineNumber":190,"author":{"gitId":"zzkzzzz"},"content":"* `sort -r sd` — Sort the records by start date in descending order.","lastModifiedDate":"2022-03-21"},{"lineNumber":191,"author":{"gitId":"zzkzzzz"},"content":"* `sort -r ea` — Sort the records by end date in ascending order.","lastModifiedDate":"2022-03-21"},{"lineNumber":192,"author":{"gitId":"zzkzzzz"},"content":"* `sort -r ed` — Sort the records by end date in descending order.","lastModifiedDate":"2022-03-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":194,"author":{"gitId":"zzkzzzz"},"content":"These commands will be parsed by the `AddressBookParser` and `SortReocrdCommandPasrser`. `ModelManger` will override `sortRecordBook()` from `Model` which take in an `Comparator\u003cRecord\u003e` object as input. Then `ReocrdBook` will sort the `UniqueRecordList` base on the Comparator given.","lastModifiedDate":"2022-03-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":196,"author":{"gitId":"zzkzzzz"},"content":"Given below is an example usage scenario and how the Sort Records Command behaves at each step.","lastModifiedDate":"2022-03-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":198,"author":{"gitId":"zzkzzzz"},"content":"Step 1. The user launches the application and executes `sort -r sa` command to sort the records by start date in ascending order.","lastModifiedDate":"2022-03-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":200,"author":{"gitId":"yunbinmo"},"content":"Step 2. The `LogicManager` receives the input from `UI#MainWindow` and calls `AddressBookParser#parseCommand()`, causing the user input being parsed and an object of `SortRecordCommand` returns.","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":202,"author":{"gitId":"zzkzzzz"},"content":"Step 3. `LogicManager` executes object of `SortRecordCommand`. `SortRecordCommand` will invoke `ModelManager#sortRecordBook()` with different Comparator base on user input.","lastModifiedDate":"2022-03-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":204,"author":{"gitId":"zzkzzzz"},"content":"Step 4. `ModelManger` will invoke `RecordBook#sortRecord()` with the comparator as input to sort the `UniqueRecordList`.","lastModifiedDate":"2022-03-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":206,"author":{"gitId":"yunbinmo"},"content":"Step 5. `MainWindow` will update the `RecordListPanel` with sorted `ObservableList` of records.","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":208,"author":{"gitId":"zzkzzzz"},"content":"#### Design considerations","lastModifiedDate":"2022-03-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":210,"author":{"gitId":"zzkzzzz"},"content":"**Aspect: How sort records stored:**","lastModifiedDate":"2022-04-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":212,"author":{"gitId":"zzkzzzz"},"content":"* **Alternative 1 (current choice):** Saves the sorted records to RecordBook.","lastModifiedDate":"2022-03-21"},{"lineNumber":213,"author":{"gitId":"zzkzzzz"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2022-03-21"},{"lineNumber":214,"author":{"gitId":"jessicajacelyn"},"content":"  * Cons: The original order of record list is not preserved.","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":216,"author":{"gitId":"zzkzzzz"},"content":"* **Alternative 2:** Creates a temporary sorted records List.","lastModifiedDate":"2022-03-21"},{"lineNumber":217,"author":{"gitId":"jessicajacelyn"},"content":"  * Pros: The original order of record list is preserved.","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"zzkzzzz"},"content":"  * Cons:  May have performance issues in terms of memory usage.","lastModifiedDate":"2022-03-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":220,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"SortAppointments\"\u003e\u003c/a\u003e4.2. Sort Appointments Feature","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"yunbinmo"},"content":"#### Implementation","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"yunbinmo"},"content":"The Sort Appointments Feature is facilitated by `SortAppointmentCommand`. It extends `Command` with it own execution logic. It supports the following commands:","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"yunbinmo"},"content":"* `sort -a a` — Sort the appointments by appointment time in ascending order.","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"yunbinmo"},"content":"* `sort -a d` — Sort the appointments by appointment time in descending order.","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"yunbinmo"},"content":"These commands will be parsed by the `AddressBookParser` and `SortAppointmentCommandPasrser`. `ModelManger` will override `sortAppointmentBook()` from `Model` which takes in an `Comparator\u003cAppointment\u003e` object as input. Then `AppointmentBook` will sort the `UniqueAppointmentList` base on the Comparator given.","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"yunbinmo"},"content":"Given below is an example usage scenario and how the Sort Appointments Command behaves at each step.","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"yunbinmo"},"content":"Step 1. The user launches the application and executes `sort -a a` command to sort the appointments by time in ascending order.","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"yunbinmo"},"content":"Step 2. The `LogicManager` receives the input from `UI#MainWindow` and calls `AddressBookParser#parseCommand()`, causing the user input being parsed and an object of `SortAppointmentCommand` returns.","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"yunbinmo"},"content":"Step 3. `LogicManager` executes object of `SortAppointmentCommand`. `SortAppointmentCommand` will invoke `ModelManager#sortAppointmentBook()` with the stated Comparator base on user input.","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"yunbinmo"},"content":"Step 4. `ModelManger` will invoke `AppointmentBook#sortAppointment()` with the comparator as input to sort the `UniqueAppointmentList`.","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"yunbinmo"},"content":"Step 5. `MainWindow` will update the `AppointmentListPanel` with sorted `ObservableList` of appointments.","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"yunbinmo"},"content":"#### Design considerations","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"yunbinmo"},"content":"**Aspect: What is a good sorting order to use:**","lastModifiedDate":"2022-03-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":247,"author":{"gitId":"yunbinmo"},"content":"* **Alternative 1 (current choice):** Sorts solely based on appointment date and time.","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"yunbinmo"},"content":"    * Pros: Makes more sense for the target user as appointments are time-sensitive.","lastModifiedDate":"2022-03-27"},{"lineNumber":249,"author":{"gitId":"yunbinmo"},"content":"    * Cons: Users have limited option of sorting order.","lastModifiedDate":"2022-03-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":251,"author":{"gitId":"yunbinmo"},"content":"* **Alternative 2:** Sorting options for each attribute of appointment.","lastModifiedDate":"2022-03-27"},{"lineNumber":252,"author":{"gitId":"yunbinmo"},"content":"    * Pros: More flexible sorting options.","lastModifiedDate":"2022-03-27"},{"lineNumber":253,"author":{"gitId":"yunbinmo"},"content":"    * Cons:  Sorting by other attributes might not be useful and not even used frequently.","lastModifiedDate":"2022-03-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"yunbinmo"},"content":"Moreover, design considerations for sort record command also apply here.","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"ListHistory\"\u003e\u003c/a\u003e4.3. List history feature","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"jessicajacelyn"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"jessicajacelyn"},"content":"There are 2 commands in the history features, one for listing appointment history and one for expired records:","lastModifiedDate":"2022-03-25"},{"lineNumber":261,"author":{"gitId":"jessicajacelyn"},"content":"The feature is facilitated by:","lastModifiedDate":"2022-03-25"},{"lineNumber":262,"author":{"gitId":"jessicajacelyn"},"content":"* `ListAppointmentHistoryCommand` which extends `Command`, for listing appointment history. ","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"jessicajacelyn"},"content":"The command format is `list -h`.","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"jessicajacelyn"},"content":"* `ListExpiredRecordsCommand` which extends `Command`, for listing expired records. The command format is `list -e`.","lastModifiedDate":"2022-03-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"jessicajacelyn"},"content":"Given below is an example usage scenario and how the list appointment history command behaves at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":267,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"jessicajacelyn"},"content":"Step 1. The user launches the application and executes `list -h` command to list the appointment history.","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"jessicajacelyn"},"content":"Step 2. The `LogicManager` receives the input from `UI#MainWindow` and calls `AddressBookParser#parseCommand()`, causing the user input being parsed and an object of `ListAppointmentHistoryCommand` returns.","lastModifiedDate":"2022-03-25"},{"lineNumber":271,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"jessicajacelyn"},"content":"Step 3. `LogicManager` executes object of `ListAppointmentHistoryCommand`. `ListAppointmentHistoryCommand` will invoke `ModelManager#getAppointmentHistoryBook()`.","lastModifiedDate":"2022-03-25"},{"lineNumber":273,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"jessicajacelyn"},"content":"Step 4. `ModelManger` will invoke `AppointmentHistoryBook#getAppointmentHistoryList()`.","lastModifiedDate":"2022-03-25"},{"lineNumber":275,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":276,"author":{"gitId":"jessicajacelyn"},"content":"Step 5. `MainWindow` will update the `AppointmentListPanel` with appointment histories.","lastModifiedDate":"2022-03-25"},{"lineNumber":277,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"jessicajacelyn"},"content":"#### Design considerations","lastModifiedDate":"2022-03-25"},{"lineNumber":279,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"jessicajacelyn"},"content":"**Aspect: How to store the appointment history data:**","lastModifiedDate":"2022-03-25"},{"lineNumber":281,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":282,"author":{"gitId":"jessicajacelyn"},"content":"* **Alternative 1 (current choice):** Creates a temporary appointment history list.","lastModifiedDate":"2022-03-25"},{"lineNumber":283,"author":{"gitId":"jessicajacelyn"},"content":"    * Pros: Saves storage.","lastModifiedDate":"2022-03-25"},{"lineNumber":284,"author":{"gitId":"jessicajacelyn"},"content":"    * Cons: Harder to implement as separate methods has to be created to check passed appointments everytime the application is launched.","lastModifiedDate":"2022-03-25"},{"lineNumber":285,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":286,"author":{"gitId":"jessicajacelyn"},"content":"* **Alternative 2:** Saves the appointment history to a separate json file.","lastModifiedDate":"2022-03-25"},{"lineNumber":287,"author":{"gitId":"jessicajacelyn"},"content":"    * Pros: Easier to implement.","lastModifiedDate":"2022-03-25"},{"lineNumber":288,"author":{"gitId":"jessicajacelyn"},"content":"    * Cons: Code is longer and harder to maintain.","lastModifiedDate":"2022-03-25"},{"lineNumber":289,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":290,"author":{"gitId":"jessicajacelyn"},"content":"**Note**: how list expired records behaves and its design considerations are the same as list appointment history","lastModifiedDate":"2022-03-25"},{"lineNumber":291,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":292,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"Click\"\u003e\u003c/a\u003e4.4. Click event feature","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":294,"author":{"gitId":"zzkzzzz"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":295,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":296,"author":{"gitId":"jessicajacelyn"},"content":"The `objectListPanel` will be updated according to user command. It supports the following commands:","lastModifiedDate":"2022-03-25"},{"lineNumber":297,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":298,"author":{"gitId":"zzkzzzz"},"content":"* `list -c` — List all clients.","lastModifiedDate":"2022-03-21"},{"lineNumber":299,"author":{"gitId":"zzkzzzz"},"content":"* `list -i` — List all insurances.","lastModifiedDate":"2022-03-21"},{"lineNumber":300,"author":{"gitId":"zzkzzzz"},"content":"* `list -r` — List all records.","lastModifiedDate":"2022-03-21"},{"lineNumber":301,"author":{"gitId":"zzkzzzz"},"content":"* `list -e` — List all expired records.","lastModifiedDate":"2022-03-21"},{"lineNumber":302,"author":{"gitId":"jessicajacelyn"},"content":"* `list -h` — List all passed appointments.","lastModifiedDate":"2022-03-25"},{"lineNumber":303,"author":{"gitId":"zzkzzzz"},"content":"  ","lastModifiedDate":"2022-03-21"},{"lineNumber":304,"author":{"gitId":"zzkzzzz"},"content":"The content in `detailPane` will be updated with details of the object base on the click event.","lastModifiedDate":"2022-03-21"},{"lineNumber":305,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":306,"author":{"gitId":"zzkzzzz"},"content":"![MainWindow](images/MainWindow.jpg)","lastModifiedDate":"2022-03-21"},{"lineNumber":307,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":308,"author":{"gitId":"zzkzzzz"},"content":"Step 1. The user launches the application and executes `list -c` command to list all clients.","lastModifiedDate":"2022-03-21"},{"lineNumber":309,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":310,"author":{"gitId":"zzkzzzz"},"content":"Step 2.  Then `personListPanel` (filled by `ObservableList` of client) will be added into `objectListPanel` as children component.","lastModifiedDate":"2022-03-21"},{"lineNumber":311,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":312,"author":{"gitId":"zzkzzzz"},"content":"Step 3. User click on `Davia Li`, then `PersonDetailCard` (filled by the detail information of `Davia Li`) will be added into `detailPanel` as children component.","lastModifiedDate":"2022-03-21"},{"lineNumber":313,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":314,"author":{"gitId":"zzkzzzz"},"content":"#### Design considerations","lastModifiedDate":"2022-03-21"},{"lineNumber":315,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":316,"author":{"gitId":"jessicajacelyn"},"content":"**Aspect: How to arrange all components:**","lastModifiedDate":"2022-03-25"},{"lineNumber":317,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":318,"author":{"gitId":"zzkzzzz"},"content":"* **Alternative 1 (current choice):** Update the panel base on command and click event.","lastModifiedDate":"2022-03-21"},{"lineNumber":319,"author":{"gitId":"zzkzzzz"},"content":"  * Pros:","lastModifiedDate":"2022-03-21"},{"lineNumber":320,"author":{"gitId":"zzkzzzz"},"content":"      1. The UI looks more clean and clear.","lastModifiedDate":"2022-03-21"},{"lineNumber":321,"author":{"gitId":"jessicajacelyn"},"content":"      2. The cells of `objectListPanel` only contains important information like client name and tags.","lastModifiedDate":"2022-03-25"},{"lineNumber":322,"author":{"gitId":"jessicajacelyn"},"content":"  * Cons: User needs to click on certain cell to look into details.","lastModifiedDate":"2022-03-25"},{"lineNumber":323,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":324,"author":{"gitId":"zzkzzzz"},"content":"* **Alternative 2:** Display everything with details(client and records information) in the `objectListPanel`.","lastModifiedDate":"2022-04-03"},{"lineNumber":325,"author":{"gitId":"jessicajacelyn"},"content":"  * Pros: User does not need to click to look into details.","lastModifiedDate":"2022-03-25"},{"lineNumber":326,"author":{"gitId":"jessicajacelyn"},"content":"  * Cons: All information are squeezed together and the list can only contain a maximum of 3-5 cells.","lastModifiedDate":"2022-03-25"},{"lineNumber":327,"author":{"gitId":"jessicajacelyn"},"content":"  User needs to scroll down to check other items in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":328,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":329,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"AddRecord\"\u003e\u003c/a\u003e4.5. Add Records Feature","lastModifiedDate":"2022-03-25"},{"lineNumber":330,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":331,"author":{"gitId":"seksek13"},"content":"#### Implementation","lastModifiedDate":"2022-03-22"},{"lineNumber":332,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":333,"author":{"gitId":"seksek13"},"content":"The Add Records Feature will be facilitated by `AddRecordCommand` which implements `Parser` and `AddCommand` which extends `Command`. ","lastModifiedDate":"2022-03-22"},{"lineNumber":334,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":335,"author":{"gitId":"seksek13"},"content":"The command format is `add -r c/ClientIndex i/InsuranceIndex sd/StartDate ed/EndDate` - add a record to the client at `ClientIndex` with insurance of `InsuranceIndex` valid from `StartDate` to `EndDate`","lastModifiedDate":"2022-03-22"},{"lineNumber":336,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":337,"author":{"gitId":"seksek13"},"content":"The relevant methods are:","lastModifiedDate":"2022-03-22"},{"lineNumber":338,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":339,"author":{"gitId":"seksek13"},"content":"1. `AddCommandParser#parse(List\u003cPerson\u003e personList, ObservableList\u003cInsurance\u003e insuranceList,","lastModifiedDate":"2022-03-22"},{"lineNumber":340,"author":{"gitId":"seksek13"},"content":"   String args)` --\u003e Parse the relevant detailed information ","lastModifiedDate":"2022-03-22"},{"lineNumber":341,"author":{"gitId":"seksek13"},"content":"   ","lastModifiedDate":"2022-03-22"},{"lineNumber":342,"author":{"gitId":"seksek13"},"content":"2. `AddCommand#execute(Model model)` --\u003e Checks for duplication , validate each information and store to library","lastModifiedDate":"2022-03-22"},{"lineNumber":343,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":344,"author":{"gitId":"jessicajacelyn"},"content":"Given below is an example usage scenario and how the AddCommand behaves at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":345,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":346,"author":{"gitId":"jessicajacelyn"},"content":"Step1. The user launches the application and executes `add -r c/1 i/1 sd/22-03-2022 ed/ 22-03-2032`","lastModifiedDate":"2022-03-25"},{"lineNumber":347,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":348,"author":{"gitId":"seksek13"},"content":"Step2. The `LogicManager` receives the input from `UI#MainWindow` and calls `AddressBookParser#parseCommand()`, ","lastModifiedDate":"2022-03-22"},{"lineNumber":349,"author":{"gitId":"seksek13"},"content":"and determine that it is an Add Command.","lastModifiedDate":"2022-03-22"},{"lineNumber":350,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":351,"author":{"gitId":"seksek13"},"content":"Step3. AddCommandParser would check if the `ClientIndex` and `InsuranceIndex` exist in the library. Then it will continue to check if the `StartDate` is before the `EndDate`","lastModifiedDate":"2022-03-22"},{"lineNumber":352,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":353,"author":{"gitId":"seksek13"},"content":"Step4. Execution of Add would take place and the result will be updated in the filtered record list Model.","lastModifiedDate":"2022-03-22"},{"lineNumber":354,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":355,"author":{"gitId":"seksek13"},"content":"Important Features to take note:","lastModifiedDate":"2022-03-22"},{"lineNumber":356,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":357,"author":{"gitId":"jessicajacelyn"},"content":"1. The `add record` command takes in the `ClientIndex` and `InsuranceIndex` but stores the Client\u0027s `Name` and Insurance\u0027s `Title` in the RecordBook.","lastModifiedDate":"2022-03-25"},{"lineNumber":358,"author":{"gitId":"seksek13"},"content":"2. The `sd/STARTDATE` entered must strictly be before the `sd/ENDDATE`, else `ParseException` will be thrown","lastModifiedDate":"2022-03-22"},{"lineNumber":359,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":360,"author":{"gitId":"seksek13"},"content":"#### Design considerations","lastModifiedDate":"2022-03-22"},{"lineNumber":361,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":362,"author":{"gitId":"seksek13"},"content":"**Aspect: How to add record to recordBook:**","lastModifiedDate":"2022-03-22"},{"lineNumber":363,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":364,"author":{"gitId":"jessicajacelyn"},"content":"* **Alternative 1 (current choice):** User inputs all required information at once","lastModifiedDate":"2022-03-25"},{"lineNumber":365,"author":{"gitId":"seksek13"},"content":"    * Pros:","lastModifiedDate":"2022-03-22"},{"lineNumber":366,"author":{"gitId":"jessicajacelyn"},"content":"        1. Faster response rate as system does not need to prompt and wait for the user to key in the information needed.","lastModifiedDate":"2022-03-25"},{"lineNumber":367,"author":{"gitId":"jessicajacelyn"},"content":"        2. Users, who are fast-typers, can enter information at once, increasing efficiency.","lastModifiedDate":"2022-03-25"},{"lineNumber":368,"author":{"gitId":"jessicajacelyn"},"content":"    * Cons: More prone to typo errors.","lastModifiedDate":"2022-03-25"},{"lineNumber":369,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":370,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":371,"author":{"gitId":"seksek13"},"content":"* **Alternative 2:** System prompts and user input information one at a time","lastModifiedDate":"2022-03-22"},{"lineNumber":372,"author":{"gitId":"jessicajacelyn"},"content":"    * Pros: Easier for user to view their input, reducing typing errors.","lastModifiedDate":"2022-03-25"},{"lineNumber":373,"author":{"gitId":"seksek13"},"content":"    * Cons: Less responsive as user needs to wait for the system to validate the information entered one at a time before prompting the user to key in the next information.","lastModifiedDate":"2022-03-22"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":375,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"FindAppointments\"\u003e\u003c/a\u003e4.6. Find Appointments Feature","lastModifiedDate":"2022-03-27"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":377,"author":{"gitId":"yunbinmo"},"content":"#### Implementation","lastModifiedDate":"2022-03-27"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":379,"author":{"gitId":"yunbinmo"},"content":"The Find Appointments Feature will be facilitated by `FindAppointmentCommand` which extends `Command` with its own execution logic, the following command is supported:","lastModifiedDate":"2022-03-27"},{"lineNumber":380,"author":{"gitId":"yunbinmo"},"content":"* find -a KEYWORD [MORE_KEYWORDS]","lastModifiedDate":"2022-03-27"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":382,"author":{"gitId":"yunbinmo"},"content":"This command will be parsed by the `AddressBookParser` and then handled by the `FindAppointmentCommandParser`, which then returns an executable FindAppointmentCommand if the input is valid.","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"yunbinmo"},"content":"Given below is an example usage scenario and how the `FindAppointmentCommand` is processed at each step.","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":386,"author":{"gitId":"yunbinmo"},"content":"Step 1. The user launches the application and executes `find -a Bugis`","lastModifiedDate":"2022-03-27"},{"lineNumber":387,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":388,"author":{"gitId":"yunbinmo"},"content":"Step 2. The LogicManager receives the input from `UI#MainWindow` and calls `AddressBookParser#parseCommand()`, and determines that it is a command related to `Appointment`.","lastModifiedDate":"2022-03-27"},{"lineNumber":389,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":390,"author":{"gitId":"yunbinmo"},"content":"Step 3. The inputs are directed to `AddressBookParser#parseAppointmentCommand` where the `FindAppointmentCommandParser` is invoked.","lastModifiedDate":"2022-03-27"},{"lineNumber":391,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":392,"author":{"gitId":"yunbinmo"},"content":"Step 4. A `FindAppointmentCommand` object is returned to `LogicManager`, it then gets executed where `ModelManager` will update the `filteredAppointmentList` using the keyword.","lastModifiedDate":"2022-03-27"},{"lineNumber":393,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":394,"author":{"gitId":"yunbinmo"},"content":"Step 5. `MainWindow` will update the `AppointmentListPanel` to show the appointments whose description contains the keyword.","lastModifiedDate":"2022-03-27"},{"lineNumber":395,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":396,"author":{"gitId":"yunbinmo"},"content":"#### Design considerations","lastModifiedDate":"2022-03-27"},{"lineNumber":397,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":398,"author":{"gitId":"yunbinmo"},"content":"**Aspect: How to filter the appointment list:**","lastModifiedDate":"2022-03-27"},{"lineNumber":399,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":400,"author":{"gitId":"yunbinmo"},"content":"* **Alternative 1 (current choice):** Finds appointments by keyword","lastModifiedDate":"2022-03-27"},{"lineNumber":401,"author":{"gitId":"yunbinmo"},"content":"    * Pros: The filtered result tends to be more relevant.","lastModifiedDate":"2022-03-27"},{"lineNumber":402,"author":{"gitId":"yunbinmo"},"content":"    * Cons: User must enter the keyword correctly and completely to locate the desired appointments (partial words would not be matched).","lastModifiedDate":"2022-03-27"},{"lineNumber":403,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":404,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":405,"author":{"gitId":"yunbinmo"},"content":"* **Alternative 2:** Finds appointment by partial/complete keyword or date and time","lastModifiedDate":"2022-03-27"},{"lineNumber":406,"author":{"gitId":"yunbinmo"},"content":"    * Pros: More friendly to use when user cannot remember the full search term to use.","lastModifiedDate":"2022-03-27"},{"lineNumber":407,"author":{"gitId":"yunbinmo"},"content":"    * Cons: ","lastModifiedDate":"2022-03-27"},{"lineNumber":408,"author":{"gitId":"yunbinmo"},"content":"      * Filtering by date and time does not add much value since `sort -a` command already exists.","lastModifiedDate":"2022-03-27"},{"lineNumber":409,"author":{"gitId":"yunbinmo"},"content":"      * User might get less relevant filtered result.","lastModifiedDate":"2022-03-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":411,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"doc\"\u003e\u003c/a\u003e**5. Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2022-03-25"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"scope\"\u003e\u003c/a\u003eProduct scope","lastModifiedDate":"2022-03-25"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":430,"author":{"gitId":"jessicajacelyn"},"content":"* has a need to manage a significant number of clients","lastModifiedDate":"2022-02-24"},{"lineNumber":431,"author":{"gitId":"jessicajacelyn"},"content":"* has a need to manage and schedule numerous appointments","lastModifiedDate":"2022-02-24"},{"lineNumber":432,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":434,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"jessicajacelyn"},"content":"**Value proposition**: manage clients and appointments faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-02-24"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"userStories\"\u003e\u003c/a\u003eUser stories","lastModifiedDate":"2022-03-25"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"| Priority | As a …​                                        | I want to …​                  | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"yunbinmo"},"content":"|----------|------------------------------------------------|-------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-03-22"},{"lineNumber":445,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                       | see usage instructions        | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"jessicajacelyn"},"content":"| `* * *`  | insurance agent                                | add a new client              | manage clients in the application                                      |","lastModifiedDate":"2022-02-28"},{"lineNumber":447,"author":{"gitId":"jessicajacelyn"},"content":"| `* * *`  | insurance agent                                | delete a client               | remove entries that I no longer need                                   |","lastModifiedDate":"2022-02-28"},{"lineNumber":448,"author":{"gitId":"zzkzzzz"},"content":"| `* * *`  | insurance agent                                | find a client by name         | locate details of clients without having to go through the entire list |","lastModifiedDate":"2022-03-20"},{"lineNumber":449,"author":{"gitId":"jessicajacelyn"},"content":"| `* * *`  | insurance agent                                | list all clients              | view clients that are in my contact                                    |","lastModifiedDate":"2022-02-28"},{"lineNumber":450,"author":{"gitId":"jessicajacelyn"},"content":"| `* * *`  | insurance agent                                | add an insurance              | manage all insurances in the apllication                               |","lastModifiedDate":"2022-03-21"},{"lineNumber":451,"author":{"gitId":"jessicajacelyn"},"content":"| `* * *`  | insurance agent                                | edit an insurance             | make changes to insurance saved in the application                     |","lastModifiedDate":"2022-03-21"},{"lineNumber":452,"author":{"gitId":"seksek13"},"content":"| `* * *`  | insurance agent                                | list all insurances            | view all that I have stored in the application                         |","lastModifiedDate":"2022-03-22"},{"lineNumber":453,"author":{"gitId":"zzkzzzz"},"content":"| `* * *`  | insurance agent                                | delete an insurance           | remove entries that I no longer need                           |","lastModifiedDate":"2022-04-07"},{"lineNumber":454,"author":{"gitId":"zzkzzzz"},"content":"| `* * *`  | insurance agent                                | find insurances by title            | locate insurances without having to go through the entire list                         |","lastModifiedDate":"2022-04-07"},{"lineNumber":455,"author":{"gitId":"zzkzzzz"},"content":"| `* * *`  | insurance agent                                    | add a record to client        | keep a record of the insurances that the client have                   |","lastModifiedDate":"2022-03-04"},{"lineNumber":456,"author":{"gitId":"zzkzzzz"},"content":"| `* * *`  | insurance agent                                | delete a record               | remove entries that I no longer need                                   |","lastModifiedDate":"2022-03-21"},{"lineNumber":457,"author":{"gitId":"jessicajacelyn"},"content":"| `* * *`  | insurance agent                                | edit a record                 | make changes to record saved in the application                        |","lastModifiedDate":"2022-03-21"},{"lineNumber":458,"author":{"gitId":"seksek13"},"content":"| `* * *`  | insurance agent                                | list all records              | view records that are I have with my clients                                    |","lastModifiedDate":"2022-03-22"},{"lineNumber":459,"author":{"gitId":"zzkzzzz"},"content":"| `*`      | insurance agent want to check records     | sort record by start/end date | locate almost expired/newest records easily                            |","lastModifiedDate":"2022-03-21"},{"lineNumber":460,"author":{"gitId":"zzkzzzz"},"content":"| `* * *`    | insurance agent frequently having appointments | view all appointments         | be reminded of all the meetings I have with my clients                 |","lastModifiedDate":"2022-03-04"},{"lineNumber":461,"author":{"gitId":"yunbinmo"},"content":"| `* * *`    | insurance agent frequently having appointments | add new appointments          | note down any future meetings I have with my client                    |","lastModifiedDate":"2022-02-25"},{"lineNumber":462,"author":{"gitId":"yunbinmo"},"content":"| `* * *`    | insurance agent frequently having appointments | delete an appointment         | get rid of any canceled/completed appointments to avoid confusion      |","lastModifiedDate":"2022-02-25"},{"lineNumber":463,"author":{"gitId":"yunbinmo"},"content":"| `* * *`    | insurance agent frequently having appointments | edit an appointment           | amend appointment details to suit clients\u0027 needs                       |","lastModifiedDate":"2022-03-22"},{"lineNumber":464,"author":{"gitId":"yunbinmo"},"content":"| `* * *`    | insurance agent frequently having appointments | find an appointment           | quickly locate a related appointment                                   |","lastModifiedDate":"2022-03-22"},{"lineNumber":465,"author":{"gitId":"yunbinmo"},"content":"| `* * *`    | insurance agent frequently having appointments | sort appointments             | prioritize more urgent appointments                                    |","lastModifiedDate":"2022-03-22"},{"lineNumber":466,"author":{"gitId":"yunbinmo"},"content":"| `* * *`    | insurance agent frequently having appointments | clear all appointments             | have cleaner view of appointments after a long time                                    |","lastModifiedDate":"2022-04-07"},{"lineNumber":467,"author":{"gitId":"jessicajacelyn"},"content":"| `* * *`  | insurance agent                                | view passed appointments      | know account my meetups with my clients                                |","lastModifiedDate":"2022-03-21"},{"lineNumber":468,"author":{"gitId":"jessicajacelyn"},"content":"| `* * *`  | insurance agent                                | view expired records          | refer to passed records in case clients want to know/renew insurance   |","lastModifiedDate":"2022-03-21"},{"lineNumber":469,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":470,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"usecases\"\u003e\u003c/a\u003eUse cases","lastModifiedDate":"2022-03-25"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"zzkzzzz"},"content":"(For all use cases below, the **System** is the `Mr Agent` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-20"},{"lineNumber":475,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":476,"author":{"gitId":"yunbinmo"},"content":"**Use case: Add a client**","lastModifiedDate":"2022-02-28"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":478,"author":{"gitId":"yunbinmo"},"content":"**MSS**","lastModifiedDate":"2022-02-28"},{"lineNumber":479,"author":{"gitId":"yunbinmo"},"content":"1. User enters command and arguments to add new client.","lastModifiedDate":"2022-02-28"},{"lineNumber":480,"author":{"gitId":"yunbinmo"},"content":"2. Mr Agent shows success message for adding client.","lastModifiedDate":"2022-02-28"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":482,"author":{"gitId":"yunbinmo"},"content":"**Extensions**","lastModifiedDate":"2022-02-28"},{"lineNumber":483,"author":{"gitId":"yunbinmo"},"content":"* 2a. The argument(s) are incomplete.","lastModifiedDate":"2022-02-28"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":485,"author":{"gitId":"yunbinmo"},"content":"    * 2a1. Mr Agent shows an error message.","lastModifiedDate":"2022-02-28"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":487,"author":{"gitId":"yunbinmo"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-28"},{"lineNumber":488,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":489,"author":{"gitId":"yunbinmo"},"content":"**Use case: Edit a client**","lastModifiedDate":"2022-02-28"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":493,"author":{"gitId":"jessicajacelyn"},"content":"1.  User requests to list clients.","lastModifiedDate":"2022-02-25"},{"lineNumber":494,"author":{"gitId":"zzkzzzz"},"content":"2.  Mr Agent shows a list of clients.","lastModifiedDate":"2022-02-23"},{"lineNumber":495,"author":{"gitId":"zzkzzzz"},"content":"3.  User requests to edit a specific client by index in the list and enters requested details.","lastModifiedDate":"2022-02-23"},{"lineNumber":496,"author":{"gitId":"zzkzzzz"},"content":"4.  Mr Agent updates the client.","lastModifiedDate":"2022-02-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":508,"author":{"gitId":"zzkzzzz"},"content":"    * 3a1. Mr Agent shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":511,"author":{"gitId":"zzkzzzz"},"content":"      ","lastModifiedDate":"2022-02-23"},{"lineNumber":512,"author":{"gitId":"zzkzzzz"},"content":"* 3b. Mr Agent detects an error in the entered data.","lastModifiedDate":"2022-02-23"},{"lineNumber":513,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":514,"author":{"gitId":"zzkzzzz"},"content":"    * 3a1. Mr Agent shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":516,"author":{"gitId":"zzkzzzz"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-02-23"},{"lineNumber":517,"author":{"gitId":"zzkzzzz"},"content":"    ","lastModifiedDate":"2022-02-23"},{"lineNumber":518,"author":{"gitId":"jessicajacelyn"},"content":"**Use case: List a client**","lastModifiedDate":"2022-02-25"},{"lineNumber":519,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":520,"author":{"gitId":"jessicajacelyn"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":521,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":522,"author":{"gitId":"jessicajacelyn"},"content":"1.  User requests to list clients","lastModifiedDate":"2022-02-25"},{"lineNumber":523,"author":{"gitId":"jessicajacelyn"},"content":"2.  Mr Agent shows a list of clients","lastModifiedDate":"2022-02-25"},{"lineNumber":524,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":525,"author":{"gitId":"jessicajacelyn"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":526,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":527,"author":{"gitId":"jessicajacelyn"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":528,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":529,"author":{"gitId":"jessicajacelyn"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-25"},{"lineNumber":530,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":531,"author":{"gitId":"jessicajacelyn"},"content":"  Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":532,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"seksek13"},"content":"**Use case: Delete a client**","lastModifiedDate":"2022-02-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"jessicajacelyn"},"content":"1.  User requests to list clients","lastModifiedDate":"2022-02-25"},{"lineNumber":539,"author":{"gitId":"seksek13"},"content":"2.  Mr Agent shows a list of clients","lastModifiedDate":"2022-02-23"},{"lineNumber":540,"author":{"gitId":"seksek13"},"content":"3.  User requests to delete a specific client by index in the list","lastModifiedDate":"2022-02-23"},{"lineNumber":541,"author":{"gitId":"seksek13"},"content":"4.  Mr Agent deletes the client","lastModifiedDate":"2022-02-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"seksek13"},"content":"    * 3a1. Mr Agent shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"yunbinmo"},"content":"**Use case: Sort appointments**","lastModifiedDate":"2022-03-22"},{"lineNumber":558,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":559,"author":{"gitId":"yunbinmo"},"content":"**MSS**","lastModifiedDate":"2022-03-22"},{"lineNumber":560,"author":{"gitId":"yunbinmo"},"content":"1. User enters command and arguments to sort appointments ascendingly.","lastModifiedDate":"2022-03-22"},{"lineNumber":561,"author":{"gitId":"yunbinmo"},"content":"2. Mr Agent shows success message for sorting appointments.","lastModifiedDate":"2022-03-22"},{"lineNumber":562,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":563,"author":{"gitId":"yunbinmo"},"content":"**Extensions**","lastModifiedDate":"2022-03-22"},{"lineNumber":564,"author":{"gitId":"yunbinmo"},"content":"* 1a. The argument(s) are incomplete.","lastModifiedDate":"2022-03-22"},{"lineNumber":565,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":566,"author":{"gitId":"yunbinmo"},"content":"    * 1a1. Mr Agent shows an error message and correct command usage.","lastModifiedDate":"2022-03-22"},{"lineNumber":567,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":568,"author":{"gitId":"yunbinmo"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-03-22"},{"lineNumber":569,"author":{"gitId":"yunbinmo"},"content":"    ","lastModifiedDate":"2022-03-22"},{"lineNumber":570,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"Non-Functional\"\u003e\u003c/a\u003eNon-Functional Requirements","lastModifiedDate":"2022-03-25"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"zzkzzzz"},"content":"2.  Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-20"},{"lineNumber":576,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"zzkzzzz"},"content":"4.  No network connection needed.","lastModifiedDate":"2022-02-24"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"zzkzzzz"},"content":"### \u003ca id\u003d\"Glossary\"\u003e\u003c/a\u003eGlossary","lastModifiedDate":"2022-03-25"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"jessicajacelyn"},"content":"* **Appointment:** To-dos created by user, with description, data and time specified.","lastModifiedDate":"2022-04-07"},{"lineNumber":584,"author":{"gitId":"jessicajacelyn"},"content":"* **Appointment History:** Appointments that have passed (before the current time).","lastModifiedDate":"2022-04-07"},{"lineNumber":585,"author":{"gitId":"jessicajacelyn"},"content":"* **Client**: Contacts that needs to be managed by user.","lastModifiedDate":"2022-04-07"},{"lineNumber":586,"author":{"gitId":"jessicajacelyn"},"content":"* **Expired Record:** Records that have passed its end date.","lastModifiedDate":"2022-04-07"},{"lineNumber":587,"author":{"gitId":"jessicajacelyn"},"content":"* **Insurance category:** Types of insurance, e.g. health, financial, life.","lastModifiedDate":"2022-04-07"},{"lineNumber":588,"author":{"gitId":"jessicajacelyn"},"content":"* **Insurance code:** Unique IDs attached to each insurance.","lastModifiedDate":"2022-04-07"},{"lineNumber":589,"author":{"gitId":"jessicajacelyn"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2022-04-07"},{"lineNumber":590,"author":{"gitId":"jessicajacelyn"},"content":"* **Record:** Record of insurance that is bought by a client, i.e. when a client purchase an insurance, a new record will be created and saved in the database with the client and insurance\u0027s IDs. Each record is unique.","lastModifiedDate":"2022-04-07"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"manual\"\u003e\u003c/a\u003eInstructions for manual testing","lastModifiedDate":"2022-03-25"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"zzkzzzz"},"content":"### Deleting a client","lastModifiedDate":"2022-03-20"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"jessicajacelyn"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2022-03-30"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"zzkzzzz"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2022-03-20"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"zzkzzzz"},"content":"   1. Test case: `delete -c 1`\u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"zzkzzzz"},"content":"   1. Test case: `delete -c 0`\u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":631,"author":{"gitId":"jessicajacelyn"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-30"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"zzkzzzz"},"content":"   1. Other incorrect delete commands to try: `delete -c`, `delete -c x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":634,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"seksek13":46,"yunbinmo":91,"jessicajacelyn":105,"-":276,"zzkzzzz":126}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"By: Team CS2103-F09-3  (Mo YunBin, Jessica Jacelyn, Koh Su En, Zheng ZiKang)","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"- [1. Introduction](#Introduction)","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"- [2. Quick Start](#Quick)","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"- [3. Features](#features)","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"  - [3.1. Client Management](#client-management)","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    - [Adding a client: `add -c`](#add-client)","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"    - [Listing all clients : `list -c`](#list-client)","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    - [Deleting a client : `delete -c`](#delete-client)","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    - [Editing a client: `edit -c`](#edit-client)","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"    - [Locating client by name: `find -c`](#find-client)","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"  - [3.2. Insurance](#insurance)","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    - [Adding an insurance: `add -i`](#add-insurance)","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    - [Listing all insurances : `list -i`](#list-insurance)","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    - [Deleting an insurance : `delete -i`](#delete-insurance)","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    - [Editing an insurance : `edit -i`](#edit-insurance)","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    - [Finding an insurances: `find -i`](#find-insurance)","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"  - [3.3. Record](#record)","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    - [Adding a record: `add -r`](#add-record)  ","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    - [Deleting a record: `delete -r`](#delete-record)","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    - [Listing all records: `list -r`](#list-record)","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    - [Editing a record: `edit -r`](#edit-record)","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"    - [Finding a record by insurance name: `find -r`](#find-record)","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    - [Sorting records: `sort -r`](#sort-record)  ","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"  - [3.4. History](#history)","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"    - [Listing all appointments history: `list -h`](#list-appointmentHistory)","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"    - [Listing all expired records: `list -e`](#list-expiredRecords)","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"  - [3.5. Appointment](#appointment)","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"    - [Adding an appointment: `add -a`](#add-appointment)","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"    - [Listing all appointments: `list -a`](#list-appointment)","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"    - [Deleting an appointment: `delete -a`](#delete-appointment)","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"    - [Editing an appointment: `edit -a`](#edit-appointment)","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    - [Locating appointments by keyword: `find -a`](#find-appointment)","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    - [Sorting appointments: `sort -a`](#sort-appointment)","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"    - [Clear appointments: `clear -a`](#clear-appointment)","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"  - [3.6. Others](#others)","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"- [4. FAQ](#FAQ)","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"- [5. Command Summary](#Summary)","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Introduction\"\u003e\u003c/a\u003e**1. Introduction**","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"Mr. Agent is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Mr. Agent can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Quick\"\u003e\u003c/a\u003e**2. Quick start**","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"1. Download the latest `Mr Agent.jar` from [here](https://github.com/AY2122S2-CS2103-F09-3/tp/releases).","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. \u003cbr\u003eNote how the app contains some sample data, so before using the application for yourself, you should type **`clear`** to clear them.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"   * **`list -c`** : Lists all clients.","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"   * `add -c n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/friends t/owesMoney` : Adds a client named `John Doe` to Mr. Agent.","lastModifiedDate":"2022-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"jessicajacelyn"},"content":"   * **`delete`**`-c 3` : Deletes the 3rd client shown in the current list.","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"   * **`clear`** : Deletes all entry in Mr. Agent (use with caution!).","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":":exclamation:Please do not delete any json file in the generated `data` folder, deletion of a single data file could result in unexpected inconsistencies between data entries in the application.","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"yunbinmo"},"content":"## \u003ca id\u003d\"features\"\u003e\u003c/a\u003e**3. Features**","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"jessicajacelyn"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"jessicajacelyn"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"yunbinmo"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) are not allowed.\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"yunbinmo"},"content":"## \u003ca id\u003d\"client-management\"\u003e\u003c/a\u003e3.1. Client Management","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"add-client\"\u003e\u003c/a\u003eAdding a Client: `add -c`","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"Adds a client to Mr. Agent.","lastModifiedDate":"2022-02-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"Note that client name must be unique. The client will be only identified by client name.","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"Format: `add -c n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2022-04-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"A client can have any number of tags (including 0)","lastModifiedDate":"2022-02-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"* `add -c n/JunJie p/98765432 e/junjie@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2022-04-03"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"* `add -c n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/NUS`","lastModifiedDate":"2022-04-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"list-client\"\u003e\u003c/a\u003eListing all Client : `list -c`","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"Shows a list of all clients in the Mr. Agent.","lastModifiedDate":"2022-02-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"Format: `list -c`","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"delete-client\"\u003e\u003c/a\u003eDeleting a Client : `delete -c`","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"Deletes the specified client from the Mr. Agent.","lastModifiedDate":"2022-02-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"Format: `delete -c INDEX`","lastModifiedDate":"2022-02-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2022-02-22"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-02-22"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-22"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"* Note that if a client is deleted, the records belong to this client will be deleted at same time.","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-02-22"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"* `list -c` followed by `delete -c 2` deletes the 2nd person in the Mr. Agent.","lastModifiedDate":"2022-02-22"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"* `find -c Junjie` followed by `delete -c 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-02-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":145,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"edit-client\"\u003e\u003c/a\u003eEditing a Client : `edit -c`","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"Edits an existing client in the Mr. Agent.","lastModifiedDate":"2022-02-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"Format: `edit -c INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-04-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"zzkzzzz"},"content":"*  `edit -c 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"zzkzzzz"},"content":"*  `edit -c 2 n/Betsy Crower t/` Edits the title of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"find-client\"\u003e\u003c/a\u003eLocating Clients by Name: `find -c`","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"jessicajacelyn"},"content":"Finds client whose name contain any of the given keywords.","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"zzkzzzz"},"content":"Format: `find -c KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-02-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"* The search is case-insensitive. e.g `mike` will match `Mike`","lastModifiedDate":"2022-02-22"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"* The order of the keywords does not matter. e.g. `Lee Junjie` will match `Junjie Lee`","lastModifiedDate":"2022-02-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"zzkzzzz"},"content":"* Only full words will be matched e.g. `Le` will not match `Lee`","lastModifiedDate":"2022-02-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"zzkzzzz"},"content":"  e.g. `Lee Junjie` will return `Wong Junjie`, `Lee Yang`","lastModifiedDate":"2022-02-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-28"},{"lineNumber":176,"author":{"gitId":"zzkzzzz"},"content":"* `find -c John` returns `john` and `John Doe`","lastModifiedDate":"2022-02-28"},{"lineNumber":177,"author":{"gitId":"seksek13"},"content":"* `find -c alice david` returns `Alice Yeoh`, `David Li`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":178,"author":{"gitId":"seksek13"},"content":"  ![result for \u0027find alex david\u0027](images/findAliceDavidResult.png)","lastModifiedDate":"2022-04-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"yunbinmo"},"content":"## \u003ca id\u003d\"insurance\"\u003e\u003c/a\u003e3.2. Insurance","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"add-insurance\"\u003e\u003c/a\u003eAdding an insurance : `add -i`","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":186,"author":{"gitId":"jessicajacelyn"},"content":"Adds a new type of insurance to Mr. Agent.","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":188,"author":{"gitId":"seksek13"},"content":"Format: `add -i  t/TITLE p/PRICE`","lastModifiedDate":"2022-04-02"},{"lineNumber":189,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":190,"author":{"gitId":"zzkzzzz"},"content":"* Adds an insurance type as specified in the `TITLE` with its `PRICE`","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"zzkzzzz"},"content":"* The price must be positive decimal number including 0","lastModifiedDate":"2022-04-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"zzkzzzz"},"content":"* `add -i t/hosipitalision p/1999`","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"zzkzzzz"},"content":"* `add -i t/terminal_illness p/199.99`","lastModifiedDate":"2022-04-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":197,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"list-insurance\"\u003e\u003c/a\u003eListing all insurances : `list -i`","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":199,"author":{"gitId":"jessicajacelyn"},"content":"Shows a list of all insurances in Mr. Agent.","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":201,"author":{"gitId":"zzkzzzz"},"content":"Format: `list -i`","lastModifiedDate":"2022-02-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":203,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"delete-insurance\"\u003e\u003c/a\u003eDeleting an insurance : `delete -i`","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":205,"author":{"gitId":"jessicajacelyn"},"content":"Deletes the specified insurance from Mr. Agent.","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":207,"author":{"gitId":"zzkzzzz"},"content":"Note that if an insurance is deleted, the records related to this insurance will be deleted. ","lastModifiedDate":"2022-04-02"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":209,"author":{"gitId":"zzkzzzz"},"content":"Format: `delete -i INDEX`","lastModifiedDate":"2022-02-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":211,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"edit-insurance\"\u003e\u003c/a\u003eEditing an insurance : `edit -i`","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"zzkzzzz"},"content":"Edits an existing insurance in the Mr. Agent.","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"zzkzzzz"},"content":"Format: `edit -i INDEX [t/TITLE] [p/PRICE]`","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"zzkzzzz"},"content":"* Edits the insurance at the specified `INDEX`. The index refers to the index number shown in the displayed insurance list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"zzkzzzz"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"zzkzzzz"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"zzkzzzz"},"content":"*  `edit -i 1 t/MOTOR INSURANCE V2` Edits the title of the 1st insurance to be `MOTOR INSURANCE V2`.","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"zzkzzzz"},"content":"*  `edit -i 2 p/1999` Edits the price of the 2nd insurance to be `1999`.","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"find-insurance\"\u003e\u003c/a\u003eLocating insurances by title : `find -i`","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":227,"author":{"gitId":"yunbinmo"},"content":"Finds insurances whose title contain any of the given keywords.","lastModifiedDate":"2022-04-02"},{"lineNumber":228,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":229,"author":{"gitId":"jessicajacelyn"},"content":"Format: `find -i KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-17"},{"lineNumber":230,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":231,"author":{"gitId":"zzkzzzz"},"content":"* The search is case-insensitive. e.g `car` will match `Car`.","lastModifiedDate":"2022-04-02"},{"lineNumber":232,"author":{"gitId":"zzkzzzz"},"content":"* The order of the keywords does not matter. e.g. `car home` will match `home car`.","lastModifiedDate":"2022-04-02"},{"lineNumber":233,"author":{"gitId":"zzkzzzz"},"content":"* Only the insurance title is searched.","lastModifiedDate":"2022-04-02"},{"lineNumber":234,"author":{"gitId":"zzkzzzz"},"content":"* Only full words will be matched e.g. `insurance` will not match `reinsurance` ","lastModifiedDate":"2022-04-02"},{"lineNumber":235,"author":{"gitId":"zzkzzzz"},"content":"* Insurances matching at least one keyword will be returned (i.e. OR search). ","lastModifiedDate":"2022-04-02"},{"lineNumber":236,"author":{"gitId":"zzkzzzz"},"content":"e.g. `motor home` will return `Motor Insurance` and `Home Insurance`","lastModifiedDate":"2022-04-02"},{"lineNumber":237,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":238,"author":{"gitId":"yunbinmo"},"content":"## \u003ca id\u003d\"record\"\u003e\u003c/a\u003e3.3. Record","lastModifiedDate":"2022-03-29"},{"lineNumber":239,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"add-record\"\u003e\u003c/a\u003eAdding a record : `add -r`","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"jessicajacelyn"},"content":"Adds a record to a client.","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":243,"author":{"gitId":"seksek13"},"content":"Format: `add -r c/CLIENT_INDEX i/INSURANCE_INDEX sd/START_DATE ed/END_DATE`","lastModifiedDate":"2022-04-02"},{"lineNumber":244,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":245,"author":{"gitId":"seksek13"},"content":"* START_DATE and END_DATE are in the format of dd-MM-yyyy","lastModifiedDate":"2022-02-23"},{"lineNumber":246,"author":{"gitId":"seksek13"},"content":"* Each client can have mutiple same type of insurance but the previous insurance should be expired before adding the new record. For example, if `add -r c/1 i/1 sd/02-01-2021 ed/01-03-2026` exist in app, which means that the insurance type 1 will be expired on 01-03-2026,","lastModifiedDate":"2022-04-09"},{"lineNumber":247,"author":{"gitId":"seksek13"},"content":"  user cannot `add -r c/1 i/1 sd/01-03-2025 ed/01-03-2026` as the `STARTDATE` of this command is before the `ENDDATE` of the previous command.","lastModifiedDate":"2022-04-09"},{"lineNumber":248,"author":{"gitId":"seksek13"},"content":"* Client index and Insurance index starts from 1 ","lastModifiedDate":"2022-03-18"},{"lineNumber":249,"author":{"gitId":"zzkzzzz"},"content":"* Note that insurance/client index will be based on a filtered list. ","lastModifiedDate":"2022-04-02"},{"lineNumber":250,"author":{"gitId":"zzkzzzz"},"content":"So you can `find -i`/`find -c` to find insurance/client then add record base on the filtered result.","lastModifiedDate":"2022-04-02"},{"lineNumber":251,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":252,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":253,"author":{"gitId":"seksek13"},"content":"Examples: ","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"seksek13"},"content":"* `add -r c/10 i/2  sd/23-02-2022 ed/23-02-2024` , adds an insurance 2 to index 10 with start date from 23-02-2022 and end date at 23-02-2024","lastModifiedDate":"2022-03-10"},{"lineNumber":255,"author":{"gitId":"seksek13"},"content":"* `add -r c/25 i/2  sd/21-11-2021 ed/21-11-2023`","lastModifiedDate":"2022-03-10"},{"lineNumber":256,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":257,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":258,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"delete-record\"\u003e\u003c/a\u003eDeleting a record : `delete -r`","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":260,"author":{"gitId":"jessicajacelyn"},"content":"Deletes the specified record from Mr. Agent.","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":262,"author":{"gitId":"zzkzzzz"},"content":"Format: `delete -r RECORD_INDEX`","lastModifiedDate":"2022-02-28"},{"lineNumber":263,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":264,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"list-record\"\u003e\u003c/a\u003eListing all records : `list -r`","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":266,"author":{"gitId":"seksek13"},"content":"Shows a list of all unexpired records in Mr. Agent.","lastModifiedDate":"2022-04-02"},{"lineNumber":267,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":268,"author":{"gitId":"seksek13"},"content":"Format: `list -r`","lastModifiedDate":"2022-03-18"},{"lineNumber":269,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":270,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"edit-record\"\u003e\u003c/a\u003eEditing a record : `edit -r` ","lastModifiedDate":"2022-03-29"},{"lineNumber":271,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":272,"author":{"gitId":"jessicajacelyn"},"content":"Edits an existing record in Mr. Agent.","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":274,"author":{"gitId":"seksek13"},"content":"Format: `edit -r INDEX [c/CLIENT_INDEX] [i/INSURANCE_INDEX] [sd/START_DATE] [ed/END_DATE]`","lastModifiedDate":"2022-03-18"},{"lineNumber":275,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":276,"author":{"gitId":"seksek13"},"content":"* Edits the record at the specified `INDEX`. The index refers to the index number shown in the displayed record list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-18"},{"lineNumber":277,"author":{"gitId":"seksek13"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-18"},{"lineNumber":278,"author":{"gitId":"seksek13"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-18"},{"lineNumber":279,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":280,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":281,"author":{"gitId":"jessicajacelyn"},"content":"Example:","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"seksek13"},"content":"*  `edit -r 1 c/2 i/2` Edits the client and the type of insurance of the 1st record to be client 2 and insurance 2 respectively.","lastModifiedDate":"2022-03-18"},{"lineNumber":283,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":284,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"find-record\"\u003e\u003c/a\u003eFinding records by keyword : `find -r`","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":286,"author":{"gitId":"yunbinmo"},"content":"Find records whose insurance name contains any of the given keyword.","lastModifiedDate":"2022-04-02"},{"lineNumber":287,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":288,"author":{"gitId":"seksek13"},"content":"Format: `find -r KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-18"},{"lineNumber":289,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":290,"author":{"gitId":"jessicajacelyn"},"content":"* The search is case-insensitive, e.g. `health` will match `Health`","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"seksek13"},"content":"* The order of the keywords does not matter. e.g. `critical illness ` will match `illnes critical`","lastModifiedDate":"2022-03-18"},{"lineNumber":292,"author":{"gitId":"jessicajacelyn"},"content":"* Only the insurance name is searched","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"jessicajacelyn"},"content":"* Only full words will be matched, e.g. `hea` will not match `health`","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"jessicajacelyn"},"content":"* Records matching at least one keyword will be returned (i.e. `OR` search)","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":296,"author":{"gitId":"jessicajacelyn"},"content":"Example: ","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"seksek13"},"content":"* `find -r health` ","lastModifiedDate":"2022-03-18"},{"lineNumber":298,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":299,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"sort-record\"\u003e\u003c/a\u003eSort records : `sort -r`","lastModifiedDate":"2022-03-29"},{"lineNumber":300,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"jessicajacelyn"},"content":"Sorts the record list in ascending or descending order by start/end date.","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"zzkzzzz"},"content":"Format: `sort -r SORT_OPTION`","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"jessicajacelyn"},"content":"* To sort in ascending order by start date, replace SORT_OPTION with `sa`","lastModifiedDate":"2022-03-29"},{"lineNumber":305,"author":{"gitId":"jessicajacelyn"},"content":"* To sort in descending order by start date, replace SORT_OPTION with `sd`","lastModifiedDate":"2022-03-29"},{"lineNumber":306,"author":{"gitId":"jessicajacelyn"},"content":"* To sort in ascending order by end date, replace SORT_OPTION with `ea`","lastModifiedDate":"2022-03-29"},{"lineNumber":307,"author":{"gitId":"jessicajacelyn"},"content":"* To sort in descending order by end date, replace SORT_OPTION with `ed`","lastModifiedDate":"2022-03-29"},{"lineNumber":308,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"jessicajacelyn"},"content":"Example:","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"zzkzzzz"},"content":"*  `sort -r sa` Sorts the records list by start date in ascending order.","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"yunbinmo"},"content":":information_source:The sort operation will be performed on the record list being displayed at that point of time. To sort the whole record list, issue a `list -r` command to list all the record first.","lastModifiedDate":"2022-04-02"},{"lineNumber":313,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":314,"author":{"gitId":"yunbinmo"},"content":"## \u003ca id\u003d\"history\"\u003e\u003c/a\u003e3.4. History","lastModifiedDate":"2022-03-29"},{"lineNumber":315,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":316,"author":{"gitId":"jessicajacelyn"},"content":"### \u003ca id\u003d\"list-appointmentHistory\"\u003e\u003c/a\u003eListing appointment history : `list -h`","lastModifiedDate":"2022-03-29"},{"lineNumber":317,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":318,"author":{"gitId":"jessicajacelyn"},"content":"Shows a list of all passed appointments.","lastModifiedDate":"2022-03-09"},{"lineNumber":319,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":320,"author":{"gitId":"jessicajacelyn"},"content":"Format: `list -h`","lastModifiedDate":"2022-03-17"},{"lineNumber":321,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":322,"author":{"gitId":"jessicajacelyn"},"content":"### \u003ca id\u003d\"list-expiredRecords\"\u003e\u003c/a\u003eListing expired records : `list -e`","lastModifiedDate":"2022-03-29"},{"lineNumber":323,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":324,"author":{"gitId":"jessicajacelyn"},"content":"Shows a list of all expired records.","lastModifiedDate":"2022-03-09"},{"lineNumber":325,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":326,"author":{"gitId":"jessicajacelyn"},"content":"Format: `list -e`","lastModifiedDate":"2022-03-17"},{"lineNumber":327,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":328,"author":{"gitId":"jessicajacelyn"},"content":"[//]: # (### List history by client \u0026#40;***coming soon***\u0026#41;)","lastModifiedDate":"2022-03-29"},{"lineNumber":329,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":330,"author":{"gitId":"yunbinmo"},"content":"## \u003ca id\u003d\"appointment\"\u003e\u003c/a\u003e3.5. Appointment","lastModifiedDate":"2022-03-29"},{"lineNumber":331,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":332,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"add-appointment\"\u003e\u003c/a\u003eAdding an appointment : `add -a`","lastModifiedDate":"2022-03-28"},{"lineNumber":333,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":334,"author":{"gitId":"jessicajacelyn"},"content":"Adds a new appointment with client.","lastModifiedDate":"2022-03-29"},{"lineNumber":335,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":336,"author":{"gitId":"yunbinmo"},"content":"Format: `add -a d/DESCRIPTION dt/DATETIME`","lastModifiedDate":"2022-03-06"},{"lineNumber":337,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":338,"author":{"gitId":"seksek13"},"content":"* only present or fututre `DATETIME` is allowed.","lastModifiedDate":"2022-04-02"},{"lineNumber":339,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":340,"author":{"gitId":"yunbinmo"},"content":"Examples:","lastModifiedDate":"2022-02-28"},{"lineNumber":341,"author":{"gitId":"yunbinmo"},"content":"* `add -a d/Meet James dt/20-02-2022 18:00` ","lastModifiedDate":"2022-03-17"},{"lineNumber":342,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":343,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"list-appointment\"\u003e\u003c/a\u003eListing all appointments : `list -a`","lastModifiedDate":"2022-03-28"},{"lineNumber":344,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":345,"author":{"gitId":"seksek13"},"content":"Lists all ongoing appointments in Mr. Agent.","lastModifiedDate":"2022-04-02"},{"lineNumber":346,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":347,"author":{"gitId":"yunbinmo"},"content":"Format: `list -a`","lastModifiedDate":"2022-02-28"},{"lineNumber":348,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":349,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"delete-appointment\"\u003e\u003c/a\u003eDeleting an appointment : `delete -a`","lastModifiedDate":"2022-03-28"},{"lineNumber":350,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":351,"author":{"gitId":"jessicajacelyn"},"content":"Deletes the specified appointment from Mr. Agent.","lastModifiedDate":"2022-03-29"},{"lineNumber":352,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":353,"author":{"gitId":"yunbinmo"},"content":"Format: `delete -a APPOINTMENT_INDEX`","lastModifiedDate":"2022-02-28"},{"lineNumber":354,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":355,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"edit-appointment\"\u003e\u003c/a\u003eEditing an appointment : `edit -a`","lastModifiedDate":"2022-03-28"},{"lineNumber":356,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":357,"author":{"gitId":"jessicajacelyn"},"content":"Edits an existing appointment.","lastModifiedDate":"2022-03-29"},{"lineNumber":358,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":359,"author":{"gitId":"yunbinmo"},"content":"Format: `edit -a APPOINTMENT_INDEX [d/DESCRIPTION] [dt/DATETIME]` ","lastModifiedDate":"2022-03-19"},{"lineNumber":360,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":361,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"find-appointment\"\u003e\u003c/a\u003eLocating appointments by keyword : `find -a`","lastModifiedDate":"2022-03-28"},{"lineNumber":362,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":363,"author":{"gitId":"yunbinmo"},"content":"Find appointments whose title contains any of the given keyword","lastModifiedDate":"2022-04-02"},{"lineNumber":364,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":365,"author":{"gitId":"yunbinmo"},"content":"Format: `find -a KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-18"},{"lineNumber":366,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":367,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"sort-appointment\"\u003e\u003c/a\u003eSorting appointments : `sort -a`","lastModifiedDate":"2022-03-28"},{"lineNumber":368,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":369,"author":{"gitId":"jessicajacelyn"},"content":"Sorts the appointment list ascending or descending order by time.","lastModifiedDate":"2022-03-29"},{"lineNumber":370,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":371,"author":{"gitId":"yunbinmo"},"content":"Format: `sort -a SORT_OPTION`","lastModifiedDate":"2022-03-24"},{"lineNumber":372,"author":{"gitId":"jessicajacelyn"},"content":"* To sort in ascending order, replace SORT_OPTION with `a`","lastModifiedDate":"2022-03-29"},{"lineNumber":373,"author":{"gitId":"jessicajacelyn"},"content":"* To sort in descending order, replace SORT_OPTION with `d`","lastModifiedDate":"2022-03-29"},{"lineNumber":374,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":375,"author":{"gitId":"yunbinmo"},"content":":information_source:The sort operation will be performed on the appointment list being displayed at that point of time. To sort the whole appointment list, issue a `list -a` command to list all the appointment first.","lastModifiedDate":"2022-04-02"},{"lineNumber":376,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":377,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"clear-appointment\"\u003e\u003c/a\u003eClear appointments : `clear -a`","lastModifiedDate":"2022-04-07"},{"lineNumber":378,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":379,"author":{"gitId":"yunbinmo"},"content":"Clear all appointments (including expired and unexpired ones).","lastModifiedDate":"2022-04-07"},{"lineNumber":380,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":381,"author":{"gitId":"yunbinmo"},"content":"Format: `clear -a`","lastModifiedDate":"2022-04-07"},{"lineNumber":382,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":383,"author":{"gitId":"yunbinmo"},"content":"## \u003ca id\u003d\"others\"\u003e\u003c/a\u003e3.6. Others","lastModifiedDate":"2022-03-29"},{"lineNumber":384,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"zzkzzzz"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-02-28"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"yunbinmo"},"content":"Clears all entries from the Mr. Agent. Use with caution.","lastModifiedDate":"2022-03-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"FAQ\"\u003e\u003c/a\u003e**4. FAQ**","lastModifiedDate":"2022-03-28"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"jessicajacelyn"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Mr. Agent home folder.","lastModifiedDate":"2022-03-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Summary\"\u003e\u003c/a\u003e**5. Command Summary**","lastModifiedDate":"2022-03-28"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"seksek13"},"content":"| Action                                                  | Format, Examples                                                                                                                                                        ","lastModifiedDate":"2022-04-02"},{"lineNumber":410,"author":{"gitId":"seksek13"},"content":"|---------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-04-02"},{"lineNumber":411,"author":{"gitId":"seksek13"},"content":"| **Add a client**                                        | `add -c n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add -c n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2022-04-02"},{"lineNumber":412,"author":{"gitId":"seksek13"},"content":"| **Delete a client**                                     | `delete -c INDEX`\u003cbr\u003e e.g., `delete -c 3`                                                                                                                                  ","lastModifiedDate":"2022-04-02"},{"lineNumber":413,"author":{"gitId":"seksek13"},"content":"| **Edit a client**                                       | `edit -c INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit -c 2 n/James Lee e/jameslee@example.com`                                       ","lastModifiedDate":"2022-04-02"},{"lineNumber":414,"author":{"gitId":"seksek13"},"content":"| **Find a client**                                       | `find -c KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find -c James Jake`                                                                                                           ","lastModifiedDate":"2022-04-02"},{"lineNumber":415,"author":{"gitId":"seksek13"},"content":"| **List all client**                                     | `list -c`                                                                                                                                                               ","lastModifiedDate":"2022-04-02"},{"lineNumber":416,"author":{"gitId":"seksek13"},"content":"| **Add an insurance**                                    | `add -i t/TITLE p/PRICE`                                                                                                                                                ","lastModifiedDate":"2022-04-02"},{"lineNumber":417,"author":{"gitId":"seksek13"},"content":"| **Delete an insurance**                                 | `delete -i INSURANCE_INDEX`","lastModifiedDate":"2022-04-02"},{"lineNumber":418,"author":{"gitId":"seksek13"},"content":"| **Edit an insurance**                                   | `edit -i INSURANCE_INDEX [t/TITLE] [p/PRICE]`","lastModifiedDate":"2022-04-02"},{"lineNumber":419,"author":{"gitId":"seksek13"},"content":"| **Find insurance(s)**                                   | `find -i KEYWORD [MORE_KEYWORDS]`                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2022-04-02"},{"lineNumber":420,"author":{"gitId":"seksek13"},"content":"| **List all insurance**                                  | `list -i`                                                                                                                                                               ","lastModifiedDate":"2022-04-09"},{"lineNumber":421,"author":{"gitId":"seksek13"},"content":"| **Add an appointment**                                  | `add -a d/DESCRIPTION dt/DATETIME`                                                                                                                                      ","lastModifiedDate":"2022-04-02"},{"lineNumber":422,"author":{"gitId":"seksek13"},"content":"| **Delete an appointment**                               | `delete -a APPOINTMENT_INDEX`","lastModifiedDate":"2022-04-02"},{"lineNumber":423,"author":{"gitId":"seksek13"},"content":"| **Edit an appointment**                                 | `edit -a APPOINTMENT_INDEX [d/DESCRIPTION] [dt/DATETIME]`","lastModifiedDate":"2022-04-02"},{"lineNumber":424,"author":{"gitId":"seksek13"},"content":"| **Find appointment(s)**                                 | `find -a KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-04-02"},{"lineNumber":425,"author":{"gitId":"seksek13"},"content":"| **List all appointments**                               | `list -a`                                                                                                                                                               ","lastModifiedDate":"2022-04-09"},{"lineNumber":426,"author":{"gitId":"seksek13"},"content":"| **Sort appointments in ascending order by time**        | `sort -a a`                                                                                                                                                             ","lastModifiedDate":"2022-04-02"},{"lineNumber":427,"author":{"gitId":"seksek13"},"content":"| **Sort appointments in descending order by time**       | `sort -a d`  ","lastModifiedDate":"2022-04-02"},{"lineNumber":428,"author":{"gitId":"yunbinmo"},"content":"| **Clear all appointments**                              | `clear -a` ","lastModifiedDate":"2022-04-07"},{"lineNumber":429,"author":{"gitId":"seksek13"},"content":"| **Add a record**                                        | `add -r c/CLIENT_INDEX i/INSURANCE_INDEX sd/START_DATE ed/END_DATE`                                                                                                     ","lastModifiedDate":"2022-04-02"},{"lineNumber":430,"author":{"gitId":"seksek13"},"content":"| **Delete a record**                                     | `delete -r RECORD_INDEX`                                                                                                                                                ","lastModifiedDate":"2022-04-02"},{"lineNumber":431,"author":{"gitId":"seksek13"},"content":"| **Edit a record**                                       | `edit -r INDEX [c/CLIENT_INDEX] [i/INSURANCE_INDEX] [sd/START_DATE] [ed/END_DATE]` \u003cbr\u003e e.g.,`edit -r 1 c/5`","lastModifiedDate":"2022-04-02"},{"lineNumber":432,"author":{"gitId":"seksek13"},"content":"| **Find record(s)**                                      | `find -r KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-04-02"},{"lineNumber":433,"author":{"gitId":"seksek13"},"content":"| **List all record**                                     | `list -r`                                                                                                                                                              ","lastModifiedDate":"2022-04-09"},{"lineNumber":434,"author":{"gitId":"seksek13"},"content":"| **Sort record in ascending order by start/end date**    | `sort -r sa`/ `sort -r ea`                                                                                                                                              ","lastModifiedDate":"2022-04-02"},{"lineNumber":435,"author":{"gitId":"seksek13"},"content":"| **Sort record in descending order by start/end date**   | `sort -r sd`/ `sort -r ed`                                                                                                                                              ","lastModifiedDate":"2022-04-02"},{"lineNumber":436,"author":{"gitId":"seksek13"},"content":"| **List appointment history**                            | `list -h`                                                                                                                                                               ","lastModifiedDate":"2022-04-02"},{"lineNumber":437,"author":{"gitId":"seksek13"},"content":"| **List expired records**                                | `list -e`                                                                                                                                                               ","lastModifiedDate":"2022-04-02"},{"lineNumber":438,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":439,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"seksek13":79,"yunbinmo":106,"jessicajacelyn":54,"-":122,"zzkzzzz":78}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"yunbinmo"},"content":"    content: \"Mr. Agent\";","lastModifiedDate":"2022-02-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"yunbinmo":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"title: Mr. Agent","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"[![Java CI](https://github.com/AY2122S2-CS2103-F09-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103-F09-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F09-3/tp/branch/master/graph/badge.svg?token\u003d52KJ8BFDAX)](https://codecov.io/gh/AY2122S2-CS2103-F09-3/tp)","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.md#Quick).","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yunbinmo":1,"jessicajacelyn":2,"-":15}},{"path":"docs/team/jessicajacelyn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"title: jessicajacelyn\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"- [1. New Feature](#NewFeature)","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"- [2. Code contributed](#Codecontributed)","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"- [3. Project management](#Projectmanagement)","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"- [4. Enhancements to existing features](#Existing)","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"- [5. Documentation](#Documentation)","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"## Project: Mr. Agent","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"Mr. Agent is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Mr. Agent can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"## \u003ca id\u003d\"NewFeature\"\u003e\u003c/a\u003e**1. New Features**","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"* **New Feature**: Added the ability automatically remove passed appointments from the appointment list (Pull request [\\#50](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/50)) ","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"  * What it does: Prevents user from seeing passed appointments in their appointment list without deleting them manually.","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"  * Justification: This feature helps the user in managing upcoming appointments better by not mistaking passed appointments as upcoming one. ","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"  * Challenges: Instead of adding another JSON file to store passed appointments (which could waste storage), the passed appointments were kept in the same JSON file as the upcoming appointments. Thus, checking for passed appointments would have to be done well when the application is launched to avoid corruption of the appointment data file and for the correct appointments to be transferred to passed appointment list. ","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"* **New Feature**: Added the ability automatically remove expired record from the record list (Pull request [\\#50](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/50)) ","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"  * What it does: Prevents user from seeing expired records from each client\u0027s detail, where their records are listed, without having to remove them manually. ","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"  * Justification: This feature helps the user in managin their clients records by not showing expired ones. ","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"  * Challenges: Instead of adding another JSON file to store expired records (which could waste storage), the passed records were kept in the same JSON file as the active records. Thus, checking for expired records would have to be done well when the application is launched to avoid corruption of the record data file and for the correct records to be transferred to expired record list. ","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"  ","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"* **New Feature**: Added the ability to list passed appointments (Pull request [\\#50](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/50)) ","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"  * What it does: Allows user view all expired record at one go.","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"  * Justification: Even though they are expired records, user might still want to refer to it for future uses and it would be meaningless to store the expired records without having the ability to view them. ","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"  * Credits: AB3","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"* **New Feature**: Added the ability to list expired record (Pull request [\\#50](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/50)) ","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"  * What it does: Allows user view all passed appointments at one go.","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"  * Justification: Even though they are passed appointments, user might still want to refer to it for future uses and it would be meaningless to store the passed appointments without having the ability to view them. ","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"  * Credits: AB3","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"* **New Feature**: Added the ability to find insurance (Pull request [\\#72](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/72))","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"  * What it does: Allows user find and view insurance by insurace name as keyword","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"  * Justification: User could have stored many insurances in the application storage and it would be helpful and efficient for them to search those insurances quickly by their names.  ","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"  * Highlights: This feature is made extensible to ease the process of editing/adding find parameters in the future","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"  * Credits: AB3","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"## \u003ca id\u003d\"Codecontributed\"\u003e\u003c/a\u003e2. Code contributed","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"* [Repo link](https://github.com/jessicajacelyn/tp)","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"* [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dsicajacelyn\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djessicajacelyn\u0026tabRepo\u003dAY2122S2-CS2103-F09-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"* [Pull Request Link](https://github.com/AY2122S2-CS2103-F09-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3Ajessicajacelyn)","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"## \u003ca id\u003d\"Projectmanagement\"\u003e\u003c/a\u003e**3. Project management**","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"  * Maintained repo Pull Requests and Issue Tracker in GitHub.","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"  * Managed releases `v1.3` - `v1.5` (3 releases) on GitHub.","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"  * Hosted weekly team meeting","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"  * Helped team members to debug","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"  * Helped team to improve code style and quality","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"  * Fix javadocs and documentations typo and errors for team (Pull requests [\\#134](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/134), [\\#135](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/135))","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"  * Update project track [documentation](https://docs.google.com/document/d/1YnxPw8cAvkEcVgljEb4Ux5qUX_KnXIDYhm5BC7UsAq8/edit?usp\u003dsharing)","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"## \u003ca id\u003d\"Existing\"\u003e\u003c/a\u003e**4. Enhancements to existing features**","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"  * Redesigned the GUI from scratch (can be seen from README.md)","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"  * Wrote most of the tests for existing features (Pull requests [\\#88](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/88), [\\#94](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/94), [\\#97](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/97))","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"  * Add more sample data to components","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"## \u003ca id\u003d\"Documentation\"\u003e\u003c/a\u003e**5. Documentation**","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"  * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"    * Added documentation for the features `appointment history` and `expired records` [\\#60](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/60)","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":"    * Proofread and edit typo errors for the whole guide [\\#119](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/119)","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"jessicajacelyn"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":69,"author":{"gitId":"jessicajacelyn"},"content":"    * Updated implementation details of the Logic component","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"jessicajacelyn"},"content":"    (Pull request [\\#110](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/110))","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"jessicajacelyn"},"content":"     * Added implementation details of the List History feature","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"    (Pull request [\\#110](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/110))","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"jessicajacelyn"},"content":"    * Updated use case for list client","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"jessicajacelyn"},"content":"    (Pull request [\\#27](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/27))","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"jessicajacelyn"},"content":"    * Updated value proposition,target user profile and glossary.","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"    (Pull requests [\\#25](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/25), [\\#214](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/214))","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"jessicajacelyn"},"content":"    * Proofread and edit typo errors for the whole guide [\\#131](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/131)","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"jessicajacelyn":77}},{"path":"docs/team/seksek13.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"layout: page","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"title: Koh Su En\u0027s Project Portfolio Page","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"---","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"- [1. New Feature](#NewFeature)","lastModifiedDate":"2022-04-04"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"- [2. Code contributed](#Codecontributed)","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"- [3. Project management](#Projectmanagement)","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"- [4. Enhancements to existing features](#existing)","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"- [5. Documentation](#Documentation)","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"### Project: Mr. Agent","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"Mr. Agent is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Mr. Agent can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"## \u003ca id\u003d\"NewFeatures\"\u003e\u003c/a\u003e**1. New Features**","lastModifiedDate":"2022-04-04"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"* **New Feature**: Added the ability to add record commands that allows the user add new insurance record to specific client. (Pull requests [\\#48](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/48/files) , [\\#64](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/64/files))","lastModifiedDate":"2022-04-04"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"  * What it does: allows the user add insurance record to client one at a time. ","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"  * Justification: This feature helps the target user (insurance agent) to keep track of each client\u0027s insurance bought by adding them to the app.","lastModifiedDate":"2022-04-04"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"  * Highlights: This feature requires in-depth knowledge about other components ,such as insurance and client, as there exist dependency between the components","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"  * Challenges: As the record consist of information about the client and insurance, the implementation needs to provide an accurate linkage between the existing client and insurance when adding a new record.","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"  * Credits: AB3","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"* **New Feature**: Added the ability to delete record commands (Pull requests [\\#48](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/48/files))","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"  * What it does: allows the user delete insurance record of a specific client one at a time.","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"  * Justification: This feature is crucial as it aids the user to manage the records that they deemed that are no longer needed, increasing the tidiness when viewing the client\u0027s record.","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"  * Highlights: This feature is made extensible so that it is easier to edit the parameters used in deciding which record to delete","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"  * Credits: AB3","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"* **New Feature**: Added the ability to edit record commands (Pull requests [\\#82](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/82/files))","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"  * What it does: allows the user edit a record\u0027s detail of specific a client, multiple changes at one go.","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"  * Justification: This feature is crucial it is common that user would key in the wrong information or the record\u0027s information required some updates. Hence, it would be handy to have this feature to ease user in editing the current record\u0027s detail instead of requiring them to delete and add a new record.","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"  * Highlights: This feature is made extensible so that if more attributes is required to be stored, it does not require major change to the code base.","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"  * Challenges: Editing of a record could possibly cause a duplication of records which is undesired, also, parameters provided by the user may not be correct. ","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"    Hence extensive checking is needed to check that the edited record is not stored in the database and checking the validity of the parameters.","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"  * Credits: AB3","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"* **New Feature**: Added the ability to list record commands (Pull requests[\\#70](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/70), [\\#71](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/71))","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"  * What it does: allows the user view all unexpired record at one go.","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"  * Justification: It would be meaningless if the user are able to add record but could not view them at all, hence, it is crucial this feature is implememeted. With this feature, user can conveniently view all unexpired insurance records and view the details of each record.","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"  * Credits: AB3","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"* **New Feature**: Added the ability to find unexpired record commands (Pull requests [\\#82](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/82/files))","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"  * What it does: allows the user find and view unexpired record by seaching with insurance type","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"  * Justification: In reality, the target user (insurance agent) could be selling a variety types of insurance and hence it would be helpful to have such a function for them to know which user had bought the insurance type.","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"  * Highlights: This feature is made extensible to ease the process of editing/adding find parameters in the future","lastModifiedDate":"2022-04-04"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"  * Credits: AB3","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"### \u003ca id\u003d\"code_contributed\"\u003e\u003c/a\u003e2. Code contributed","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"* [Repo link](https://github.com/seksek13/tp)","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"* [RepoSense link](https://ay2122s2-cs2103-f09-3.github.io/tp/team/seksek13.html)","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"* [Pull Request link](https://github.com/AY2122S2-CS2103-F09-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3Aseksek13)","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"### \u003ca id\u003d\"project_management\"\u003e\u003c/a\u003e3. Project Management","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"  * Managed releases `v1.3` on GitHub","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"  * Contributed incrementally and iteratively by following the [forking workflow](https://nus-cs2103-ay2122s2.github.io/website/se-book-adapted/chapters/revisionControl.html#forking-flow) strictly","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"  * Helped to test and debug other components of the application","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"### \u003ca id\u003d\"enhancements\"\u003e\u003c/a\u003e4. Enhancements to existing features","lastModifiedDate":"2022-04-04"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"    * Updated the GUI color scheme and design (Pull requests [\\#137](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/137), [\\#138](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/138))","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"    * Wrote additional tests for existing features to increase coverage from 51.64% to 52.59% (Pull requests [\\#36](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/99))","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"    * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"        * Added documentation for the record features, including list/add/delete/find/edit `Record` command (Pull requests [\\#117](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/117), [\\#196](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/196))","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"        * Added user stories for the record feature. (Pull requests [\\#103](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/103/files))","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"        * Updated implementation details of the `UI`, `Logic` and `Record` component (Pull requests [\\#103](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/103/files) ,[\\#109](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/109/files))","lastModifiedDate":"2022-04-04"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"        * Added implementation details of the `add record` feature. (Pull requests [\\#103](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/103/files))","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"seksek13":79}},{"path":"docs/team/yunbinmo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"layout: page","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"title: Mo Yunbin\u0027s Project Portfolio Page","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"---","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"- [1. New Features](#new_feature)","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"- [2. Code contributed](#code_contributed)","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"- [3. Project management](#project_management)","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"- [4. Enhancements to existing features](#enhancements)","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"- [5. Documentation](#documentation)","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"- [6. Community](#community)","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"## Project: Mr. Agent","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"Mr. Agent is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Mr. Agent can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"new_feature\"\u003e\u003c/a\u003e1. New Features","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"* **New Feature**: Added the ability to list/add/edit/delete/find appointments (Pull requests [\\#33](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/33), [\\#80](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/80), [\\#81](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/81))","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"  * What it does: allows the target users (insurance agents) to manage their appointments with clients on the app by saving/editing appointment details including text description and date and time. Also, users can search for appointments using keyword(s).","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"  * Justification: This feature makes the product much more complete because appointment is an important part of daily work of the target user group that needs to be noted down and referred to frequently.","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"  * Highlights: This enhancement is made extensible such that it is easy to add more attributes to describe an appointment if necessary, which does not require massive change to the code base.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"* **New Feature**: Added the ability to sort appointments (Pull request [\\#90](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/90))","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"  * What it does: allows users to sort the appointment list in ascending/descending order by date and time.","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"  * Justification: Appointments are usually time-sensitive, it is important to provide a quick way for user to prioritize and visualize more urgent appointments.","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"  * Highlights: This enhancement is implemented such that more sorting options could be made available easily with minor modification, if any ordering of the list is deemed to be meaningful for the users.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"code_contributed\"\u003e\u003c/a\u003e2. Code contributed","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"* [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dyunbinmo\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"* [Pull Request](https://github.com/AY2122S2-CS2103-F09-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3Ayunbinmo)","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"project_management\"\u003e\u003c/a\u003e3. Project Management","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"  * Set up code coverage tool for the project.","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"  * Contributed incrementally and iteratively by following the [forking workflow](https://nus-cs2103-ay2122s2.github.io/website/se-book-adapted/chapters/revisionControl.html#forking-flow) strictly","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"  * Helped to test and debug other components of the application","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"enhancements\"\u003e\u003c/a\u003e4. Enhancements to existing features","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"  * Set up the new GUI layout according to specification (Pull requests [\\#37](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/37), [\\#45](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/45))","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"  * Wrote additional tests for existing features to increase coverage (Pull requests [\\#102](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/102), [\\#105](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/105))","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"documentation\"\u003e\u003c/a\u003e5. Documentation","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"  * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"    * Added documentation for the appointment features, including list/add/delete/find/edit/sort `Appointment` command [\\#113](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/113)","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"    * Did cosmetic tweaks to existing documentation for cleaner view [\\#118](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/118)","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"    * Add user stories for the appointment feature. [\\#26](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/26)","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"    * Updated implementation details of the `Model` and `Appointment` component [\\#101](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/101)","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"    * Added implementation details of the sort/find appointment command [\\#112](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/112) ","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"    ","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"### \u003ca id\u003d\"community\"\u003e\u003c/a\u003e6. Community:","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#89](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/89)","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"  * Contributed to forum discussions (examples: [#141](https://github.com/nus-cs2103-AY2122S2/forum/issues/141), [#58](https://github.com/nus-cs2103-AY2122S2/forum/issues/58))","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"yunbinmo":55}},{"path":"docs/team/zzkzzzz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"layout: page","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"title: Zheng ZiKang\u0027s Project Portfolio Page","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"---","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"- [1. New Feature](#NewFeature)","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"- [2. Code contributed](#Codecontributed)","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"- [3. Project management](#Projectmanagement)","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"- [4. Enhancements to existing features](#existing)","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"- [5. Documentation](#Documentation)","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"- [6. Community](#Community)","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"## Project: Mr. Agent","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"Mr. Agent is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Mr. Agent can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"NewFeatures\"\u003e\u003c/a\u003e**1. New Features**","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"* **New Feature**: Added Add/Delete/Edit/List Insurance Commands that allows the user to manage the Insurances.","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"(Pull requests [\\#29](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/29), ","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"[\\#35](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/35), [\\#36](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/36), ","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"[\\#44](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/44), [\\#74](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/74))","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"  * What it does: allows the target users (insurance agents) to manage their insurances on the app by saving/editing insurance details including title and price.","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"  * Justification: This feature makes the product much more complete because insurance is an important part for insurance agents to memorize all the details.","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"  * Highlights: This enhancement is made extensible such that it is easy to add more attributes to describe an insurance if necessary, which does not require massive change to the code base.","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"* **New Feature**: Added Sort records Commands that allows the user to sort the records by start/end date in ascending/descending order.","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"(Pull request [\\#91](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/91))","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"  * What it does: allows users to sort the records list in ascending/descending order by start/end date.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"  * Justification: Record are usually time-sensitive, it is important to provide a quick way for user to prioritize and visualize almost expired records or newest records.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"  * Highlights: This enhancement is implemented such that more sorting options could be made available easily with minor modification, if any ordering of the list is deemed to be meaningful for the users. For example, sort records between certain period.","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"* **New Feature**: Added clear command that allows the user to clear all the data (AddressBook, RecordBook, InsuranceBook and AppointmentBook).","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":" (Pull requests [\\#83](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/83))","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Codecontributed\"\u003e\u003c/a\u003e**2. Code contributed**","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"* [Repo link](https://github.com/zzkzzzz/tp)","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"* [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dzzkzzzz\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dzzkzzzz\u0026tabRepo\u003dAY2122S2-CS2103-F09-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"* [Pull Request](https://github.com/AY2122S2-CS2103-F09-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3Azzkzzzz)","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Projectmanagement\"\u003e\u003c/a\u003e**3. Project management**","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"  * Maintained repo Pull Requests and Issue Tracker in GitHub.","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"  * Managed releases `v1.3` - `v1.5` (3 releases) on GitHub.","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"  * Hosted weekly team meeting","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"  * Setting up the GitHub team org/repo","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"  * Formatted user/developer docs and added table of contents","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"  * Helped team members to debug","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"  * Helped team to improve code style and quality","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"  * Set up and update project track [documentation](https://docs.google.com/document/d/1YnxPw8cAvkEcVgljEb4Ux5qUX_KnXIDYhm5BC7UsAq8/edit?usp\u003dsharing)","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"existing\"\u003e\u003c/a\u003e**4. Enhancements to existing features**","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"  * Redesigned and improved the GUI interface (Pull requests [\\#44](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/44), ","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"  [\\#46](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/46), [\\#74](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/74)","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"  [\\#116](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/116))","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"  * Improved and extended the command syntax more user-friendly and to match project scenario. (Pull request [\\#24](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/24))","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"  * Wrote additional tests for existing and new features to increase coverage ","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"  (Pull requests [\\#65](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/65), [\\#91](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/91))","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Documentation\"\u003e\u003c/a\u003e**5. Documentation**","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"    * Added documentation for the features Add/Delete/Edit Insurance Commands (Pull requests","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"    [\\#29](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/29), [\\#114](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/114))","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"    * Added documentation for the features Sort Records Commands ","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"    (Pull requests [\\#114](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/114))","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":" ","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"    * Updated implementation details of the Storage component","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    (Pull requests [\\#98](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/98))","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"    * Added implementation details of the Sort Records Commands","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"    (Pull requests [\\#98](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/98), [\\#108](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/108))","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"    * Added implementation details of the Click event feature","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"    (Pull requests [\\#98](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/98))","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"    * Updated project scope and Use case","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"    (Pull request [\\#24](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/24))","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"    * Added user stories for the insurances feature","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"    (Pull request [\\#98](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/98))","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"   ","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"## \u003ca id\u003d\"Community\"\u003e\u003c/a\u003e**6. Community**","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#45](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/45), [\\#89](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/89),  [\\#90](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/90), [\\#203](https://github.com/AY2122S2-CS2103-F09-3/tp/pull/203)","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"  * Contributed to forum discussions (examples: [58](https://github.com/nus-cs2103-AY2122S2/forum/issues/58))","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"-":15,"zzkzzzz":73}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":" * as a named module. We don\u0027t use JavaFX via the module system, so it can\u0027t","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"jessicajacelyn":1,"-":24}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.InsuranceBook;","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.RecordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.storage.AppointmentBookStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.storage.InsuranceBookStorage;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.storage.JsonInsuranceBookStorage;","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"import seedu.address.storage.JsonRecordBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"import seedu.address.storage.RecordBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        AppParameters appParameters \u003d AppParameters.parse(this.getParameters());","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        this.config \u003d this.initConfig(appParameters.getConfigPath());","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(this.config.getUserPrefsFilePath());","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        UserPrefs userPrefs \u003d this.initPrefs(userPrefsStorage);","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"        AppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"                new JsonAppointmentBookStorage(userPrefs.getAppointmentBookFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"        InsuranceBookStorage insuranceBookStorage \u003d new JsonInsuranceBookStorage(userPrefs.getInsuranceBookFilePath());","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"        RecordBookStorage recordBookStorage \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"                new JsonRecordBookStorage(userPrefs.getRecordBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"yunbinmo"},"content":"        this.storage \u003d new StorageManager(addressBookStorage, insuranceBookStorage,","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"                appointmentBookStorage, recordBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        this.initLogging(this.config);","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        this.model \u003d this.initModelManager(this.storage, userPrefs);","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        this.logic \u003d new LogicManager(this.model, this.storage);","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"        this.ui \u003d new UiManager(this.logic);","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"        logic.setUi((UiManager) this.ui);","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        ReadOnlyAddressBook initialAddressBookData;","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"            initialAddressBookData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2022-03-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"        Optional\u003cReadOnlyInsuranceBook\u003e insuranceBookOptional;","lastModifiedDate":"2022-03-05"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"        ReadOnlyInsuranceBook initialInsuranceBookData;","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"            insuranceBookOptional \u003d storage.readInsuranceBook();","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"            if (!insuranceBookOptional.isPresent()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"                logger.info(\"Data file not found. Will be starting with a sample InsuranceBook\");","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"            initialInsuranceBookData \u003d insuranceBookOptional.orElseGet(SampleDataUtil::getSampleInsuranceBook);","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty InsuranceBook\");","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"            initialInsuranceBookData \u003d new InsuranceBook();","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty InsuranceBook\");","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"            initialInsuranceBookData \u003d new InsuranceBook();","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"yunbinmo"},"content":"        Optional\u003cReadOnlyAppointmentBook\u003e appointmentBookOptional;","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"yunbinmo"},"content":"        ReadOnlyAppointmentBook initialAppointmentData;","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"yunbinmo"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"yunbinmo"},"content":"            appointmentBookOptional \u003d storage.readAppointmentBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"yunbinmo"},"content":"            if (!appointmentBookOptional.isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"yunbinmo"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AppointmentBook\");","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"yunbinmo"},"content":"            initialAppointmentData \u003d appointmentBookOptional.orElseGet(SampleDataUtil::getSampleAppointmentBook);","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"yunbinmo"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"yunbinmo"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AppointmentBook\");","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"yunbinmo"},"content":"            initialAppointmentData \u003d new AppointmentBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"yunbinmo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"yunbinmo"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AppointmentBook\");","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"yunbinmo"},"content":"            initialAppointmentData \u003d new AppointmentBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"seksek13"},"content":"        Optional\u003cReadOnlyRecordBook\u003e recordBookOptional;","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"seksek13"},"content":"        ReadOnlyRecordBook initialRecordData;","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"seksek13"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"seksek13"},"content":"            recordBookOptional \u003d storage.readRecordBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"seksek13"},"content":"            if (!recordBookOptional.isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"seksek13"},"content":"                logger.info(\"Data file not found. Will be starting with a sample RecordBook\");","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"seksek13"},"content":"            initialRecordData \u003d recordBookOptional.orElseGet(SampleDataUtil::getSampleRecordBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"seksek13"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"seksek13"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty RecordBook\");","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"seksek13"},"content":"            initialRecordData \u003d new RecordBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"seksek13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"seksek13"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty RecordBook\");","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"seksek13"},"content":"            initialRecordData \u003d new RecordBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"yunbinmo"},"content":"        System.out.println(initialAppointmentData.toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(initialAddressBookData.toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(initialInsuranceBookData.toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"seksek13"},"content":"        System.out.println(initialRecordData.toString());","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"yunbinmo"},"content":"        return new ModelManager(initialAddressBookData, initialInsuranceBookData,","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"seksek13"},"content":"                initialAppointmentData, initialRecordData, userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":250,"author":{"gitId":"zzkzzzz"},"content":"        this.ui.start(primaryStage);","lastModifiedDate":"2022-02-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":257,"author":{"gitId":"zzkzzzz"},"content":"            this.storage.saveUserPrefs(this.model.getUserPrefs());","lastModifiedDate":"2022-02-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunbinmo":25,"seksek13":25,"-":173,"zzkzzzz":39}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    private static final double DEFAULT_HEIGHT \u003d 800;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    private static final double DEFAULT_WIDTH \u003d 1200;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"zzkzzzz":2}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX \u003d \"The insurance index provided is invalid\";","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"            \"The appointment index provided is invalid\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_INVALID_RECORD_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"            \"The record index provided is invalid\";","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String MESSAGE_INSURANCES_LISTED_OVERVIEW \u003d \"%1$d insurances listed!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_RECORDS_LISTED_OVERVIEW \u003d \"%1$d records listed!\";","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_APPOINTMENT_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_APPOINTMENT_SORTED_ASCENDING \u003d \"%1$d appointments sorted ascendingly by time!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_APPOINTMENT_SORTED_DESCENDING \u003d \"%1$d appointments sorted descendingly by time!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_RECORD_SORTED_START_TIME_ASCENDING \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            \"%1$d records sorted ascendingly by start time!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_RECORD_SORTED_START_TIME_DESCENDING \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"            \"%1$d records sorted descendingly by start time!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_RECORD_SORTED_END_TIME_ASCENDING \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"            \"%1$d records sorted ascendingly by end time!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_RECORD_SORTED_END_TIME_DESCENDING \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"            \"%1$d records sorted descendingly by end time!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunbinmo":5,"seksek13":3,"jessicajacelyn":1,"-":13,"zzkzzzz":9}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"     * Returns true if {@code path} can be converted into a {@code Path}","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seksek13":1,"-":82}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    /** Returns an unmodifiable view of the filtered list of insurances */","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    ObservableList\u003cInsurance\u003e getFilteredInsuranceList();","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    /** Returns an unmodifiable view of the filtered list of appointments */","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"    /** Returns an unmodifiable view of the filtered list of records */","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"    ObservableList\u003cRecord\u003e getFilteredRecordList();","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"    /** Returns an unmodifiable view of the filtered list of appointment history */","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentHistoryList();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"    /** Returns an unmodifiable view of the filtered list of expired record */","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"    ObservableList\u003cRecord\u003e getFilteredExpiredRecordList();","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"     * Set the Ui.","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"    void setUi(UiManager ui);","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yunbinmo":4,"seksek13":6,"jessicajacelyn":7,"-":50,"zzkzzzz":9}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.AddInsuranceCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.AddRecordCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditInsuranceCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditRecordCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    private UiManager ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"     * Set Ui.","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    public void setUi(UiManager ui) {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        Command command \u003d addressBookParser.parseCommand(model, commandText);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        updateDetail(command);","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"            storage.saveAppointmentBook(model.getAppointmentBook());","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"            storage.saveInsuranceBook(model.getInsuranceBook());","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"            storage.saveRecordBook(model.getRecordBook());","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-04-03"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"     * Updates Detail of UI when certain command is executed.","lastModifiedDate":"2022-04-03"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-04-03"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"    private void updateDetail(Command command) throws CommandException, ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        if (this.ui \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"            return;","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        if (command instanceof AddRecordCommand) {","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"            AddRecordCommand addRecordCommand \u003d (AddRecordCommand) command;","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"            Record editedRecord \u003d addRecordCommand.getToAdd();","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"            int index \u003d this.model.getFilteredRecordList().size();","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"            this.ui.updateDetailPanel(editedRecord, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"        if (command instanceof AddInsuranceCommand) {","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"            AddInsuranceCommand addInsuranceCommand \u003d (AddInsuranceCommand) command;","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"            Insurance editedInsurance \u003d addInsuranceCommand.getToAdd();","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"            int index \u003d this.model.getFilteredInsuranceList().size();","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"            this.ui.updateDetailPanel(editedInsurance, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"        if (command instanceof AddPersonCommand) {","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"            AddPersonCommand addPersonCommand \u003d (AddPersonCommand) command;","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"            Person editedPerson \u003d addPersonCommand.getToAdd();","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"            int index \u003d this.model.getFilteredPersonList().size();","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"            this.ui.updateDetailPanel(editedPerson, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"        if (command instanceof EditInsuranceCommand) {","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"            EditInsuranceCommand editInsuranceCommand \u003d (EditInsuranceCommand) command;","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"            Insurance editedInsurance \u003d editInsuranceCommand.getEditedInsurance();","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"            int index \u003d editInsuranceCommand.getEditedInsuranceIndex();","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"            this.ui.updateDetailPanel(editedInsurance, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"            ObservableList\u003cRecord\u003e records \u003d this.model.getFilteredRecordList();","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"            for (int i \u003d 0; i \u003c records.size(); i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"                Record record \u003d records.get(i);","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"                if (record.getInsuranceID().toString()","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"                        .equals(editInsuranceCommand.getInsuranceToEdit().getTitle().toString())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"                    int recordIndex \u003d i + 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"                    String text \u003d \"edit -r \" + recordIndex + \" i/\" + index;","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"                    Command updateCommand \u003d addressBookParser.parseCommand(model, text);","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"                    updateCommand.execute(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"        if (command instanceof EditRecordCommand) {","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"            EditRecordCommand editRecordCommand \u003d (EditRecordCommand) command;","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"            Record editedRecord \u003d editRecordCommand.getEditedRecord();","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"            int index \u003d editRecordCommand.getEditedRecordIndex();","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"            this.ui.updateDetailPanel(editedRecord, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"        if (command instanceof EditPersonCommand) {","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"            EditPersonCommand editPersonCommand \u003d (EditPersonCommand) command;","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"            Person editedPerson \u003d editPersonCommand.getEditedPerson();","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"            int index \u003d editPersonCommand.getEditedPersonIndex();","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"            ObservableList\u003cRecord\u003e records \u003d this.model.getFilteredRecordList();","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"            for (int i \u003d 0; i \u003c records.size(); i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"                Record record \u003d records.get(i);","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"                if (record.getClientID().toString()","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"                        .equals(editPersonCommand.getPersonToEdit().getName().toString())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"                    int recordIndex \u003d i + 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"                    String text \u003d \"edit -r \" + recordIndex + \" c/\" + index;","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"                    Command updateCommand \u003d addressBookParser.parseCommand(model, text);","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"                    updateCommand.execute(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"            this.ui.updateDetailPanel(editedPerson, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":166,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"    public ObservableList\u003cInsurance\u003e getFilteredInsuranceList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"        return model.getFilteredInsuranceList();","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"yunbinmo"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"yunbinmo"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"seksek13"},"content":"    public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"seksek13"},"content":"        return model.getFilteredRecordList();","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"jessicajacelyn"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentHistoryList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"jessicajacelyn"},"content":"        return model.getFilteredAppointmentHistoryList();","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"jessicajacelyn"},"content":"    public ObservableList\u003cRecord\u003e getFilteredExpiredRecordList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"jessicajacelyn"},"content":"        return model.getFilteredExpiredRecordList();","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yunbinmo":7,"seksek13":7,"jessicajacelyn":10,"-":80,"zzkzzzz":101}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DATETIME;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DESCRIPTION;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Adds an appointment to Mr. Agent.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -a \"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"            + \": Adds an appointment to the appointment book. \"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"            + PREFIX_APPT_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"            + PREFIX_APPT_DATETIME + \"DATETIME \\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"            + \"Example: \" + COMMAND_WORD + \" -a \"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"            + PREFIX_APPT_DESCRIPTION + \"Meet James at UTown \"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"            + PREFIX_APPT_DATETIME + \"20-03-2022 18:00 \";","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"            \"A appointment at the same time already exists in the appointment book\";","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"     * Creates an AddAppointmentCommand to add the specified {@code Appointment}","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"                || (other instanceof AddAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 toAdd.equals(((AddAppointmentCommand) other).toAdd));","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"yunbinmo":52,"jessicajacelyn":1,"zzkzzzz":3}},{"path":"src/main/java/seedu/address/logic/commands/AddInsuranceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Adds an insurance to Mr. Agent.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"public class AddInsuranceCommand extends Command {","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -i : Adds a insurance to the insurance book. \"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"            + PREFIX_PRICE + \"PRICE \\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" -i \"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            + PREFIX_TITLE + \"Health Care \"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"            + PREFIX_PRICE + \"200 \";","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New insurance added: %1$s\";","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_DUPLICATE_INSURANCE \u003d \"This insurance already exists in the insurance book\";","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    private final Insurance toAdd;","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     * Creates an AddCommand to add the specified {@code Insurance}","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    public AddInsuranceCommand(Insurance insurance) {","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(insurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        toAdd \u003d insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     * Returns toAdd.","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    public Insurance getToAdd() {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        return toAdd;","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        if (model.hasInsurance(toAdd)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INSURANCE);","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        model.addInsurance(toAdd);","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof AddInsuranceCommand // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 toAdd.equals(((AddInsuranceCommand) other).toAdd));","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":64}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":" * Adds a person to Mr. Agent.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -c : Adds a person to the address book. \"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" -c \"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"     * Returns toAdd.","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    public Person getToAdd() {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        return toAdd;","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jessicajacelyn":1,"-":60,"zzkzzzz":13}},{"path":"src/main/java/seedu/address/logic/commands/AddRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_CLIENTID;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_ENDDATE;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_INSURANCEID;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_STARTDATE;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" * Adds a record to Mr. Agent.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"public class AddRecordCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an record to the record book. \"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"            + PREFIX_REC_CLIENTID + \"CLIENT ID \"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"            + PREFIX_REC_INSURANCEID + \"INSURANCE ID \"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"            + PREFIX_REC_STARTDATE + \"START DATE \"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            + PREFIX_REC_ENDDATE + \"END DATE \\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" -r \"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"            + PREFIX_REC_CLIENTID + \"10 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"            + PREFIX_REC_INSURANCEID + \"2 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"            + PREFIX_REC_STARTDATE + \"23-02-2022 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"            + PREFIX_REC_ENDDATE + \"23-02-2024 \";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New record added: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_DUPLICATE_RECORD \u003d","lastModifiedDate":"2022-04-02"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"            \"This record already exists in the record book, or the time interval overlaps with an existing record\"","lastModifiedDate":"2022-04-02"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"                    + \" with the same client name and insurance type\";","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"    private final Record toAdd;","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"     * Creates an AddCommand to add the specified {@code Record}.","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"    public AddRecordCommand(Record record) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"        requireNonNull(record);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"        toAdd \u003d record;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"     * Returns toAdd.","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    public Record getToAdd() {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        return toAdd;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"        if (model.hasRecord(toAdd)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RECORD);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"        model.addRecord(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"                || (other instanceof AddRecordCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 toAdd.equals(((AddRecordCommand) other).toAdd));","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":53,"yunbinmo":3,"jessicajacelyn":3,"zzkzzzz":12}},{"path":"src/main/java/seedu/address/logic/commands/ClearAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":" * Clears the appointment list.","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"public class ClearAppointmentCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Appointment list has been cleared!\";","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"        model.setAppointmentBook(new AppointmentBook());","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"        model.getAppointmentHistoryBook().getAppointmentHistoryList().clear();","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"yunbinmo":22}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.InsuranceBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.RecordBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":" * Clears the all books.","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All books has been cleared!\";","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        model.setInsuranceBook(new InsuranceBook());","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        model.setRecordBook(new RecordBook());","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        model.setAppointmentBook(new AppointmentBook());","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":21,"zzkzzzz":8}},{"path":"src/main/java/seedu/address/logic/commands/ClearInsuranceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.InsuranceBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":" * Clears the insurance list.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"public class ClearInsuranceCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Insurance book has been cleared!\";","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"        model.setInsuranceBook(new InsuranceBook());","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":22}},{"path":"src/main/java/seedu/address/logic/commands/ClearPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":" * Clears the person book.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"public class ClearPersonCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":22}},{"path":"src/main/java/seedu/address/logic/commands/ClearRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.RecordBook;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":" * Clears the record list.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"public class ClearRecordCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Record book has been cleared!\";","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"        model.setRecordBook(new RecordBook());","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"seksek13":19,"jessicajacelyn":3}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_PERSON \u003d \"-c\";","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_INSURANCE \u003d \"-i\";","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_RECORD \u003d \"-r\";","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_APPOINTMENT \u003d \"-a\";","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String COMMAND_APPOINTMENT_HISTORY \u003d \"-h\";","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String COMMAND_EXPIRED_RECORD \u003d \"-e\";","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"seksek13":1,"jessicajacelyn":2,"-":20,"zzkzzzz":5}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"     * The application should list person.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    private final boolean person;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * The application should list insurance.","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    private final boolean insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"     * The application should list appointment.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    private final boolean appointment;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * The application should list record.","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    private final boolean record;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"     * The application should list appointment history.","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"    private final boolean appointmentHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"     * The application should list expired records.","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    private final boolean expiredRecord;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"     * The application should exit.","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    public CommandResult(String feedbackToUser, boolean person, boolean insurance, boolean appointment, boolean record,","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"                         boolean appointmentHistory, boolean expiredRecord, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        this.insurance \u003d insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"        this.record \u003d record;","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"        this.appointmentHistory \u003d appointmentHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":"        this.expiredRecord \u003d expiredRecord;","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        this(feedbackToUser, false, false, false, false, false,","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"                false, false, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"    public boolean isListPerson() {","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        return person;","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"    public boolean isListInsurance() {","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"        return insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"yunbinmo"},"content":"    public boolean isListAppointment() {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"        return appointment;","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"    public boolean isListRecord() {","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"        return record;","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean isListAppointmentHistory() {","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"jessicajacelyn"},"content":"        return appointmentHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean isListExpiredRecord() {","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"jessicajacelyn"},"content":"        return expiredRecord;","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 (person \u003d\u003d otherCommandResult.person","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"                || insurance \u003d\u003d otherCommandResult.insurance","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"                || appointment \u003d\u003d otherCommandResult.appointment","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"                || record \u003d\u003d otherCommandResult.record","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"                || appointmentHistory \u003d\u003d otherCommandResult.appointmentHistory","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"                || expiredRecord \u003d\u003d otherCommandResult.expiredRecord)","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"yunbinmo"},"content":"        return Objects.hash(feedbackToUser, person, insurance, appointment,","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"yunbinmo"},"content":"                record, appointmentHistory, expiredRecord, showHelp, exit);","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunbinmo":12,"jessicajacelyn":14,"-":66,"zzkzzzz":54}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" * Deletes an appointment identified using it\u0027s displayed index from the appointment book.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Appointment deleted: %1$s\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -a \"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"            + \": Deletes an appointment from the appointment book. \"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"            + \"APPOINTMENT INDEX\"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"            + \"Example: \" + COMMAND_WORD + \" -a \" + \" 1\";","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"     * Creates an DeleteAppointmentCommand to delete the specified {@code Appointment}","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"        Appointment appointmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS, appointmentToDelete));","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"                || (other instanceof DeleteAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteAppointmentCommand) other).targetIndex));","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":52,"jessicajacelyn":1,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteInsuranceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" * Deletes an insurance identified using it\u0027s displayed index from the insurance book.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"public class DeleteInsuranceCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"            + \" -i : Deletes the insurance identified by the index number used in the displayed insurance list.\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + COMMAND_INSURANCE + \" 1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_DELETE_INSURANCE_SUCCESS \u003d \"Deleted Insurance: %1$s\";","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    public DeleteInsuranceCommand(Index targetIndex) {","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        List\u003cInsurance\u003e lastShownList \u003d model.getFilteredInsuranceList();","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        Insurance insuranceToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        model.deleteInsurance(insuranceToDelete);","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(model.getInsuranceBook().toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INSURANCE_SUCCESS, insuranceToDelete));","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof DeleteInsuranceCommand // instanceof handles nulls","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteInsuranceCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":54}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"            + \" -c : Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" -c 1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":47,"zzkzzzz":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" * Deletes a record identified using it\u0027s displayed index from the record book.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"public class DeleteRecordCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_DELETE_RECORD_SUCCESS \u003d \"Record deleted: %1$s\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -r : Deletes an record from the address book. \"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" -r 1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"     * Creates an DeleteRecordCommand to delete the specified {@code Record}","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    public DeleteRecordCommand(Index targetIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        List\u003cRecord\u003e lastShownList \u003d model.getFilteredRecordList();","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RECORD_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"        Record recordToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"        model.deleteRecord(recordToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_RECORD_SUCCESS, recordToDelete));","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"                || (other instanceof DeleteRecordCommand // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteRecordCommand) other).targetIndex));","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":47,"jessicajacelyn":4,"zzkzzzz":3}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DATETIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DESCRIPTION;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":" * Edits the details of an existing appointment in the address book.","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -a : Edits the details of the appointment identified \"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"            + \"by the index number used in the displayed appointment list. \"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"            + \"[\" + PREFIX_APPT_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"            + \"[\" + PREFIX_APPT_DATETIME + \"DATETIME] \\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"            + \"Example: \" + COMMAND_WORD + \" -a 1 \"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"            + PREFIX_APPT_DESCRIPTION + \"Meet James at Bugis Junction \"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"            + PREFIX_APPT_DATETIME + \"01-04-2022 15:00\";","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Edited Appointment: %1$s\";","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"            \"An appointment at the same time already exists in the address book.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    private final Index index;","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"     * @param index                of the appointment in the filtered appointment list to edit","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"     * @param editAppointmentDescriptor details to edit the appointment with","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"    public EditAppointmentCommand(Index index, EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"     * Creates and returns an {@code Appointment} with the details of {@code appointmentToEdit}","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"     * edited with {@code editAppointmentDescriptor}.","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"    private static Appointment createEditedAppointment(Appointment appointmentToEdit,","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"                                                  EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"        Description updatedDescription \u003d editAppointmentDescriptor.getDescription()","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"                .orElse(appointmentToEdit.getDescription());","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"        DateTime updatedDateTime \u003d editAppointmentDescriptor.getDateTime()","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"                .orElse(appointmentToEdit.getDateTime());","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"        return new Appointment(updatedDescription, updatedDateTime);","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"yunbinmo"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"yunbinmo"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"yunbinmo"},"content":"        if (!appointmentToEdit.isSameAppointment(editedAppointment) \u0026\u0026 model.hasAppointment(editedAppointment)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"yunbinmo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"yunbinmo"},"content":"        Predicate\u003cAppointment\u003e predicate \u003d a -\u003e a.getLocalDateTime().isAfter(LocalDateTime.now());","lastModifiedDate":"2022-04-02"},{"lineNumber":90,"author":{"gitId":"yunbinmo"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2022-04-02"},{"lineNumber":91,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment));","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"yunbinmo"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"yunbinmo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"yunbinmo"},"content":"            return true;","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"yunbinmo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"yunbinmo"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"yunbinmo"},"content":"            return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"yunbinmo"},"content":"        // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentCommand e \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"yunbinmo"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(e.editAppointmentDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"yunbinmo"},"content":"     * Stores the details to edit the appointment with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"yunbinmo"},"content":"     * corresponding field value of the appointment.","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"yunbinmo"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"yunbinmo"},"content":"        private Description description;","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"yunbinmo"},"content":"        private DateTime dateTime;","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"yunbinmo"},"content":"        public EditAppointmentDescriptor() {","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"yunbinmo"},"content":"        /**","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"yunbinmo"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"yunbinmo"},"content":"         */","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"yunbinmo"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"yunbinmo"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"yunbinmo"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"yunbinmo"},"content":"        /**","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"yunbinmo"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"yunbinmo"},"content":"         */","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"yunbinmo"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"yunbinmo"},"content":"            return CollectionUtil.isAnyNonNull(description, dateTime);","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"yunbinmo"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"yunbinmo"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"yunbinmo"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"yunbinmo"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"yunbinmo"},"content":"        public Optional\u003cDateTime\u003e getDateTime() {","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"yunbinmo"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"yunbinmo"},"content":"        public void setDateTime(DateTime dateTime) {","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"yunbinmo"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"yunbinmo"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"yunbinmo"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"yunbinmo"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"yunbinmo"},"content":"                return true;","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"yunbinmo"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"yunbinmo"},"content":"            if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"yunbinmo"},"content":"                return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"yunbinmo"},"content":"            // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"yunbinmo"},"content":"            EditAppointmentDescriptor e \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"yunbinmo"},"content":"            return getDescription().equals(e.getDescription()) \u0026\u0026 getDateTime().equals(e.getDateTime());","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"yunbinmo":164,"zzkzzzz":2}},{"path":"src/main/java/seedu/address/logic/commands/EditInsuranceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INSURANCES;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Price;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Title;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":" * Edits the details of an existing insurance in the insurance book.","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"public class EditInsuranceCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -i : Edits the details of the insurance identified \"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"            + \"by the index number used in the displayed insurance list. \"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"            + \"[\" + PREFIX_PRICE + \"PRICE]\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" -i 1 \"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"            + PREFIX_TITLE + \"House 1 \";","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_EDIT_INSURANCE_SUCCESS \u003d \"Edited Insurance: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_DUPLICATE_INSURANCE \u003d \"This insurance already exists in the insurance book.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    private final Index index;","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    private final EditInsuranceDescriptor editInsuranceDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    private Insurance editedInsurance;","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    private Insurance insuranceToEdit;","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"     * @param index                   of the insurance in the filtered insurance list to edit","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"     * @param editInsuranceDescriptor details to edit the insurance with","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    public EditInsuranceCommand(Index index, EditInsuranceDescriptor editInsuranceDescriptor) {","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(editInsuranceDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        this.editInsuranceDescriptor \u003d new EditInsuranceDescriptor(editInsuranceDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"     * Creates and returns a {@code Insurance} with the details of {@code insuranceToEdit}","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"     * edited with {@code editInsuranceDescriptor}.","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"    private static Insurance createEditedInsurance(Insurance insuranceToEdit,","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"                                                   EditInsuranceDescriptor editInsuranceDescriptor) {","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        assert insuranceToEdit !\u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        Title updatedTitle \u003d editInsuranceDescriptor.getTitle().orElse(insuranceToEdit.getTitle());","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        Price updatedPrice \u003d editInsuranceDescriptor.getPrice().orElse(insuranceToEdit.getPrice());","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        return new Insurance(updatedTitle, updatedPrice);","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"        List\u003cInsurance\u003e lastShownList \u003d model.getFilteredInsuranceList();","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"        insuranceToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"        editedInsurance \u003d createEditedInsurance(insuranceToEdit, editInsuranceDescriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        if (!insuranceToEdit.isSameInsurance(editedInsurance) \u0026\u0026 model.hasInsurance(editedInsurance)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INSURANCE);","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        model.setInsurance(insuranceToEdit, editedInsurance);","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        model.updateFilteredInsuranceList(PREDICATE_SHOW_ALL_INSURANCES);","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INSURANCE_SUCCESS, editedInsurance));","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the edited Insurance.","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"    public Insurance getEditedInsurance() {","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"        return editedInsurance;","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the insuranceToEdit.","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"    public Insurance getInsuranceToEdit() {","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"        return insuranceToEdit;","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the edited Insurance index.","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"    public int getEditedInsuranceIndex() {","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"        return index.getOneBased();","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"            return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"        if (!(other instanceof EditInsuranceCommand)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"        // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"        EditInsuranceCommand e \u003d (EditInsuranceCommand) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 editInsuranceDescriptor.equals(e.editInsuranceDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"     * Stores the details to edit the insurance with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"     * corresponding field value of the insurance.","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"    public static class EditInsuranceDescriptor {","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"        private Title title;","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"        private Price price;","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"        public EditInsuranceDescriptor() {","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"        /**","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-17"},{"lineNumber":146,"author":{"gitId":"jessicajacelyn"},"content":"         * A defensive copy of {@code toCopy} is used internally.","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"         */","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"        public EditInsuranceDescriptor(EditInsuranceDescriptor toCopy) {","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"            setPrice(toCopy.price);","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"        /**","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"         */","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"zzkzzzz"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"zzkzzzz"},"content":"            return CollectionUtil.isAnyNonNull(title, price);","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"zzkzzzz"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"zzkzzzz"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"zzkzzzz"},"content":"            this.title \u003d title;","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"        public Optional\u003cPrice\u003e getPrice() {","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"            return Optional.ofNullable(price);","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"zzkzzzz"},"content":"        public void setPrice(Price price) {","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"zzkzzzz"},"content":"            this.price \u003d price;","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"zzkzzzz"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"zzkzzzz"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"zzkzzzz"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"zzkzzzz"},"content":"                return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":184,"author":{"gitId":"zzkzzzz"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"zzkzzzz"},"content":"            if (!(other instanceof EditInsuranceDescriptor)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"zzkzzzz"},"content":"                return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":189,"author":{"gitId":"zzkzzzz"},"content":"            // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"zzkzzzz"},"content":"            EditInsuranceDescriptor e \u003d (EditInsuranceDescriptor) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"zzkzzzz"},"content":"            return getTitle().equals(e.getTitle())","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"zzkzzzz"},"content":"                    \u0026\u0026 getPrice().equals(e.getPrice());","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":195}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -c : Edits the details of the person identified \"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" -c 1 \"","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"    private Person editedPerson;","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    private Person personToEdit;","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-03-05"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        // use origin records, record can not edit by edit person command","lastModifiedDate":"2022-04-02"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        Set\u003cRecord\u003e originalRecords \u003d personToEdit.getRecords();","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, originalRecords);","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the edited Person.","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"    public Person getEditedPerson() {","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        return editedPerson;","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the edited Person index.","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"    public int getEditedPersonIndex() {","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"        return index.getOneBased();","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the insuranceToEdit.","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"    public Person getPersonToEdit() {","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"        return personToEdit;","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"        personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"        editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2022-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"zzkzzzz"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"zzkzzzz"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-05"},{"lineNumber":188,"author":{"gitId":"zzkzzzz"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"zzkzzzz"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-05"},{"lineNumber":196,"author":{"gitId":"zzkzzzz"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"zzkzzzz"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-03-05"},{"lineNumber":204,"author":{"gitId":"zzkzzzz"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-03-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"zzkzzzz"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-03-05"},{"lineNumber":212,"author":{"gitId":"zzkzzzz"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-03-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"zzkzzzz"},"content":"        /**","lastModifiedDate":"2022-03-05"},{"lineNumber":225,"author":{"gitId":"zzkzzzz"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-05"},{"lineNumber":226,"author":{"gitId":"zzkzzzz"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-05"},{"lineNumber":227,"author":{"gitId":"zzkzzzz"},"content":"         */","lastModifiedDate":"2022-03-05"},{"lineNumber":228,"author":{"gitId":"zzkzzzz"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-05"},{"lineNumber":229,"author":{"gitId":"zzkzzzz"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-05"},{"lineNumber":230,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":231,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":186,"zzkzzzz":68}},{"path":"src/main/java/seedu/address/logic/commands/EditRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_CLIENTID;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_ENDDATE;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_INSURANCEID;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_STARTDATE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.ClientID;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.EndDate;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.InsuranceID;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.StartDate;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":" * Edits the details of an existing record in the record book.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"public class EditRecordCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -r : Edits the details of the record identified \"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"            + \"[\" + PREFIX_REC_CLIENTID + \"CLIENT INDEX] \"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"            + \"[\" + PREFIX_REC_INSURANCEID + \"INSURANCE INDEX] \"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"            + \"[\" + PREFIX_REC_STARTDATE + \"START DATE] \"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"            + \"[\" + PREFIX_REC_ENDDATE + \"END DATE]\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \"-r 1 \"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"            + PREFIX_REC_CLIENTID + \"2 \"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"            + PREFIX_REC_INSURANCEID + \"3 \";","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_EDIT_RECORD_SUCCESS \u003d \"Edited Record: %1$s\";","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_DUPLICATE_RECORD \u003d \"This record already exists in the address book.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_STARTDATE_BEFORE_ENDATE \u003d \"Record start date must be before end date! \"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"            + \"Please check Start date/ end date entered!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"    private final Index index;","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"    private final EditRecordDescriptor editRecordDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    private Record editedRecord;","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"     * @param index                of the record in the filtered record list to edit","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"     * @param editRecordDescriptor details to edit the record with","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"    public EditRecordCommand(Index index, EditRecordDescriptor editRecordDescriptor) {","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"        requireNonNull(editRecordDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"        this.editRecordDescriptor \u003d new EditRecordDescriptor(editRecordDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"     * Creates and returns a {@code Record} with the details of {@code recordToEdit}","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"     * edited with {@code editRecordDescriptor}.","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"    private static Record createEditedRecord(Record recordToEdit,","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"                                             EditRecordDescriptor editRecordDescriptor) {","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"        assert recordToEdit !\u003d null;","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"        ClientID updatedClientID \u003d editRecordDescriptor.getClientID().orElse(recordToEdit.getClientID());","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"        InsuranceID updatedInsuranceID \u003d editRecordDescriptor.getInsuranceID().orElse(recordToEdit.getInsuranceID());","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"        StartDate updatedStartDate \u003d editRecordDescriptor.getStartDate().orElse(recordToEdit.getStartDate());","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"        EndDate updatedEndDate \u003d editRecordDescriptor.getEndDate().orElse(recordToEdit.getEndDate());","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"        return new Record(updatedClientID, updatedInsuranceID, updatedStartDate, updatedEndDate);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"seksek13"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"seksek13"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"seksek13"},"content":"        List\u003cRecord\u003e lastRecordShownList \u003d model.getFilteredRecordList();","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"seksek13"},"content":"        List\u003cPerson\u003e lastPersonShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"seksek13"},"content":"        List\u003cInsurance\u003e lastInsuranceList \u003d model.getFilteredInsuranceList();","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"seksek13"},"content":"        if (editRecordDescriptor.getClientID().isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"            int clientIndex \u003d Integer.parseInt(editRecordDescriptor.getClientID().get().toString()) - 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":96,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"seksek13"},"content":"            if (clientIndex \u003e\u003d lastPersonShownList.size()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"seksek13"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"            ClientID clientIdName \u003d new ClientID(lastPersonShownList.get(clientIndex).getName().fullName, true);","lastModifiedDate":"2022-04-02"},{"lineNumber":101,"author":{"gitId":"seksek13"},"content":"            editRecordDescriptor.setClientID(clientIdName);","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"seksek13"},"content":"        if (editRecordDescriptor.getInsuranceID().isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"            int recordIndex \u003d Integer.parseInt(editRecordDescriptor.getInsuranceID().get().toString()) - 1;","lastModifiedDate":"2022-04-02"},{"lineNumber":106,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"seksek13"},"content":"            if (recordIndex \u003e\u003d lastInsuranceList.size()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"seksek13"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"seksek13"},"content":"            InsuranceID insuranceIdName \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"                    new InsuranceID(lastInsuranceList.get(recordIndex).getTitle().title, true);","lastModifiedDate":"2022-04-02"},{"lineNumber":113,"author":{"gitId":"seksek13"},"content":"            editRecordDescriptor.setInsuranceID(insuranceIdName);","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"seksek13"},"content":"        if (editRecordDescriptor.getStartDate().isPresent() || editRecordDescriptor.getEndDate().isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"seksek13"},"content":"            StartDate startDate \u003d editRecordDescriptor.getStartDate().orElse(","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"seksek13"},"content":"                    lastRecordShownList.get(index.getZeroBased()).getStartDate());","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"seksek13"},"content":"            EndDate endDate \u003d editRecordDescriptor.getEndDate().orElse(","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"seksek13"},"content":"                    lastRecordShownList.get(index.getZeroBased()).getEndDate());","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"seksek13"},"content":"            if (startDate.getStartDate().isAfter(endDate.getEndDate())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"seksek13"},"content":"                throw new CommandException(MESSAGE_STARTDATE_BEFORE_ENDATE);","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"seksek13"},"content":"        Record recordToEdit \u003d lastRecordShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"        editedRecord \u003d createEditedRecord(recordToEdit, editRecordDescriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"seksek13"},"content":"        if (!recordToEdit.isSameRecord(editedRecord) \u0026\u0026 model.hasRecord(editedRecord)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"seksek13"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RECORD);","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"seksek13"},"content":"        model.setRecord(recordToEdit, editedRecord);","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"yunbinmo"},"content":"        Predicate\u003cRecord\u003e predicate \u003d r -\u003e r.getEndLocalDate().isAfter(LocalDate.now());","lastModifiedDate":"2022-04-02"},{"lineNumber":137,"author":{"gitId":"yunbinmo"},"content":"        model.updateFilteredRecordList(predicate);","lastModifiedDate":"2022-04-02"},{"lineNumber":138,"author":{"gitId":"seksek13"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_RECORD_SUCCESS, editedRecord));","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns the edited Record.","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"    public Record getEditedRecord() {","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"        return editedRecord;","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the edited Record index.","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"    public int getEditedRecordIndex() {","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"        return index.getOneBased();","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"seksek13"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"seksek13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"seksek13"},"content":"            return true;","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"seksek13"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"seksek13"},"content":"        if (!(other instanceof EditRecordCommand)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"seksek13"},"content":"            return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"seksek13"},"content":"        // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"seksek13"},"content":"        EditRecordCommand e \u003d (EditRecordCommand) other;","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"seksek13"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 editRecordDescriptor.equals(e.editRecordDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"seksek13"},"content":"     * Stores the details to edit the record with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"jessicajacelyn"},"content":"     * corresponding field value of the record.","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"seksek13"},"content":"    public static class EditRecordDescriptor {","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"seksek13"},"content":"        private ClientID clientID;","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"seksek13"},"content":"        private InsuranceID insuranceID;","lastModifiedDate":"2022-03-18"},{"lineNumber":182,"author":{"gitId":"seksek13"},"content":"        private StartDate startDate;","lastModifiedDate":"2022-03-18"},{"lineNumber":183,"author":{"gitId":"seksek13"},"content":"        private EndDate endDate;","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":185,"author":{"gitId":"seksek13"},"content":"        public EditRecordDescriptor() {","lastModifiedDate":"2022-03-18"},{"lineNumber":186,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":187,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":188,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":189,"author":{"gitId":"seksek13"},"content":"        /**","lastModifiedDate":"2022-03-18"},{"lineNumber":190,"author":{"gitId":"seksek13"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-18"},{"lineNumber":191,"author":{"gitId":"jessicajacelyn"},"content":"         * A defensive copy of {@code toCopy} is used internally.","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"seksek13"},"content":"         */","lastModifiedDate":"2022-03-18"},{"lineNumber":193,"author":{"gitId":"seksek13"},"content":"        public EditRecordDescriptor(EditRecordDescriptor toCopy) {","lastModifiedDate":"2022-03-18"},{"lineNumber":194,"author":{"gitId":"seksek13"},"content":"            setClientID(toCopy.clientID);","lastModifiedDate":"2022-03-18"},{"lineNumber":195,"author":{"gitId":"seksek13"},"content":"            setInsuranceID(toCopy.insuranceID);","lastModifiedDate":"2022-03-18"},{"lineNumber":196,"author":{"gitId":"seksek13"},"content":"            setStartDate(toCopy.startDate);","lastModifiedDate":"2022-03-18"},{"lineNumber":197,"author":{"gitId":"seksek13"},"content":"            setEndDate(toCopy.endDate);","lastModifiedDate":"2022-03-18"},{"lineNumber":198,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":199,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":200,"author":{"gitId":"seksek13"},"content":"        /**","lastModifiedDate":"2022-03-18"},{"lineNumber":201,"author":{"gitId":"seksek13"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-18"},{"lineNumber":202,"author":{"gitId":"seksek13"},"content":"         */","lastModifiedDate":"2022-03-18"},{"lineNumber":203,"author":{"gitId":"seksek13"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-18"},{"lineNumber":204,"author":{"gitId":"seksek13"},"content":"            return CollectionUtil.isAnyNonNull(clientID, insuranceID, startDate, endDate);","lastModifiedDate":"2022-03-18"},{"lineNumber":205,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":206,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":207,"author":{"gitId":"seksek13"},"content":"        public Optional\u003cClientID\u003e getClientID() {","lastModifiedDate":"2022-03-18"},{"lineNumber":208,"author":{"gitId":"seksek13"},"content":"            return Optional.ofNullable(clientID);","lastModifiedDate":"2022-03-18"},{"lineNumber":209,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":210,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":211,"author":{"gitId":"seksek13"},"content":"        public void setClientID(ClientID clientID) {","lastModifiedDate":"2022-03-18"},{"lineNumber":212,"author":{"gitId":"seksek13"},"content":"            this.clientID \u003d clientID;","lastModifiedDate":"2022-03-18"},{"lineNumber":213,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":214,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":215,"author":{"gitId":"seksek13"},"content":"        public Optional\u003cInsuranceID\u003e getInsuranceID() {","lastModifiedDate":"2022-03-18"},{"lineNumber":216,"author":{"gitId":"seksek13"},"content":"            return Optional.ofNullable(insuranceID);","lastModifiedDate":"2022-03-18"},{"lineNumber":217,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":218,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":219,"author":{"gitId":"seksek13"},"content":"        public void setInsuranceID(InsuranceID insuranceID) {","lastModifiedDate":"2022-03-18"},{"lineNumber":220,"author":{"gitId":"seksek13"},"content":"            this.insuranceID \u003d insuranceID;","lastModifiedDate":"2022-03-18"},{"lineNumber":221,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":222,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":223,"author":{"gitId":"seksek13"},"content":"        public Optional\u003cStartDate\u003e getStartDate() {","lastModifiedDate":"2022-03-18"},{"lineNumber":224,"author":{"gitId":"seksek13"},"content":"            return Optional.ofNullable(startDate);","lastModifiedDate":"2022-03-18"},{"lineNumber":225,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":226,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":227,"author":{"gitId":"seksek13"},"content":"        public void setStartDate(StartDate startDate) {","lastModifiedDate":"2022-03-18"},{"lineNumber":228,"author":{"gitId":"seksek13"},"content":"            this.startDate \u003d startDate;","lastModifiedDate":"2022-03-18"},{"lineNumber":229,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":230,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":231,"author":{"gitId":"seksek13"},"content":"        public Optional\u003cEndDate\u003e getEndDate() {","lastModifiedDate":"2022-03-18"},{"lineNumber":232,"author":{"gitId":"seksek13"},"content":"            return Optional.ofNullable(endDate);","lastModifiedDate":"2022-03-18"},{"lineNumber":233,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":234,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":235,"author":{"gitId":"seksek13"},"content":"        public void setEndDate(EndDate endDate) {","lastModifiedDate":"2022-03-18"},{"lineNumber":236,"author":{"gitId":"seksek13"},"content":"            this.endDate \u003d endDate;","lastModifiedDate":"2022-03-18"},{"lineNumber":237,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":238,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":239,"author":{"gitId":"seksek13"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":240,"author":{"gitId":"seksek13"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":241,"author":{"gitId":"seksek13"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":242,"author":{"gitId":"seksek13"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-18"},{"lineNumber":243,"author":{"gitId":"seksek13"},"content":"                return true;","lastModifiedDate":"2022-03-18"},{"lineNumber":244,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":245,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":246,"author":{"gitId":"seksek13"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":247,"author":{"gitId":"seksek13"},"content":"            if (!(other instanceof EditRecordDescriptor)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":248,"author":{"gitId":"seksek13"},"content":"                return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":249,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":250,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":251,"author":{"gitId":"seksek13"},"content":"            // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":252,"author":{"gitId":"seksek13"},"content":"            EditRecordDescriptor e \u003d (EditRecordDescriptor) other;","lastModifiedDate":"2022-03-18"},{"lineNumber":253,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":254,"author":{"gitId":"seksek13"},"content":"            return getClientID().equals(e.getClientID())","lastModifiedDate":"2022-03-18"},{"lineNumber":255,"author":{"gitId":"seksek13"},"content":"                    \u0026\u0026 getInsuranceID().equals(e.getInsuranceID())","lastModifiedDate":"2022-03-18"},{"lineNumber":256,"author":{"gitId":"seksek13"},"content":"                    \u0026\u0026 getStartDate().equals(e.getStartDate())","lastModifiedDate":"2022-03-18"},{"lineNumber":257,"author":{"gitId":"seksek13"},"content":"                    \u0026\u0026 getEndDate().equals(e.getEndDate());","lastModifiedDate":"2022-03-18"},{"lineNumber":258,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":259,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":260,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":261,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":262,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-18"},{"lineNumber":263,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"seksek13":232,"yunbinmo":4,"jessicajacelyn":6,"zzkzzzz":21}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, false, false, false, false, false, true);","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yunbinmo":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":" * Finds and lists all appointment in appointment book whose description contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":" * Keyword matching is case in-sensitive.","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"public class FindAppointmentCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"            + \" -a : Finds all appointment whose description contain any of \"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"            + \"Example: \" + COMMAND_WORD + \" -a UTown\";","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    private final DescriptionContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    public FindAppointmentCommand(DescriptionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"        String message \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"                String.format(Messages.MESSAGE_APPOINTMENT_LISTED_OVERVIEW, model.getFilteredAppointmentList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(message, false, false, true,","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"                false, false, false, false, false);","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"                || (other instanceof FindAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 predicate.equals(((FindAppointmentCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"yunbinmo":42,"jessicajacelyn":1,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/logic/commands/FindInsuranceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" * Finds and lists all insurances in insurance book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"public class FindInsuranceCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -i : Finds all insurances whose names contain any of \"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"            + \"Example: \" + COMMAND_WORD + \" -i car\";","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"    private final TitleContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    public FindInsuranceCommand(TitleContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        model.updateFilteredInsuranceList(predicate);","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"        String message \u003d Messages.MESSAGE_INSURANCES_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"        String resultMessage \u003d String.format(message, model.getFilteredInsuranceList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"        return new CommandResult(resultMessage, false, true, false,","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"                false, false, false, false, false);","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"                || (other instanceof FindInsuranceCommand // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"                \u0026\u0026 predicate.equals(((FindInsuranceCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"jessicajacelyn":43,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"public class FindPersonCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" c : Finds all persons whose names contain any of \"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" -c alice bob charlie\";","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public FindPersonCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"        String message \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"        return new CommandResult(message, true, false, false, false, false, false, false, false);","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof FindPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 predicate.equals(((FindPersonCommand) other).predicate)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jessicajacelyn":2,"-":34,"zzkzzzz":6}},{"path":"src/main/java/seedu/address/logic/commands/FindRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.RecordContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" * Finds and lists all records in record book whose insurance type contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"public class FindRecordCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"            + \" -r : Finds all records whose insurance type contain any of \"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"            + \"Example: \" + COMMAND_WORD + \" -r health\";","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"    private final RecordContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"    public FindRecordCommand(RecordContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"        model.updateFilteredRecordList((predicate));","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"        String message \u003d Messages.MESSAGE_RECORDS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"        String resultMessage \u003d String.format(message, model.getFilteredRecordList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        return new CommandResult(resultMessage, false, false, false,","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"                true, false, false, false, false);","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"                || (other instanceof FindRecordCommand // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 predicate.equals(((FindRecordCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"seksek13":42,"jessicajacelyn":1,"zzkzzzz":2}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, false, false, false, false, false, false, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunbinmo":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Lists all appointments in the appointment book to the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"public class ListAppointmentCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all unexpired appointments\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"        Predicate\u003cAppointment\u003e predicate \u003d a -\u003e a.getLocalDateTime().isAfter(LocalDateTime.now());","lastModifiedDate":"2022-04-02"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2022-04-02"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":27,"jessicajacelyn":1}},{"path":"src/main/java/seedu/address/logic/commands/ListAppointmentHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENT_HISTORY;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":" * Lists all appointment history in the appointment book to the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"public class ListAppointmentHistoryCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all appointment history\";","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        model.getAppointmentHistoryBook().updateAppointmentHistoryList(model);","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"        model.updateFilteredAppointmentHistoryList(PREDICATE_SHOW_ALL_APPOINTMENT_HISTORY);","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, false, true, false, false, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yunbinmo":2,"jessicajacelyn":23,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/logic/commands/ListExpiredRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EXPIRED_RECORD;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":" * Lists all expired records in the record book to the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"public class ListExpiredRecordCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all expired records\";","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        model.getExpiredRecordBook().updateExpiredRecordList(model);","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"        model.updateFilteredExpiredRecordList(PREDICATE_SHOW_ALL_EXPIRED_RECORD);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, false, false, true, false, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"yunbinmo":2,"jessicajacelyn":23,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/logic/commands/ListInsuranceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INSURANCES;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":" * Lists all insurances in the insurance book to the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"public class ListInsuranceCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all insurances\";","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        model.updateFilteredInsuranceList(PREDICATE_SHOW_ALL_INSURANCES);","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, true, false,","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"                false, false, false, false, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":24}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"public class ListPersonCommand extends Command {","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(MESSAGE_SUCCESS, true, false, false, false, false, false, false, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunbinmo":1,"-":22,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/logic/commands/ListRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-04-02"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Lists all records in the record book to the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"public class ListRecordCommand extends Command {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all records\";","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        Predicate\u003cRecord\u003e predicate \u003d r -\u003e r.getEndLocalDate().isAfter(LocalDate.now());","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        model.updateFilteredRecordList(predicate);","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, true, false, false, false, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"seksek13":19,"yunbinmo":6,"jessicajacelyn":1}},{"path":"src/main/java/seedu/address/logic/commands/SortAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Sorts all appointments in appointment book in ascending or descending order in terms of appointment time","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"public class SortAppointmentCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    public static final String SORT_ASCENDING \u003d \"a\";","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public static final String SORT_DESCENDING \u003d \"d\";","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"            + \": Sorts all appointment in address book in ascending/descending order in terms of appointment time.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"            + \"Example: \" + COMMAND_WORD + \" -a a \"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"            + \"(\u0027a\u0027 for sort in ascending order, \u0027d\u0027 for sort in descending order)\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    private final String sortOption;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    public SortAppointmentCommand(String sortOption) {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        this.sortOption \u003d sortOption;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        Comparator\u003cAppointment\u003e comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"        String message \u003d \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"        switch (sortOption) {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        case SORT_ASCENDING:","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"            comparator \u003d Comparator.comparing(Appointment::getLocalDateTime);","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"            message \u003d String.format(Messages.MESSAGE_APPOINTMENT_SORTED_ASCENDING,","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"                    model.getFilteredAppointmentList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        case SORT_DESCENDING:","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"            comparator \u003d (Appointment a1, Appointment a2) -\u003e a2.getLocalDateTime().compareTo(a1.getLocalDateTime());","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"            message \u003d String.format(Messages.MESSAGE_APPOINTMENT_SORTED_DESCENDING,","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"                    model.getFilteredAppointmentList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        default:","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"            // A comparator that does nothing","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"            comparator \u003d (Appointment a1, Appointment a2) -\u003e 0;","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"        model.sortAppointmentBook(comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"        return new CommandResult(message, false, false, true,","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"                false, false, false, false, false);","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"                || (other instanceof SortAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 sortOption.equals(((SortAppointmentCommand) other).sortOption)); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"yunbinmo":55,"jessicajacelyn":4}},{"path":"src/main/java/seedu/address/logic/commands/SortRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Sorts all record in record book ascending/descending order in terms of start/end date","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"public class SortRecordCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    public static final String SORT_START_DATE_ASC \u003d \"sa\";","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    public static final String SORT_START_DATE_DES \u003d \"sd\";","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public static final String SORT_END_DATE_ASC \u003d \"ea\";","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    public static final String SORT_END_DATE_DES \u003d \"ed\";","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"            + \": Sorts all record in record book in ascending or descending order in terms of start/end date.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"            + \"Example: \" + COMMAND_WORD + \" -r sa \" + \"(\u0027sa\u0027 for sort start date in ascending order). \\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"            + COMMAND_WORD + \" -r ed \" + \"(\u0027ed\u0027 for sort end date in descending order). \\n\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    private final String sortOption;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * @param sortOption sort in ascending/descending order","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    public SortRecordCommand(String sortOption) {","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        this.sortOption \u003d sortOption;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        Comparator\u003cRecord\u003e comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        String message \u003d \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        switch (sortOption) {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        case SORT_START_DATE_ASC:","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"            comparator \u003d Comparator.comparing(Record::getStartLocalDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"            message \u003d String.format(Messages.MESSAGE_RECORD_SORTED_START_TIME_ASCENDING,","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"                    model.getFilteredRecordList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        case SORT_START_DATE_DES:","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            comparator \u003d (Record a1, Record a2) -\u003e a2.getStartLocalDate().compareTo(a1.getStartLocalDate());","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"            message \u003d String.format(Messages.MESSAGE_RECORD_SORTED_START_TIME_DESCENDING,","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                    model.getFilteredRecordList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        case SORT_END_DATE_ASC:","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"            comparator \u003d Comparator.comparing(Record::getEndLocalDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"            message \u003d String.format(Messages.MESSAGE_RECORD_SORTED_END_TIME_ASCENDING,","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"                    model.getFilteredRecordList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        case SORT_END_DATE_DES:","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"            comparator \u003d (Record a1, Record a2) -\u003e a2.getEndLocalDate().compareTo(a1.getEndLocalDate());","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"            message \u003d String.format(Messages.MESSAGE_RECORD_SORTED_END_TIME_DESCENDING,","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"                    model.getFilteredRecordList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        default:","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"            // A comparator that does nothing","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"            comparator \u003d (Record a1, Record a2) -\u003e 0;","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"        model.sortRecordBook(comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        return new CommandResult(message, false, false, false,","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"                true, false, false, false, false);","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof SortRecordCommand // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 sortOption.equals(((SortRecordCommand) other).sortOption)); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jessicajacelyn":4,"zzkzzzz":72}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":" * Represents an error which occurs during execution of a Command","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"seksek13":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DATETIME;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DESCRIPTION;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":" * Parses input arguments and creates a new AddAppointmentCommand object","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"     * and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPT_DESCRIPTION, PREFIX_APPT_DATETIME);","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        // Just check if any prefixes are missing","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_APPT_DESCRIPTION, PREFIX_APPT_DATETIME)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"        Description description \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"                AppointmentParserUtil.parseDescription(argMultimap.getValue(PREFIX_APPT_DESCRIPTION).get());","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        DateTime dateTime \u003d AppointmentParserUtil.parseDateTime(argMultimap.getValue(PREFIX_APPT_DATETIME).get());","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        Appointment appointment \u003d new Appointment(description, dateTime);","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":51}},{"path":"src/main/java/seedu/address/logic/parser/AddInsuranceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.AddInsuranceCommand;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Price;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Title;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new AddInsuranceCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"public class AddInsuranceCommandParser implements Parser\u003cAddInsuranceCommand\u003e {","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public AddInsuranceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_PRICE);","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_PRICE)","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"            System.out.println(arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_PRICE));","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"            System.out.println(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInsuranceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        Title title \u003d InsuranceParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        Price price \u003d InsuranceParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        Insurance insurance \u003d new Insurance(title, price);","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        return new AddInsuranceCommand(insurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":53}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        Name name \u003d PersonParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        Phone phone \u003d PersonParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        Email email \u003d PersonParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        Address address \u003d PersonParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        Set\u003cTag\u003e tagList \u003d PersonParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jessicajacelyn":1,"-":49,"zzkzzzz":10}},{"path":"src/main/java/seedu/address/logic/parser/AddRecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_CLIENTID;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_ENDDATE;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_INSURANCEID;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_STARTDATE;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.AddRecordCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.ClientID;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.EndDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.InsuranceID;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.StartDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":" * Parses input arguments and creates a new AddRecordCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"public class AddRecordCommandParser {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_END_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"            \"Record start date must be before end date!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"     * Parses the given {@code String} of arguments in the context of the AddRecordCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"     * and returns an AddRecordCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"    public AddRecordCommand parse(List\u003cPerson\u003e personList, ObservableList\u003cInsurance\u003e insuranceList,","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"                                  String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_REC_CLIENTID, PREFIX_REC_INSURANCEID,","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"                        PREFIX_REC_STARTDATE, PREFIX_REC_ENDDATE);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"        // Just check if any prefixes are missing","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_REC_CLIENTID, PREFIX_REC_INSURANCEID,","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"                PREFIX_REC_STARTDATE, PREFIX_REC_ENDDATE)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"                    AddRecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"        ClientID clientID \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"                RecordParserUtil.parseClientID(argMultimap.getValue(PREFIX_REC_CLIENTID).get());","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"        int clientIndex \u003d Integer.parseInt(clientID.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"        if (clientIndex \u003e personList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"                    AddRecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"        clientID \u003d new ClientID(personList.get(clientIndex - 1).getName().toString(), true);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"        InsuranceID insuranceID \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"                RecordParserUtil.parseInsuranceID(argMultimap.getValue(PREFIX_REC_INSURANCEID).get());","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"        int insuranceIndex \u003d Integer.parseInt(insuranceID.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"        if (insuranceIndex \u003e insuranceList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX,","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"                    AddRecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"        insuranceID \u003d new InsuranceID(insuranceList.get(insuranceIndex - 1).getTitle().toString(), true);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"        StartDate startDate \u003d RecordParserUtil.parseStartDate(argMultimap.getValue(PREFIX_REC_STARTDATE).get());","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"seksek13"},"content":"        EndDate endDate \u003d RecordParserUtil.parseEndDate(argMultimap.getValue(PREFIX_REC_ENDDATE).get());","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"seksek13"},"content":"        if (endDate.getEndDate().isBefore(startDate.getStartDate())","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"seksek13"},"content":"                || endDate.getEndDate().isEqual(startDate.getStartDate())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(String.format(MESSAGE_END_CONSTRAINTS, AddRecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"seksek13"},"content":"        Record record \u003d new Record(clientID, insuranceID, startDate, endDate);","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"seksek13"},"content":"        return new AddRecordCommand(record);","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"seksek13":71,"zzkzzzz":22}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.AddInsuranceCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.AddRecordCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.ClearAppointmentCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.DeleteInsuranceCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.DeleteRecordCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditInsuranceCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.EditRecordCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.FindInsuranceCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.FindRecordCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.ListAppointmentCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.ListAppointmentHistoryCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.ListExpiredRecordCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.ListInsuranceCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.ListRecordCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.SortAppointmentCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.SortRecordCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    private static final String SINGLE_COMMAND_FORMAT \u003d \"\";","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"    public Command parseCommand(Model model, String userInput) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        final String theRest \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        final String type \u003d getCommandType(theRest);","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"        if (type !\u003d SINGLE_COMMAND_FORMAT) {","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"            arguments \u003d theRest.trim().substring(2);","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        switch (type) {","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"        case Command.COMMAND_PERSON:","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"            return this.parsePersonCommand(commandWord, arguments);","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"        case Command.COMMAND_INSURANCE:","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"            return this.parseInsuranceCommand(commandWord, arguments);","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        case Command.COMMAND_RECORD:","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"seksek13"},"content":"            return this.parseRecordCommand(commandWord, arguments, model.getAddressBook().getPersonList(),","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"seksek13"},"content":"                    model.getFilteredInsuranceList());","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"        case Command.COMMAND_APPOINTMENT:","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"            return this.parseAppointmentCommand(commandWord, arguments);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"jessicajacelyn"},"content":"        case Command.COMMAND_APPOINTMENT_HISTORY:","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"jessicajacelyn"},"content":"            return this.parseAppointmentHistoryCommand(commandWord);","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"jessicajacelyn"},"content":"        case Command.COMMAND_EXPIRED_RECORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"jessicajacelyn"},"content":"            return this.parseExpiredRecordCommand(commandWord);","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        case SINGLE_COMMAND_FORMAT:","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"            return this.parseGeneralCommand(commandWord);","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        default:","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"    private Command parseGeneralCommand(String commandWord) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"    private String getCommandType(String arguments) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"        if (arguments.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"            return SINGLE_COMMAND_FORMAT;","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"        if (arguments.trim().length() \u003c 2) {","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":124,"author":{"gitId":"yunbinmo"},"content":"        if (arguments.trim().split(\" \")[0].length() !\u003d 2) {","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-19"},{"lineNumber":126,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"        return arguments.trim().substring(0, 2);","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"jessicajacelyn"},"content":"     * Parse person command.","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"     * @param commandWord the command word","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"     * @param arguments   the argument","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-02-24"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"    public Command parsePersonCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-02-24"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-24"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-24"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-24"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-24"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-02-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"        case ListPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-24"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"            return new ListPersonCommand();","lastModifiedDate":"2022-02-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"        default:","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"jessicajacelyn"},"content":"     * Parse insurance command.","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":163,"author":{"gitId":"zzkzzzz"},"content":"     * @param commandWord the command word","lastModifiedDate":"2022-02-28"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"     * @param arguments   the argument","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"zzkzzzz"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-02-28"},{"lineNumber":166,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-28"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"    public Command parseInsuranceCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-02-28"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"        case AddInsuranceCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-28"},{"lineNumber":171,"author":{"gitId":"zzkzzzz"},"content":"            return new AddInsuranceCommandParser().parse(arguments);","lastModifiedDate":"2022-02-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"zzkzzzz"},"content":"        case DeleteInsuranceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"zzkzzzz"},"content":"            return new DeleteInsuranceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"zzkzzzz"},"content":"        case ListInsuranceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"zzkzzzz"},"content":"            return new ListInsuranceCommand();","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"zzkzzzz"},"content":"        case EditInsuranceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"zzkzzzz"},"content":"            return new EditInsuranceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"jessicajacelyn"},"content":"        case FindInsuranceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"jessicajacelyn"},"content":"            return new FindInsuranceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":184,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"yunbinmo"},"content":"     * Parse appointment command.","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"yunbinmo"},"content":"     * @param commandWord the command word","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"yunbinmo"},"content":"     * @param arguments   the argument","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"yunbinmo"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-06"},{"lineNumber":196,"author":{"gitId":"yunbinmo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-06"},{"lineNumber":197,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":198,"author":{"gitId":"yunbinmo"},"content":"    public Command parseAppointmentCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"yunbinmo"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"yunbinmo"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"yunbinmo"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"yunbinmo"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":203,"author":{"gitId":"yunbinmo"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-03-06"},{"lineNumber":204,"author":{"gitId":"yunbinmo"},"content":"        case ListAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"yunbinmo"},"content":"            return new ListAppointmentCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":206,"author":{"gitId":"yunbinmo"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-18"},{"lineNumber":207,"author":{"gitId":"yunbinmo"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":208,"author":{"gitId":"yunbinmo"},"content":"        case FindAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-18"},{"lineNumber":209,"author":{"gitId":"yunbinmo"},"content":"            return new FindAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":210,"author":{"gitId":"yunbinmo"},"content":"        case ClearAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"yunbinmo"},"content":"            return new ClearAppointmentCommand();","lastModifiedDate":"2022-03-19"},{"lineNumber":212,"author":{"gitId":"yunbinmo"},"content":"        case SortAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"yunbinmo"},"content":"            return new SortAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"yunbinmo"},"content":"        default:","lastModifiedDate":"2022-03-06"},{"lineNumber":215,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":216,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":217,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":218,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":219,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":220,"author":{"gitId":"jessicajacelyn"},"content":"     * Parse appointment history command.","lastModifiedDate":"2022-03-13"},{"lineNumber":221,"author":{"gitId":"jessicajacelyn"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":222,"author":{"gitId":"jessicajacelyn"},"content":"     * @param commandWord the command word","lastModifiedDate":"2022-04-07"},{"lineNumber":223,"author":{"gitId":"jessicajacelyn"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-13"},{"lineNumber":224,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":225,"author":{"gitId":"jessicajacelyn"},"content":"    private Command parseAppointmentHistoryCommand(String commandWord) throws ParseException {","lastModifiedDate":"2022-04-07"},{"lineNumber":226,"author":{"gitId":"jessicajacelyn"},"content":"        if (commandWord.equals(ListAppointmentHistoryCommand.COMMAND_WORD)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":227,"author":{"gitId":"jessicajacelyn"},"content":"            return new ListAppointmentHistoryCommand();","lastModifiedDate":"2022-03-13"},{"lineNumber":228,"author":{"gitId":"jessicajacelyn"},"content":"        } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":229,"author":{"gitId":"jessicajacelyn"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-04-07"},{"lineNumber":230,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":231,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":232,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":233,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"jessicajacelyn"},"content":"     * Parse expired record command.","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"jessicajacelyn"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"jessicajacelyn"},"content":"     * @param commandWord the command word","lastModifiedDate":"2022-04-07"},{"lineNumber":237,"author":{"gitId":"jessicajacelyn"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"jessicajacelyn"},"content":"    private Command parseExpiredRecordCommand(String commandWord) throws ParseException {","lastModifiedDate":"2022-04-07"},{"lineNumber":240,"author":{"gitId":"jessicajacelyn"},"content":"        if (commandWord.equals(ListExpiredRecordCommand.COMMAND_WORD)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":241,"author":{"gitId":"jessicajacelyn"},"content":"            return new ListExpiredRecordCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"jessicajacelyn"},"content":"        } else {","lastModifiedDate":"2022-04-07"},{"lineNumber":243,"author":{"gitId":"jessicajacelyn"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-04-07"},{"lineNumber":244,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":246,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":248,"author":{"gitId":"seksek13"},"content":"     * Parse appointment command.","lastModifiedDate":"2022-03-12"},{"lineNumber":249,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":250,"author":{"gitId":"seksek13"},"content":"     * @param commandWord the command word","lastModifiedDate":"2022-03-12"},{"lineNumber":251,"author":{"gitId":"seksek13"},"content":"     * @param arguments   the argument","lastModifiedDate":"2022-03-12"},{"lineNumber":252,"author":{"gitId":"seksek13"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-12"},{"lineNumber":253,"author":{"gitId":"seksek13"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":254,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":255,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"seksek13"},"content":"    public Command parseRecordCommand(String commandWord, String arguments, List\u003cPerson\u003e personList,","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"seksek13"},"content":"                                      ObservableList\u003cInsurance\u003e insuranceList) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":259,"author":{"gitId":"seksek13"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-12"},{"lineNumber":260,"author":{"gitId":"seksek13"},"content":"        case AddRecordCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":261,"author":{"gitId":"seksek13"},"content":"            return new AddRecordCommandParser().parse(personList, insuranceList, arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":263,"author":{"gitId":"seksek13"},"content":"        case DeleteRecordCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":264,"author":{"gitId":"seksek13"},"content":"            return new DeleteRecordCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":265,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":266,"author":{"gitId":"seksek13"},"content":"        case ListRecordCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":267,"author":{"gitId":"seksek13"},"content":"            return new ListRecordCommand();","lastModifiedDate":"2022-03-12"},{"lineNumber":268,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":269,"author":{"gitId":"seksek13"},"content":"        case EditRecordCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-18"},{"lineNumber":270,"author":{"gitId":"seksek13"},"content":"            return new EditRecordCommandParser().parse(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":271,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":272,"author":{"gitId":"seksek13"},"content":"        case FindRecordCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-18"},{"lineNumber":273,"author":{"gitId":"seksek13"},"content":"            return new FindRecordCommandParser().parse(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":274,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":275,"author":{"gitId":"zzkzzzz"},"content":"        case SortRecordCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"zzkzzzz"},"content":"            return new SortRecordCommandParser().parse(arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":277,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"seksek13"},"content":"        default:","lastModifiedDate":"2022-03-12"},{"lineNumber":279,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-12"},{"lineNumber":280,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":281,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunbinmo":37,"seksek13":38,"jessicajacelyn":55,"-":68,"zzkzzzz":84}},{"path":"src/main/java/seedu/address/logic/parser/AppointmentParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"public class AppointmentParserUtil {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"     * trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"     * Parses a {@code String dateTime} into an {@code DateTime}.","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    public static DateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"        LocalDateTime result \u003d DateTime.validateDateTime(trimmedDateTime);","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"        if (result \u003d\u003d null || result.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"        return new DateTime(result);","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":62}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"     * Returns the preamble for add appointment command (text before the first valid prefix and after \u0027-a\u0027).","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"     * Trims any leading/trailing spaces.","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"    public String getAddAppointmentPreamble() {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"        return getValue(new Prefix(\"-a \")).orElse(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"yunbinmo":8,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    public static final Prefix PREFIX_APPT_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public static final Prefix PREFIX_APPT_DATETIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"    public static final Prefix PREFIX_REC_CLIENTID \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"    public static final Prefix PREFIX_REC_INSURANCEID \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"    public static final Prefix PREFIX_REC_STARTDATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"    public static final Prefix PREFIX_REC_ENDDATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yunbinmo":2,"seksek13":4,"-":14,"zzkzzzz":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":" * Parses input arguments and creates a new DeleteAppointmentCommand object","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAppointmentCommand","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"     * and returns a DeleteAppointmentCommand object for execution.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"            Index index \u003d AppointmentParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"            return new DeleteAppointmentCommand(index);","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteInsuranceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.DeleteInsuranceCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new DeleteInsuranceCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"public class DeleteInsuranceCommandParser implements Parser\u003cDeleteInsuranceCommand\u003e {","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteInsuranceCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns a DeleteInsuranceCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    public DeleteInsuranceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"            Index index \u003d InsuranceParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"            return new DeleteInsuranceCommand(index);","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteInsuranceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"jessicajacelyn":3,"zzkzzzz":26}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"            Index index \u003d PersonParserUtil.parseIndex(args);","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jessicajacelyn":3,"-":20,"zzkzzzz":6}},{"path":"src/main/java/seedu/address/logic/parser/DeleteRecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.DeleteRecordCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new DeleteRecordCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"public class DeleteRecordCommandParser {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteRecordCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"     * and returns a DeleteRecordCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"    public DeleteRecordCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"            Index index \u003d RecordParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"            return new DeleteRecordCommand(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteRecordCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"seksek13":8,"jessicajacelyn":1,"-":19}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DATETIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DESCRIPTION;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new EditAppointmentCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAppointmentCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns an EditAppointmentCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPT_DESCRIPTION, PREFIX_APPT_DATETIME);","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        Index index;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"            index \u003d AppointmentParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        if (argMultimap.getValue(PREFIX_APPT_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"            editAppointmentDescriptor.setDescription(AppointmentParserUtil","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"                    .parseDescription(argMultimap.getValue(PREFIX_APPT_DESCRIPTION).get()));","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"        if (argMultimap.getValue(PREFIX_APPT_DATETIME).isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"            editAppointmentDescriptor.setDateTime(AppointmentParserUtil","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"                    .parseDateTime(argMultimap.getValue(PREFIX_APPT_DATETIME).get()));","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        return new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"yunbinmo":50,"jessicajacelyn":3}},{"path":"src/main/java/seedu/address/logic/parser/EditInsuranceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditInsuranceCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditInsuranceCommand.EditInsuranceDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new EditInsuranceCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"public class EditInsuranceCommandParser implements Parser\u003cEditInsuranceCommand\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the EditInsuranceCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns an EditInsuranceCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public EditInsuranceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_PRICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        Index index;","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"            index \u003d InsuranceParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"                    EditInsuranceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        EditInsuranceDescriptor editInsuranceDescriptor \u003d new EditInsuranceDescriptor();","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"            editInsuranceDescriptor.setTitle(InsuranceParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"            editInsuranceDescriptor.setPrice(InsuranceParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        if (!editInsuranceDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(EditInsuranceCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        return new EditInsuranceCommand(index, editInsuranceDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"jessicajacelyn":3,"zzkzzzz":51}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"            index \u003d PersonParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"                    EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"            editPersonDescriptor.setName(PersonParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"            editPersonDescriptor.setPhone(PersonParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"            editPersonDescriptor.setEmail(PersonParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"            editPersonDescriptor.setAddress(PersonParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"        return Optional.of(PersonParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jessicajacelyn":3,"-":66,"zzkzzzz":14}},{"path":"src/main/java/seedu/address/logic/parser/EditRecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_CLIENTID;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_ENDDATE;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_INSURANCEID;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REC_STARTDATE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.EditRecordCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.EditRecordCommand.EditRecordDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new EditRecordCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"public class EditRecordCommandParser implements Parser\u003cEditRecordCommand\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the EditRecordCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns an EditRecordCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    public EditRecordCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_REC_CLIENTID, PREFIX_REC_INSURANCEID,","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"                        PREFIX_REC_STARTDATE, PREFIX_REC_ENDDATE);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"        Index index;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"            index \u003d RecordParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"                    EditRecordCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"        EditRecordDescriptor editRecordDescriptor \u003d new EditRecordDescriptor();","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"        if (argMultimap.getValue(PREFIX_REC_CLIENTID).isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"            editRecordDescriptor.setClientID((RecordParserUtil.parseClientID(","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"                    argMultimap.getValue(PREFIX_REC_CLIENTID).get())));","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"        if (argMultimap.getValue(PREFIX_REC_INSURANCEID).isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"            editRecordDescriptor.setInsuranceID((RecordParserUtil.parseInsuranceID(","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"                    argMultimap.getValue(PREFIX_REC_INSURANCEID).get())));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"        if (argMultimap.getValue(PREFIX_REC_STARTDATE).isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"            editRecordDescriptor.setStartDate((RecordParserUtil.parseStartDate(","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"                    argMultimap.getValue(PREFIX_REC_STARTDATE).get())));","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"        if (argMultimap.getValue(PREFIX_REC_ENDDATE).isPresent()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"            editRecordDescriptor.setEndDate((RecordParserUtil.parseEndDate(","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"                    argMultimap.getValue(PREFIX_REC_ENDDATE).get())));","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        if (!editRecordDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(EditRecordCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"        return new EditRecordCommand(index, editRecordDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"seksek13":65,"jessicajacelyn":3}},{"path":"src/main/java/seedu/address/logic/parser/FindAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new FindAppointmentCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"public class FindAppointmentCommandParser implements Parser\u003cFindAppointmentCommand\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the FindAppointmentCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns a FindAppointmentCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    public FindAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        String[] descKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        return new FindAppointmentCommand(new DescriptionContainsKeywordsPredicate(Arrays.asList(descKeywords)));","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"yunbinmo":28,"jessicajacelyn":3}},{"path":"src/main/java/seedu/address/logic/parser/FindInsuranceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.FindInsuranceCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new FindInsuranceCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"public class FindInsuranceCommandParser implements Parser\u003cFindInsuranceCommand\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the FindInsuranceCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns a FindInsuranceCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"    public FindInsuranceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindInsuranceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        return new FindInsuranceCommand(new TitleContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"jessicajacelyn":33}},{"path":"src/main/java/seedu/address/logic/parser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new FindPersonCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"public class FindPersonCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns a FindPersonCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        return new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jessicajacelyn":3,"-":25,"zzkzzzz":5}},{"path":"src/main/java/seedu/address/logic/parser/FindRecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.commands.FindRecordCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.RecordContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Parses input arguments and creates a new FindRecordCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"public class FindRecordCommandParser implements Parser\u003cFindRecordCommand\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"     * Parses the given {@code String} of arguments in the context of the FindRecordCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"     * and returns a FindRecordCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"    public FindRecordCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindRecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"        return new FindRecordCommand(new RecordContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"seksek13":31,"jessicajacelyn":3}},{"path":"src/main/java/seedu/address/logic/parser/InsuranceParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Price;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Title;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"public class InsuranceParserUtil {","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * trimmed.","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"     * Parses a {@code String price} into a {@code Price}.","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"zzkzzzz":61}},{"path":"src/main/java/seedu/address/logic/parser/PersonParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"public class PersonParserUtil {","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":123,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/logic/parser/RecordParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.ClientID;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.EndDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.InsuranceID;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.StartDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"public class RecordParserUtil {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"     * trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"    public static ClientID parseClientID(String clientID) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"        requireNonNull(clientID);","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"        String trimmedClientID \u003d clientID.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"        if (!ClientID.isValidClientID(clientID)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(ClientID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"        if (!ClientID.isNotZeroClientID(clientID)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(ClientID.MESSAGE_INDEX_CONSTRAINT);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        return new ClientID(trimmedClientID);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"    public static InsuranceID parseInsuranceID(String insuranceID) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"        requireNonNull(insuranceID);","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"        String trimmedInsuranceID \u003d insuranceID.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"        if (!InsuranceID.isValidInsuranceID(insuranceID)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(InsuranceID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"        if (!InsuranceID.isNotZeroInsuranceID(insuranceID)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(InsuranceID.MESSAGE_INDEX_CONSTRAINT);","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"        return new InsuranceID(trimmedInsuranceID);","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"     * Parses a {@code String dateTime} into an {@code StartDate}.","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"     * @throws ParseException if the given {@code startdate} is invalid.","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"    public static StartDate parseStartDate(String startDate) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"        requireNonNull(startDate);","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"        String trimmedStartDate \u003d startDate.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"seksek13"},"content":"        LocalDate result \u003d StartDate.validateDateTime(trimmedStartDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"seksek13"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(StartDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"seksek13"},"content":"        return new StartDate(result);","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"seksek13"},"content":"     * Parses a {@code String dateTime} into an {@code EndDate}.","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"seksek13"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"seksek13"},"content":"     * @throws ParseException if the given {@code endDate} is invalid.","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"seksek13"},"content":"    public static EndDate parseEndDate(String endDate) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"seksek13"},"content":"        requireNonNull(endDate);","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"seksek13"},"content":"        String trimmedEndDate \u003d endDate.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"seksek13"},"content":"        LocalDate result \u003d EndDate.validateDateTime(trimmedEndDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"seksek13"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"seksek13"},"content":"            throw new ParseException(StartDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"seksek13"},"content":"        return new EndDate(result);","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"seksek13":96,"zzkzzzz":9}},{"path":"src/main/java/seedu/address/logic/parser/SortAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.SortAppointmentCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":" * Parses input arguments and creates a new SortAppointmentCommand object","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"public class SortAppointmentCommandParser {","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"     * Parses the given {@code String} of arguments in the context of the SortAppointmentCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"     * and returns a SortAppointmentCommand object for execution.","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public SortAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"        if (trimmedArgs.isEmpty() || (!trimmedArgs.equals(SortAppointmentCommand.SORT_ASCENDING)","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 !trimmedArgs.equals(SortAppointmentCommand.SORT_DESCENDING))) {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"        return new SortAppointmentCommand(trimmedArgs);","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"yunbinmo":28}},{"path":"src/main/java/seedu/address/logic/parser/SortRecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.SortRecordCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" * Parses input arguments and creates a new SortRecordCommand object","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"public class SortRecordCommandParser {","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"     * Parses the given {@code String} of arguments in the context of the SortRecordCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"     * and returns a SortRecordCommand object for execution.","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public SortRecordCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"        if (validateArgs(trimmedArgs)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortRecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        return new SortRecordCommand(trimmedArgs);","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    private boolean validateArgs(String arg) {","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        if (arg.equals(SortRecordCommand.SORT_START_DATE_ASC)","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"                || arg.equals(SortRecordCommand.SORT_START_DATE_DES)","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"                || arg.equals(SortRecordCommand.SORT_END_DATE_ASC)","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"                || arg.equals(SortRecordCommand.SORT_END_DATE_DES)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"            return false;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        return true;","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"zzkzzzz":39}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    public AddressBook() {","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        // return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"        for (Iterator\u003cPerson\u003e it \u003d persons.iterator(); it.hasNext(); ) {","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"            Person person \u003d it.next();","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"            builder.append(person.toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2022-03-05"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":118,"zzkzzzz":11}},{"path":"src/main/java/seedu/address/model/AppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":" * Wraps all data at the appointment-book level","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":" * Duplicates are not allowed (by .isSameAppointment comparison)","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"public class AppointmentBook implements ReadOnlyAppointmentBook {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        this.appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    public AppointmentBook() {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"     * Creates an AddressBook using the Appointments in the {@code toBeCopied}","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    public AppointmentBook(ReadOnlyAppointmentBook toBeCopied) {","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        this();","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"        this.resetData(toBeCopied);","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"     * Replaces the contents of the appointment list with {@code appointment}.","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"     * {@code appointment} must not contain duplicate appointments.","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"     * Resets the existing data of this {@code AppointmentBook} with {@code newData}.","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"    public void resetData(ReadOnlyAppointmentBook newData) {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        this.setAppointments(newData.getAppointmentList());","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    //// appointment-level operations","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the appointment book.","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"        return this.appointments.contains(appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"     * Adds an appointment to the appointment book.","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"     * The insurance must not already exist in the appointment book.","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"    public void addAppointment(Appointment a) {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"        this.appointments.add(a);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"     * Replaces the given insurance {@code target} in the list with {@code editedInsurance}.","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"     * {@code target} must exist in the insurance book.","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"     * The insurance identity of {@code editedInsurance} must not be the same as another","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"     * existing insurance in the insurance book.","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"        this.appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"yunbinmo"},"content":"     * Removes {@code key} from this {@code AppointmentBook}.","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"yunbinmo"},"content":"     * {@code key} must exist in the appointment book.","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"yunbinmo"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"        this.appointments.remove(key);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"yunbinmo"},"content":"     * Sorts the appointment list.","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"yunbinmo"},"content":"     * @param comparator Criteria for sorting.","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"    public void sortAppointment(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"yunbinmo"},"content":"        this.appointments.sort(comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"yunbinmo"},"content":"    //// util methods","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"yunbinmo"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"yunbinmo"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"yunbinmo"},"content":"        for (Iterator\u003cAppointment\u003e it \u003d appointments.iterator(); it.hasNext(); ) {","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"yunbinmo"},"content":"            Appointment appointment \u003d it.next();","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"yunbinmo"},"content":"            builder.append(appointment.toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"yunbinmo"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"yunbinmo"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"yunbinmo"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"yunbinmo"},"content":"        return this.appointments.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"yunbinmo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"yunbinmo"},"content":"                || (other instanceof AppointmentBook // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 this.appointments.equals(((AppointmentBook) other).appointments));","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"yunbinmo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"yunbinmo"},"content":"        return this.appointments.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"yunbinmo":128}},{"path":"src/main/java/seedu/address/model/AppointmentHistoryBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":" * Wraps all data at the history-book level","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Duplicates are not allowed (by .isSameHistory comparison)","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"public class AppointmentHistoryBook implements ReadOnlyAppointmentHistoryBook {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    private final ObservableList\u003cAppointment\u003e history;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"        this.history \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public AppointmentHistoryBook() {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"     * Constructor using an AppointmentBook.","lastModifiedDate":"2022-04-02"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    public AppointmentHistoryBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"        ObservableList\u003cAppointment\u003e appointments \u003d appointmentBook.getAppointmentList();","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        for (Appointment a : appointments) {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"            DateTime appointmentDate \u003d a.getDateTime();","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"            // assert false;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"            if (appointmentDate.isBefore(now)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"                this.history.add(a);","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"     * Updates the appointment history list.","lastModifiedDate":"2022-04-02"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"     * @param model The model object.","lastModifiedDate":"2022-04-02"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    public void updateAppointmentHistoryList(Model model) {","lastModifiedDate":"2022-04-02"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        ObservableList\u003cAppointment\u003e appointments \u003d model.getAppointmentBook().getAppointmentList();","lastModifiedDate":"2022-04-02"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2022-04-02"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"        for (Appointment a : appointments) {","lastModifiedDate":"2022-04-02"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"            DateTime appointmentDate \u003d a.getDateTime();","lastModifiedDate":"2022-04-02"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"            // assert false;","lastModifiedDate":"2022-04-02"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"            if (appointmentDate.isBefore(now) \u0026\u0026 !this.history.contains(a)) {","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"                this.history.add(a);","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentHistoryList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"        return this.history;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yunbinmo":17,"jessicajacelyn":35,"zzkzzzz":8}},{"path":"src/main/java/seedu/address/model/ExpiredRecordBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"public class ExpiredRecordBook implements ReadOnlyExpiredRecordBook {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"    private final ObservableList\u003cRecord\u003e record;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"    {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"        this.record \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    public ExpiredRecordBook() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"     * Constructor using RecordBook","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    public ExpiredRecordBook(ReadOnlyRecordBook recordBook) {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"        ObservableList\u003cRecord\u003e records \u003d recordBook.getRecordList();","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"        for (Record r : records) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"            LocalDate endDate \u003d r.getEndDate().getDate();","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"            if (endDate.isBefore(now)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"                this.record.add(r);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"     * Updates the record history list.","lastModifiedDate":"2022-04-02"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"     * @param model The model object.","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"    public void updateExpiredRecordList(Model model) {","lastModifiedDate":"2022-04-02"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"        ObservableList\u003cRecord\u003e records \u003d model.getRecordBook().getRecordList();","lastModifiedDate":"2022-04-02"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2022-04-02"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        for (Record r : records) {","lastModifiedDate":"2022-04-02"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"            LocalDate endDate \u003d r.getEndDate().getDate();","lastModifiedDate":"2022-04-02"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"            if (endDate.isBefore(now) \u0026\u0026 !this.record.contains(r)) {","lastModifiedDate":"2022-04-02"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"                this.record.add(r);","lastModifiedDate":"2022-04-02"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"    public ObservableList\u003cRecord\u003e getExpiredRecordList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"        return this.record;","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"seksek13":5,"yunbinmo":18,"jessicajacelyn":30,"zzkzzzz":4}},{"path":"src/main/java/seedu/address/model/InsuranceBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.model;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.UniqueInsuranceList;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":" * Wraps all data at the insurance-book level","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":" * Duplicates are not allowed (by .isSameInsurance comparison)","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"public class InsuranceBook implements ReadOnlyInsuranceBook {","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    private final UniqueInsuranceList insurances;","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    {","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        this.insurances \u003d new UniqueInsuranceList();","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceBook() {","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * Creates an InsuranceBook using the Insurances in the {@code toBeCopied}","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceBook(ReadOnlyInsuranceBook toBeCopied) {","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        this();","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        this.resetData(toBeCopied);","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     * Replaces the contents of the insurance list with {@code insurances}.","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     * {@code insurances} must not contain duplicate insurances.","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    public void setInsurances(List\u003cInsurance\u003e insurances) {","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        this.insurances.setInsurances(insurances);","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"     * Resets the existing data of this {@code InsuranceBook} with {@code newData}.","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    public void resetData(ReadOnlyInsuranceBook newData) {","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        this.setInsurances(newData.getInsuranceList());","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"    //// insurance-level operations","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns true if n  insurance with the same identity as {@code insurance} exists in the insurance book.","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"    public boolean hasInsurance(Insurance insurance) {","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(insurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        return this.insurances.contains(insurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"     * Adds a insurance to the insurance book.","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"     * The insurance must not already exist in the insurance book.","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    public void addInsurance(Insurance p) {","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"        this.insurances.add(p);","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"     * Replaces the given insurance {@code target} in the list with {@code editedInsurance}.","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"     * {@code target} must exist in the insurance book.","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"     * The insurance identity of {@code editedInsurance} must not be the same as another","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"     * existing insurance in the insurance book.","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"    public void setInsurance(Insurance target, Insurance editedInsurance) {","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(editedInsurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"        this.insurances.setInsurance(target, editedInsurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"     * Removes {@code key} from this {@code InsuranceBook}.","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"     * {@code key} must exist in the insurance book.","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"    public void removeInsurance(Insurance key) {","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"        this.insurances.remove(key);","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"    //// util methods","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"        for (Iterator\u003cInsurance\u003e it \u003d insurances.iterator(); it.hasNext(); ) {","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"            Insurance insurance \u003d it.next();","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"            builder.append(insurance.toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"    public ObservableList\u003cInsurance\u003e getInsuranceList() {","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"        return this.insurances.asUnmodifiableObservableList();","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof InsuranceBook // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 this.insurances.equals(((InsuranceBook) other).insurances));","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"        return this.insurances.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":122}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.AppointmentHistory;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.ExpiredRecord;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    Predicate\u003cInsurance\u003e PREDICATE_SHOW_ALL_INSURANCES \u003d unused -\u003e true;","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENT_HISTORY \u003d unused -\u003e true;","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    Predicate\u003cExpiredRecord\u003e PREDICATE_SHOW_ALL_EXPIRED_RECORD \u003d unused -\u003e true;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"    Predicate\u003cRecord\u003e PREDICATE_SHOW_ALL_RECORDS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the AddressBook","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the InsuranceBook","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"    ReadOnlyInsuranceBook getInsuranceBook();","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"    void setInsuranceBook(ReadOnlyInsuranceBook insuranceBook);","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-02-28"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"    boolean hasInsurance(Insurance insurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"     * Deletes the given insurance.","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"     * The insurance must exist in the address book.","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"    void deleteInsurance(Insurance target);","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"     * Adds the given insurance.","lastModifiedDate":"2022-02-28"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"     * {@code insurance} must not already exist in the address book.","lastModifiedDate":"2022-02-28"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"    void addInsurance(Insurance insurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"     * Replaces the given person {@code target} with {@code editedInsurance}.","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"zzkzzzz"},"content":"     * The person identity of {@code editedInsurance} must not be the same as another","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"zzkzzzz"},"content":"     * existing person in the address book.","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"zzkzzzz"},"content":"    void setInsurance(Insurance target, Insurance editedInsurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":160,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":161,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":162,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":163,"author":{"gitId":"zzkzzzz"},"content":"     * Returns an unmodifiable view of the filtered insurance list","lastModifiedDate":"2022-02-28"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"zzkzzzz"},"content":"    ObservableList\u003cInsurance\u003e getFilteredInsuranceList();","lastModifiedDate":"2022-02-28"},{"lineNumber":166,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"     * Updates the filter of the filtered insurance list to filter by the given {@code predicate}.","lastModifiedDate":"2022-02-28"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-02-28"},{"lineNumber":171,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":172,"author":{"gitId":"zzkzzzz"},"content":"    void updateFilteredInsuranceList(Predicate\u003cInsurance\u003e predicate);","lastModifiedDate":"2022-02-28"},{"lineNumber":173,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":174,"author":{"gitId":"jessicajacelyn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentHistoryBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns the HistoryBook","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"jessicajacelyn"},"content":"    ReadOnlyAppointmentHistoryBook getAppointmentHistoryBook();","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns true if history exists in the book.","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"jessicajacelyn"},"content":"    boolean hasHistory(AppointmentHistory history);","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the filtered appointment history list","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"jessicajacelyn"},"content":"     * @return","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"jessicajacelyn"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentHistoryList();","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"jessicajacelyn"},"content":"     * Updates the filter of the filtered history list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"jessicajacelyn"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"jessicajacelyn"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"yunbinmo"},"content":"    void updateFilteredAppointmentHistoryList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2022-04-02"},{"lineNumber":197,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"jessicajacelyn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ExpiredRecordBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns the ExpiredRecord","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"jessicajacelyn"},"content":"    ReadOnlyExpiredRecordBook getExpiredRecordBook();","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"zzkzzzz"},"content":"    //    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"zzkzzzz"},"content":"    //     * Returns true if record exists in the book.","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"zzkzzzz"},"content":"    //     */","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"zzkzzzz"},"content":"    //    boolean hasRecord(ExpiredRecord record);","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the filtered appointment record list","lastModifiedDate":"2022-03-15"},{"lineNumber":211,"author":{"gitId":"jessicajacelyn"},"content":"     * @return","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"jessicajacelyn"},"content":"    ObservableList\u003cRecord\u003e getFilteredExpiredRecordList();","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"jessicajacelyn"},"content":"     * Updates the filter of the filtered record list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"jessicajacelyn"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"jessicajacelyn"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"jessicajacelyn"},"content":"    void updateFilteredExpiredRecordList(Predicate\u003cExpiredRecord\u003e predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"yunbinmo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":223,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":224,"author":{"gitId":"yunbinmo"},"content":"     * Returns the AppointmentBook","lastModifiedDate":"2022-03-06"},{"lineNumber":225,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":226,"author":{"gitId":"yunbinmo"},"content":"    ReadOnlyAppointmentBook getAppointmentBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":227,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":228,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":229,"author":{"gitId":"yunbinmo"},"content":"     * Replaces address book data with the data in {@code AppointmentBook}.","lastModifiedDate":"2022-03-06"},{"lineNumber":230,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":231,"author":{"gitId":"yunbinmo"},"content":"    void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook);","lastModifiedDate":"2022-03-06"},{"lineNumber":232,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":233,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"yunbinmo"},"content":"     * Sorts appointment book data.","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"yunbinmo"},"content":"    void sortAppointmentBook(Comparator\u003cAppointment\u003e comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":237,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":238,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":239,"author":{"gitId":"yunbinmo"},"content":"     * Returns true if an appointment with the same identity as {@code person} exists in the book.","lastModifiedDate":"2022-03-06"},{"lineNumber":240,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":241,"author":{"gitId":"yunbinmo"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":242,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":243,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":244,"author":{"gitId":"yunbinmo"},"content":"     * Adds the given appointment.","lastModifiedDate":"2022-03-02"},{"lineNumber":245,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":246,"author":{"gitId":"yunbinmo"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":247,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":248,"author":{"gitId":"yunbinmo"},"content":"    void deleteAppointment(Appointment appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":249,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":250,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":251,"author":{"gitId":"yunbinmo"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2022-03-06"},{"lineNumber":252,"author":{"gitId":"yunbinmo"},"content":"     * {@code target} must exist in the appointment book.","lastModifiedDate":"2022-03-06"},{"lineNumber":253,"author":{"gitId":"yunbinmo"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as another","lastModifiedDate":"2022-03-06"},{"lineNumber":254,"author":{"gitId":"yunbinmo"},"content":"     * existing appointment in the appointment book.","lastModifiedDate":"2022-03-06"},{"lineNumber":255,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":256,"author":{"gitId":"yunbinmo"},"content":"    void setAppointment(Appointment target, Appointment editedInsurance);","lastModifiedDate":"2022-03-06"},{"lineNumber":257,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":258,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":259,"author":{"gitId":"yunbinmo"},"content":"     * Returns an unmodifiable view of the filtered appointment list","lastModifiedDate":"2022-03-06"},{"lineNumber":260,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":261,"author":{"gitId":"yunbinmo"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2022-03-06"},{"lineNumber":262,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":263,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":264,"author":{"gitId":"yunbinmo"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-06"},{"lineNumber":265,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":266,"author":{"gitId":"yunbinmo"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-06"},{"lineNumber":267,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":268,"author":{"gitId":"yunbinmo"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":269,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":271,"author":{"gitId":"seksek13"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RecordBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":272,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":273,"author":{"gitId":"seksek13"},"content":"     * Returns the RecordBook","lastModifiedDate":"2022-03-10"},{"lineNumber":274,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":275,"author":{"gitId":"seksek13"},"content":"    ReadOnlyRecordBook getRecordBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":276,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":277,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":278,"author":{"gitId":"zzkzzzz"},"content":"     * Replaces address book data with the data in {@code RecorBook}.","lastModifiedDate":"2022-03-13"},{"lineNumber":279,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":280,"author":{"gitId":"zzkzzzz"},"content":"    void setRecordBook(ReadOnlyRecordBook recordBook);","lastModifiedDate":"2022-03-13"},{"lineNumber":281,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":282,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":283,"author":{"gitId":"seksek13"},"content":"     * Returns true if an aRecord with the same identity as {@code person} exists in the book.","lastModifiedDate":"2022-03-10"},{"lineNumber":284,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":285,"author":{"gitId":"seksek13"},"content":"    boolean hasRecord(Record record);","lastModifiedDate":"2022-03-10"},{"lineNumber":286,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":287,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":288,"author":{"gitId":"seksek13"},"content":"     * Adds the given record.","lastModifiedDate":"2022-03-10"},{"lineNumber":289,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":290,"author":{"gitId":"seksek13"},"content":"    void addRecord(Record record);","lastModifiedDate":"2022-03-10"},{"lineNumber":291,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":292,"author":{"gitId":"seksek13"},"content":"    void deleteRecord(Record record);","lastModifiedDate":"2022-03-10"},{"lineNumber":293,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":294,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":295,"author":{"gitId":"zzkzzzz"},"content":"     * Sorts record book data.","lastModifiedDate":"2022-03-20"},{"lineNumber":296,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":297,"author":{"gitId":"zzkzzzz"},"content":"    void sortRecordBook(Comparator\u003cRecord\u003e comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":298,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":299,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":300,"author":{"gitId":"seksek13"},"content":"     * Replaces the given record {@code target} with {@code editedRecord}.","lastModifiedDate":"2022-03-10"},{"lineNumber":301,"author":{"gitId":"seksek13"},"content":"     * {@code target} must exist in the record book.","lastModifiedDate":"2022-03-10"},{"lineNumber":302,"author":{"gitId":"seksek13"},"content":"     * The record identity of {@code editedRecord} must not be the same as another","lastModifiedDate":"2022-03-10"},{"lineNumber":303,"author":{"gitId":"seksek13"},"content":"     * existing record in the record book.","lastModifiedDate":"2022-03-10"},{"lineNumber":304,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":305,"author":{"gitId":"seksek13"},"content":"    void setRecord(Record target, Record editedRecord);","lastModifiedDate":"2022-03-10"},{"lineNumber":306,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":307,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":308,"author":{"gitId":"seksek13"},"content":"     * Returns an unmodifiable view of the filtered record list","lastModifiedDate":"2022-03-10"},{"lineNumber":309,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":310,"author":{"gitId":"seksek13"},"content":"    ObservableList\u003cRecord\u003e getFilteredRecordList();","lastModifiedDate":"2022-03-10"},{"lineNumber":311,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":312,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":313,"author":{"gitId":"seksek13"},"content":"     * Updates the filter of the filtered record list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":314,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":315,"author":{"gitId":"seksek13"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":316,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":317,"author":{"gitId":"seksek13"},"content":"    void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yunbinmo":57,"seksek13":46,"jessicajacelyn":54,"-":81,"zzkzzzz":80}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.AppointmentHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.ExpiredRecord;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":" * Represents the in-memory model of the Mr. Agent data.","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    private final InsuranceBook insuranceBook;","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"    private final AppointmentBook appointmentBook;","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"    private final AppointmentHistoryBook appointmentHistoryBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"    private final ExpiredRecordBook expiredRecordBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"    private final RecordBook recordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    private final FilteredList\u003cInsurance\u003e filteredInsurances;","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointmentHistory;","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"    private final FilteredList\u003cRecord\u003e filteredRecords;","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    private final FilteredList\u003cRecord\u003e filteredExpiredRecord;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"     * Initializes a ModelManager with the given storage book and userPrefs.","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyInsuranceBook insuranceBook,","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"                        ReadOnlyAppointmentBook appointmentBook, ReadOnlyRecordBook recordBook,","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        requireAllNonNull(addressBook, insuranceBook, userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"                + \"and insurance book\" + insuranceBook + \"and record book\" + recordBook","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBook \u003d new InsuranceBook(insuranceBook);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentBook \u003d new AppointmentBook(appointmentBook);","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentHistoryBook \u003d new AppointmentHistoryBook(appointmentBook);","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        this.recordBook \u003d new RecordBook(recordBook);","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        this.expiredRecordBook \u003d new ExpiredRecordBook(recordBook);","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredInsurances \u003d new FilteredList\u003c\u003e(this.insuranceBook.getInsuranceList());","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"        this.filteredAppointments \u003d new FilteredList\u003c\u003e(this.appointmentBook.getAppointmentList())","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"                        .filtered(a -\u003e a.getLocalDateTime().isAfter(LocalDateTime.now()));","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredAppointmentHistory \u003d new FilteredList\u003c\u003e(this.appointmentHistoryBook.getAppointmentHistoryList());","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"        this.filteredRecords \u003d new FilteredList\u003c\u003e(this.recordBook.getRecordList())","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"                .filtered(r -\u003e r.getEndLocalDate().isAfter(LocalDate.now()));","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredExpiredRecord \u003d new FilteredList\u003c\u003e(this.expiredRecordBook.getExpiredRecordList());","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBook \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentBook \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentHistoryBook \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        this.recordBook \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"        this.expiredRecordBook \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredInsurances \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredAppointments \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredAppointmentHistory \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredRecords \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredExpiredRecord \u003d null;","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"     * Initializes a ModelManager with the given insuranceBook and userPrefs.","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"    public ModelManager(ReadOnlyInsuranceBook insuranceBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"        requireAllNonNull(insuranceBook, userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        this.addressBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBook \u003d new InsuranceBook(insuranceBook);","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentHistoryBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"        this.recordBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"        this.expiredRecordBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredPersons \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredInsurances \u003d new FilteredList\u003c\u003e(this.insuranceBook.getInsuranceList());","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredAppointments \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredAppointmentHistory \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredRecords \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredExpiredRecord \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"     * Initializes a ModelManager with the given insuranceBook and userPrefs.","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"    public ModelManager(ReadOnlyRecordBook recordBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"        requireAllNonNull(recordBook, userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"        this.addressBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentHistoryBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"        this.recordBook \u003d new RecordBook(recordBook);","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"        this.expiredRecordBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredPersons \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredInsurances \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredAppointments \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredAppointmentHistory \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"seksek13"},"content":"        this.filteredRecords \u003d new FilteredList\u003c\u003e(this.recordBook.getRecordList());","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredExpiredRecord \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"     * Initializes a ModelManager with the given insuranceBook and userPrefs.","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"    public ModelManager(ReadOnlyAppointmentBook appointmentBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"        requireAllNonNull(appointmentBook, userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"        this.addressBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentBook \u003d new AppointmentBook(appointmentBook);","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentHistoryBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"        this.recordBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"        this.expiredRecordBook \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredPersons \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredInsurances \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredAppointments \u003d new FilteredList\u003c\u003e(this.appointmentBook.getAppointmentList());","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredAppointmentHistory \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredRecords \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredExpiredRecord \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"seksek13"},"content":"        this(new AddressBook(), new InsuranceBook(), new AppointmentBook(), new RecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"zzkzzzz"},"content":"        return this.userPrefs;","lastModifiedDate":"2022-02-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-02-28"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-02-28"},{"lineNumber":171,"author":{"gitId":"zzkzzzz"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-02-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"zzkzzzz"},"content":"        return this.userPrefs.getGuiSettings();","lastModifiedDate":"2022-02-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"zzkzzzz"},"content":"        this.userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2022-02-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":187,"author":{"gitId":"zzkzzzz"},"content":"        return this.userPrefs.getAddressBookFilePath();","lastModifiedDate":"2022-02-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"zzkzzzz"},"content":"        this.userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2022-02-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":199,"author":{"gitId":"zzkzzzz"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-02-28"},{"lineNumber":200,"author":{"gitId":"zzkzzzz"},"content":"        return this.addressBook;","lastModifiedDate":"2022-02-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":204,"author":{"gitId":"zzkzzzz"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2022-02-28"},{"lineNumber":205,"author":{"gitId":"zzkzzzz"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2022-02-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":211,"author":{"gitId":"zzkzzzz"},"content":"        return this.addressBook.hasPerson(person);","lastModifiedDate":"2022-02-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":216,"author":{"gitId":"zzkzzzz"},"content":"        if (this.recordBook !\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"zzkzzzz"},"content":"            List\u003cRecord\u003e records \u003d this.getRecordBook().getRecordList();","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"zzkzzzz"},"content":"            List\u003cRecord\u003e toBeDeleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"zzkzzzz"},"content":"            for (Record record : records) {","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"zzkzzzz"},"content":"                if (target.getName().toString().equals(record.getClientID().toString())) {","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"zzkzzzz"},"content":"                    toBeDeleted.add(record);","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"zzkzzzz"},"content":"                }","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"zzkzzzz"},"content":"            for (Record record : toBeDeleted) {","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"zzkzzzz"},"content":"                this.deleteRecord(record);","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"zzkzzzz"},"content":"        this.addressBook.removePerson(target);","lastModifiedDate":"2022-02-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":236,"author":{"gitId":"zzkzzzz"},"content":"        this.addressBook.addPerson(person);","lastModifiedDate":"2022-02-28"},{"lineNumber":237,"author":{"gitId":"zzkzzzz"},"content":"        this.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-02-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":244,"author":{"gitId":"zzkzzzz"},"content":"        this.addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2022-02-28"},{"lineNumber":245,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":246,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":247,"author":{"gitId":"zzkzzzz"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InsuranceBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":248,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":249,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":250,"author":{"gitId":"zzkzzzz"},"content":"    public ReadOnlyInsuranceBook getInsuranceBook() {","lastModifiedDate":"2022-02-28"},{"lineNumber":251,"author":{"gitId":"zzkzzzz"},"content":"        return this.insuranceBook;","lastModifiedDate":"2022-02-28"},{"lineNumber":252,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":253,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":254,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":255,"author":{"gitId":"zzkzzzz"},"content":"    public void setInsuranceBook(ReadOnlyInsuranceBook insuranceBook) {","lastModifiedDate":"2022-02-28"},{"lineNumber":256,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBook.resetData(insuranceBook);","lastModifiedDate":"2022-02-28"},{"lineNumber":257,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":258,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":259,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":260,"author":{"gitId":"zzkzzzz"},"content":"    public boolean hasInsurance(Insurance insurance) {","lastModifiedDate":"2022-02-28"},{"lineNumber":261,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(insurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":262,"author":{"gitId":"zzkzzzz"},"content":"        return this.insuranceBook.hasInsurance(insurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":263,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":264,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":265,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":266,"author":{"gitId":"zzkzzzz"},"content":"    public void deleteInsurance(Insurance target) {","lastModifiedDate":"2022-02-28"},{"lineNumber":267,"author":{"gitId":"zzkzzzz"},"content":"        if (this.recordBook !\u003d null) {","lastModifiedDate":"2022-04-02"},{"lineNumber":268,"author":{"gitId":"zzkzzzz"},"content":"            List\u003cRecord\u003e records \u003d this.getRecordBook().getRecordList();","lastModifiedDate":"2022-04-02"},{"lineNumber":269,"author":{"gitId":"zzkzzzz"},"content":"            List\u003cRecord\u003e toBeDeleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-02"},{"lineNumber":270,"author":{"gitId":"zzkzzzz"},"content":"            for (Record record : records) {","lastModifiedDate":"2022-04-02"},{"lineNumber":271,"author":{"gitId":"zzkzzzz"},"content":"                if (target.getTitle().toString().equals(record.getInsuranceID().toString())) {","lastModifiedDate":"2022-04-02"},{"lineNumber":272,"author":{"gitId":"zzkzzzz"},"content":"                    toBeDeleted.add(record);","lastModifiedDate":"2022-04-02"},{"lineNumber":273,"author":{"gitId":"zzkzzzz"},"content":"                }","lastModifiedDate":"2022-04-02"},{"lineNumber":274,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":275,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":276,"author":{"gitId":"zzkzzzz"},"content":"            for (Record record : toBeDeleted) {","lastModifiedDate":"2022-04-02"},{"lineNumber":277,"author":{"gitId":"zzkzzzz"},"content":"                this.deleteRecord(record);","lastModifiedDate":"2022-04-02"},{"lineNumber":278,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":279,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":280,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":281,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBook.removeInsurance(target);","lastModifiedDate":"2022-02-28"},{"lineNumber":282,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":283,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":284,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":285,"author":{"gitId":"zzkzzzz"},"content":"    public void addInsurance(Insurance insurance) {","lastModifiedDate":"2022-02-28"},{"lineNumber":286,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBook.addInsurance(insurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":287,"author":{"gitId":"zzkzzzz"},"content":"        this.updateFilteredInsuranceList(PREDICATE_SHOW_ALL_INSURANCES);","lastModifiedDate":"2022-02-28"},{"lineNumber":288,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":289,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":290,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":291,"author":{"gitId":"zzkzzzz"},"content":"    public void setInsurance(Insurance target, Insurance editedInsurance) {","lastModifiedDate":"2022-02-28"},{"lineNumber":292,"author":{"gitId":"zzkzzzz"},"content":"        requireAllNonNull(target, editedInsurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":293,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":294,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBook.setInsurance(target, editedInsurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":297,"author":{"gitId":"yunbinmo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":298,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":299,"author":{"gitId":"yunbinmo"},"content":"    public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2022-03-06"},{"lineNumber":300,"author":{"gitId":"yunbinmo"},"content":"        return this.appointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":301,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":302,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":303,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":304,"author":{"gitId":"zzkzzzz"},"content":"    public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":305,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentBook.resetData(appointmentBook);","lastModifiedDate":"2022-03-20"},{"lineNumber":306,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":307,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":308,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":309,"author":{"gitId":"zzkzzzz"},"content":"    public void sortAppointmentBook(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":310,"author":{"gitId":"zzkzzzz"},"content":"        this.appointmentBook.sortAppointment(comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":311,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":312,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":313,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":314,"author":{"gitId":"yunbinmo"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-06"},{"lineNumber":315,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":316,"author":{"gitId":"yunbinmo"},"content":"        return this.appointmentBook.hasAppointment(appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":317,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":318,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":319,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":320,"author":{"gitId":"yunbinmo"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-02"},{"lineNumber":321,"author":{"gitId":"yunbinmo"},"content":"        this.appointmentBook.addAppointment(appointment);","lastModifiedDate":"2022-03-02"},{"lineNumber":322,"author":{"gitId":"yunbinmo"},"content":"        Predicate\u003cAppointment\u003e predicate \u003d a -\u003e a.getLocalDateTime().isAfter(LocalDateTime.now());","lastModifiedDate":"2022-04-02"},{"lineNumber":323,"author":{"gitId":"yunbinmo"},"content":"        this.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2022-04-02"},{"lineNumber":324,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":325,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":326,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":327,"author":{"gitId":"yunbinmo"},"content":"    public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-06"},{"lineNumber":328,"author":{"gitId":"yunbinmo"},"content":"        this.appointmentBook.removeAppointment(appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":329,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":330,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":331,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":332,"author":{"gitId":"yunbinmo"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2022-03-06"},{"lineNumber":333,"author":{"gitId":"yunbinmo"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":334,"author":{"gitId":"yunbinmo"},"content":"        this.appointmentBook.setAppointment(target, editedAppointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":335,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":336,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":337,"author":{"gitId":"seksek13"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RecordBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":338,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":339,"author":{"gitId":"seksek13"},"content":"    public ReadOnlyRecordBook getRecordBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":340,"author":{"gitId":"seksek13"},"content":"        return this.recordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":341,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":342,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":343,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":344,"author":{"gitId":"seksek13"},"content":"    public void setRecordBook(ReadOnlyRecordBook recordBook) {","lastModifiedDate":"2022-03-11"},{"lineNumber":345,"author":{"gitId":"seksek13"},"content":"        this.recordBook.resetData(recordBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":346,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":347,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":348,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":349,"author":{"gitId":"seksek13"},"content":"    public boolean hasRecord(Record record) {","lastModifiedDate":"2022-03-11"},{"lineNumber":350,"author":{"gitId":"seksek13"},"content":"        requireNonNull(record);","lastModifiedDate":"2022-03-11"},{"lineNumber":351,"author":{"gitId":"seksek13"},"content":"        return this.recordBook.hasRecord(record);","lastModifiedDate":"2022-03-11"},{"lineNumber":352,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":353,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":354,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":355,"author":{"gitId":"seksek13"},"content":"    public void addRecord(Record record) {","lastModifiedDate":"2022-03-11"},{"lineNumber":356,"author":{"gitId":"seksek13"},"content":"        this.recordBook.addRecord(record);","lastModifiedDate":"2022-03-11"},{"lineNumber":357,"author":{"gitId":"yunbinmo"},"content":"        Predicate\u003cRecord\u003e predicate \u003d r -\u003e r.getEndLocalDate().isAfter(LocalDate.now());","lastModifiedDate":"2022-04-02"},{"lineNumber":358,"author":{"gitId":"yunbinmo"},"content":"        this.updateFilteredRecordList(predicate);","lastModifiedDate":"2022-04-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":361,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":362,"author":{"gitId":"seksek13"},"content":"    public void deleteRecord(Record record) {","lastModifiedDate":"2022-03-11"},{"lineNumber":363,"author":{"gitId":"seksek13"},"content":"        this.recordBook.removeRecord(record);","lastModifiedDate":"2022-03-11"},{"lineNumber":364,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":365,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":366,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":367,"author":{"gitId":"seksek13"},"content":"    public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2022-03-11"},{"lineNumber":368,"author":{"gitId":"seksek13"},"content":"        requireAllNonNull(target, editedRecord);","lastModifiedDate":"2022-03-11"},{"lineNumber":369,"author":{"gitId":"seksek13"},"content":"        this.recordBook.setRecord(target, editedRecord);","lastModifiedDate":"2022-03-11"},{"lineNumber":370,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":371,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":372,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":373,"author":{"gitId":"zzkzzzz"},"content":"    public void sortRecordBook(Comparator\u003cRecord\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":374,"author":{"gitId":"zzkzzzz"},"content":"        this.recordBook.sortRecord(comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":375,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":376,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":377,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":378,"author":{"gitId":"yunbinmo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":379,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":380,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":381,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2022-03-30"},{"lineNumber":382,"author":{"gitId":"jessicajacelyn"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-13"},{"lineNumber":383,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":384,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":385,"author":{"gitId":"yunbinmo"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":386,"author":{"gitId":"yunbinmo"},"content":"        return this.filteredAppointments;","lastModifiedDate":"2022-03-06"},{"lineNumber":387,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":388,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":389,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":390,"author":{"gitId":"yunbinmo"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-03-06"},{"lineNumber":391,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":392,"author":{"gitId":"yunbinmo"},"content":"        this.filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":393,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":394,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":395,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":399,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":400,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":401,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":404,"author":{"gitId":"zzkzzzz"},"content":"        return this.filteredPersons;","lastModifiedDate":"2022-02-28"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":410,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredPersons.setPredicate(predicate);","lastModifiedDate":"2022-02-28"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-15"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2022-03-15"},{"lineNumber":427,"author":{"gitId":"jessicajacelyn"},"content":"        return this.addressBook.equals(other.addressBook)","lastModifiedDate":"2022-03-15"},{"lineNumber":428,"author":{"gitId":"jessicajacelyn"},"content":"                \u0026\u0026 this.userPrefs.equals(other.userPrefs)","lastModifiedDate":"2022-03-15"},{"lineNumber":429,"author":{"gitId":"jessicajacelyn"},"content":"                \u0026\u0026 this.filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2022-03-15"},{"lineNumber":430,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":431,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":432,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":433,"author":{"gitId":"zzkzzzz"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Insurance List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":434,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":435,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":436,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the list of {@code Insurance} backed by the internal list of","lastModifiedDate":"2022-03-30"},{"lineNumber":437,"author":{"gitId":"zzkzzzz"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-02-28"},{"lineNumber":438,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":439,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":440,"author":{"gitId":"zzkzzzz"},"content":"    public ObservableList\u003cInsurance\u003e getFilteredInsuranceList() {","lastModifiedDate":"2022-02-28"},{"lineNumber":441,"author":{"gitId":"zzkzzzz"},"content":"        return this.filteredInsurances;","lastModifiedDate":"2022-02-28"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":444,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":445,"author":{"gitId":"zzkzzzz"},"content":"    public void updateFilteredInsuranceList(Predicate\u003cInsurance\u003e predicate) {","lastModifiedDate":"2022-02-28"},{"lineNumber":446,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-02-28"},{"lineNumber":447,"author":{"gitId":"zzkzzzz"},"content":"        this.filteredInsurances.setPredicate(predicate);","lastModifiedDate":"2022-02-28"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":450,"author":{"gitId":"jessicajacelyn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment History List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":451,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":452,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":453,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the list of {@code AppointmentHistory} backed by the internal list of","lastModifiedDate":"2022-03-15"},{"lineNumber":454,"author":{"gitId":"jessicajacelyn"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-15"},{"lineNumber":455,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":456,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":457,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":458,"author":{"gitId":"jessicajacelyn"},"content":"    public ReadOnlyAppointmentHistoryBook getAppointmentHistoryBook() {","lastModifiedDate":"2022-03-15"},{"lineNumber":459,"author":{"gitId":"jessicajacelyn"},"content":"        return this.appointmentHistoryBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":460,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":461,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":462,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":463,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean hasHistory(AppointmentHistory history) {","lastModifiedDate":"2022-03-15"},{"lineNumber":464,"author":{"gitId":"jessicajacelyn"},"content":"        return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":465,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":466,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":467,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":468,"author":{"gitId":"jessicajacelyn"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentHistoryList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":469,"author":{"gitId":"jessicajacelyn"},"content":"        return this.filteredAppointmentHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":470,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":471,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":472,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":473,"author":{"gitId":"yunbinmo"},"content":"    public void updateFilteredAppointmentHistoryList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-04-02"},{"lineNumber":474,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":475,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":476,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":478,"author":{"gitId":"seksek13"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Record List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":479,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":480,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":481,"author":{"gitId":"seksek13"},"content":"     * Returns an unmodifiable view of the list of {@code Record} backed by the internal list of","lastModifiedDate":"2022-03-11"},{"lineNumber":482,"author":{"gitId":"seksek13"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-11"},{"lineNumber":483,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":484,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":485,"author":{"gitId":"seksek13"},"content":"    public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":486,"author":{"gitId":"seksek13"},"content":"        return this.filteredRecords;","lastModifiedDate":"2022-03-11"},{"lineNumber":487,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":488,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":489,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":490,"author":{"gitId":"seksek13"},"content":"    public void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":491,"author":{"gitId":"seksek13"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":492,"author":{"gitId":"seksek13"},"content":"        this.filteredRecords.setPredicate(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":493,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":494,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":495,"author":{"gitId":"jessicajacelyn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Expired Record List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":496,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":497,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":498,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the list of {@code ExpiredRecord} backed by the internal list of","lastModifiedDate":"2022-03-15"},{"lineNumber":499,"author":{"gitId":"jessicajacelyn"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-15"},{"lineNumber":500,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":501,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":502,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":503,"author":{"gitId":"jessicajacelyn"},"content":"    public ReadOnlyExpiredRecordBook getExpiredRecordBook() {","lastModifiedDate":"2022-03-15"},{"lineNumber":504,"author":{"gitId":"jessicajacelyn"},"content":"        return this.expiredRecordBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":505,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":506,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":507,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":508,"author":{"gitId":"jessicajacelyn"},"content":"    public ObservableList\u003cRecord\u003e getFilteredExpiredRecordList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":509,"author":{"gitId":"jessicajacelyn"},"content":"        return this.filteredExpiredRecord;","lastModifiedDate":"2022-03-15"},{"lineNumber":510,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":511,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":512,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":513,"author":{"gitId":"zzkzzzz"},"content":"    public void updateFilteredExpiredRecordList(Predicate\u003cExpiredRecord\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":514,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":515,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":516,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":517,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunbinmo":64,"seksek13":43,"jessicajacelyn":74,"-":131,"zzkzzzz":205}},{"path":"src/main/java/seedu/address/model/ReadOnlyAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":" * Unmodifiable view of an appointment book","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"public interface ReadOnlyAppointmentBook {","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the appointments list.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"yunbinmo":14,"jessicajacelyn":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyAppointmentHistoryBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":" * Unmodifiable view of appointment history book","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"public interface ReadOnlyAppointmentHistoryBook {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the appointment history list.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"     * This list will not contain any duplicate appointment history.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentHistoryList();","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"     * Updates the appointment history list.","lastModifiedDate":"2022-04-02"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"     * @param model The model object.","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    void updateAppointmentHistoryList(Model model);","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yunbinmo":6,"jessicajacelyn":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyExpiredRecordBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":" * Unmodifiable view of expired record book","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"public interface ReadOnlyExpiredRecordBook {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the expired record list.","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"     * This list will not contain any duplicate expired records.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    ObservableList\u003cRecord\u003e getExpiredRecordList();","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"     * Updates the record history list.","lastModifiedDate":"2022-04-02"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"     * @param model The model object.","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    void updateExpiredRecordList(Model model);","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"yunbinmo":6,"jessicajacelyn":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyInsuranceBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.model;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"public interface ReadOnlyInsuranceBook {","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the insurances list.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"     * This list will not contain any duplicate insurances.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    ObservableList\u003cInsurance\u003e getInsuranceList();","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"jessicajacelyn":2,"zzkzzzz":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyRecordBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"public interface ReadOnlyRecordBook {","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an unmodifiable view of the records list.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"     * This list will not contain any duplicate records.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"    ObservableList\u003cRecord\u003e getRecordList();","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":11,"jessicajacelyn":2}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    Path getInsuranceBookFilePath();","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"    Path getRecordBookFilePath();","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"yunbinmo":2,"seksek13":1,"-":16,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/model/RecordBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.UniqueRecordList;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"public class RecordBook implements ReadOnlyRecordBook {","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"    private final UniqueRecordList records;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"        this.records \u003d new UniqueRecordList();","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"    public RecordBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"     * Creates an RecordBook using the Records in the {@code toBeCopied}","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    public RecordBook(ReadOnlyRecordBook toBeCopied) {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"        this();","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"        this.resetData(toBeCopied);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"     * Replaces the contents of the records list with {@code record}.","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"     * {@code record} must not contain duplicate records.","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"    public void setRecords(List\u003cRecord\u003e records) {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"        this.records.setRecords(records);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"     * Resets the existing data of this {@code RecordBook} with {@code newData}.","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"    public void resetData(ReadOnlyRecordBook newData) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"        this.setRecords(newData.getRecordList());","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"    //// record-level operations","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns true if a record with the same identity as {@code record} exists in the record book.","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"    public boolean hasRecord(Record record) {","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"        requireNonNull(record);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"        return this.records.contains(record);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"     * Adds a record to the record book.","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"     * The record must not already exist in the record book.","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"    public void addRecord(Record r) {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"        this.records.add(r);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"     * Replaces the given record {@code target} in the list with {@code editedRecord}.","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"     * {@code target} must exist in the record book.","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"     * The record identity of {@code editedInsurance} must not be the same as another","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"     * existing insurance in the insurance book.","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"    public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"        requireNonNull(editedRecord);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"        this.records.setRecord(target, editedRecord);","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"     * Removes {@code key} from this {@code RecordBook}.","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"     * {@code key} must exist in the record book.","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"seksek13"},"content":"    public void removeRecord(Record key) {","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"seksek13"},"content":"        this.records.remove(key);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"     * Sorts the record list.","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"     * @param comparator Criteria for sorting.","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"    public void sortRecord(Comparator\u003cRecord\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        this.records.sort(comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"seksek13"},"content":"    //// util methods","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"seksek13"},"content":"    public String toString() {","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"seksek13"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"seksek13"},"content":"        for (Iterator\u003cRecord\u003e it \u003d records.iterator(); it.hasNext(); ) {","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"seksek13"},"content":"            Record record \u003d it.next();","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"seksek13"},"content":"            builder.append(record.toString());","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"seksek13"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"seksek13"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"seksek13"},"content":"    public ObservableList\u003cRecord\u003e getRecordList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"seksek13"},"content":"        return this.records.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"seksek13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"seksek13"},"content":"                || (other instanceof RecordBook // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 this.records.equals(((RecordBook) other).records));","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"seksek13"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"seksek13"},"content":"        return this.records.hashCode();","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":115,"jessicajacelyn":1,"zzkzzzz":9}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    private Path appointmentBookFilePath \u003d Paths.get(\"data\", \"appointmentbook.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    private Path insuranceBookFilePath \u003d Paths.get(\"data\", \"insurancebook.json\");","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"    private Path recordBookFilePath \u003d Paths.get(\"data\", \"recordbook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public UserPrefs() {","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        setAppointmentBookFilePath(newUserPrefs.getAppointmentBookFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        setInsuranceBookFilePath(newUserPrefs.getInsuranceBookFilePath());","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"        setRecordBookFilePath(newUserPrefs.getRecordBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"        return appointmentBookFilePath;","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"    public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(appointmentBookFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"        this.appointmentBookFilePath \u003d appointmentBookFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"    public Path getRecordBookFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"        return recordBookFilePath;","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"    public void setRecordBookFilePath(Path recordBookFilePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"        requireNonNull(recordBookFilePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"seksek13"},"content":"        this.recordBookFilePath \u003d recordBookFilePath;","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"    public Path getInsuranceBookFilePath() {","lastModifiedDate":"2022-03-05"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        return insuranceBookFilePath;","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"    public void setInsuranceBookFilePath(Path insuranceBookFilePath) {","lastModifiedDate":"2022-03-05"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(insuranceBookFilePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBookFilePath \u003d insuranceBookFilePath;","lastModifiedDate":"2022-03-05"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, insuranceBookFilePath,","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"                appointmentBookFilePath, recordBookFilePath);","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"        sb.append(\"\\nLocal address file location : \" + addressBookFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"        sb.append(\"\\nLocal appointment file location : \" + appointmentBookFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"        sb.append(\"\\nLocal insuranceBook data file location : \" + insuranceBookFilePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"seksek13"},"content":"        sb.append(\"\\nLocal recordBook data file location : \" + recordBookFilePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunbinmo":11,"seksek13":10,"-":83,"zzkzzzz":24}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":" * Represents an Appointment in Mr. Agent.","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"public class Appointment {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"    // Data fields","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    private final Description description;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public Appointment(Description description, DateTime dateTime) {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        return this.description;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"        return this.dateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"    public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        return this.dateTime.getLocalDateTime();","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"     * Returns true if both appointments have the same date time.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"        return otherAppointment !\u003d null \u0026\u0026 otherAppointment.getDateTime().equals(this.getDateTime());","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"     * Returns true if both appointments have the same identity and data fields.","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"     * This defines a stronger notion of equality between two appointments.","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"        return otherAppointment.getDescription().equals(this.getDescription())","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 otherAppointment.getDateTime().equals(this.getDateTime());","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"        return Objects.hash(this.getDescription(), this.getDateTime());","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"        builder.append(\"Appointment: \")","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"                .append(this.getDescription())","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"                .append(\" at \")","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"                .append(this.getDateTime().toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"yunbinmo":79,"jessicajacelyn":1}},{"path":"src/main/java/seedu/address/model/appointment/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":" * Represents an Appointment\u0027s associated date and time in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":" * Guarantees: immutable; is valid as declared in {@link #validateDateTime(String)}","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"public class DateTime {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"            \"Date and time should not be a past time\"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"                    + \" and should be in this format: dd-MM-yyyy HH:mm, e.g. 02-03-2022 18:00\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"dd-MM-uuuu HH:mm\";","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"            DateTimeFormatter.ofPattern(DATE_TIME_FORMAT).withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    public final LocalDateTime dateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"     * @param input A valid date time string.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    public DateTime(String input) {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(input);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        LocalDateTime result \u003d validateDateTime(input);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"            checkArgument(false, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"        this.dateTime \u003d result;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"     * Alternative constructor using LocalDateTime object as input.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"     * @param dateTime A valid LocalDateTime object.","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"    public DateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"    public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        return this.dateTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"     * Returns a valid LocalDateTime object if a given string is valid date and time.","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"    public static LocalDateTime validateDateTime(String test) {","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"            return dateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"            return null;","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"        return dateTime.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"                || (other instanceof DateTime // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 dateTime.equals(((DateTime) other).dateTime)); // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"        return dateTime.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean isBefore(LocalDateTime now) {","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"        return this.dateTime.isBefore(now);","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":81,"jessicajacelyn":4}},{"path":"src/main/java/seedu/address/model/appointment/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" * Represents an Appointment\u0027s associated description in the appointment book.","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"public class Description {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"            \"Description can take any values, and it should not be blank or start with a whitespace\";","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    /*","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    public final String description;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"     * @param description A valid client date time string.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    public Description(String description) {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"     * Returns a valid LocalDateTime object if a given string is valid date and time.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"        return description.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"        return description.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":54,"seksek13":1,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/model/appointment/DescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":" * Tests that an {@code Appointment}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"public class DescriptionContainsKeywordsPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    public DescriptionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"                        appointment.getDescription().toString(), keyword));","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"                || (other instanceof DescriptionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 keywords.equals(((DescriptionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"yunbinmo":31}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}. As such,","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":" * adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality to ensure","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":" * that the appointment being added or updated is unique in terms of identity in the UniqueAppointmentList.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":" * However, the removal of an appointment uses Appointment#equals(Object) to ensure that the insurance","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":" *","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"            FXCollections.unmodifiableObservableList(this.internalList);","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"        return this.internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        if (this.contains(toAdd)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        this.internalList.add(toAdd);","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"     * Replaces the appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"     * The appointment identity of {@code editedAppointment} must not be","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"     * the same as another existing insurance in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"        int index \u003d this.internalList.indexOf(target);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"        if (!target.isSameAppointment(editedAppointment) \u0026\u0026 this.contains(editedAppointment)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"        this.internalList.set(index, editedAppointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"     * Removes the equivalent appointment from the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"     * The insurance must exist in the list.","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"        if (!this.internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"yunbinmo"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"jessicajacelyn"},"content":"     * Sorts the appointment list.","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"    public void sort(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"yunbinmo"},"content":"        FXCollections.sort(this.internalList, comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"yunbinmo"},"content":"    public void setAppointments(UniqueAppointmentList replacement) {","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"        this.internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"yunbinmo"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"yunbinmo"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"yunbinmo"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"yunbinmo"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"yunbinmo"},"content":"        if (!this.appointmentsAreUnique(appointments)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"yunbinmo"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"yunbinmo"},"content":"        this.internalList.setAll(appointments);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"yunbinmo"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"yunbinmo"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"yunbinmo"},"content":"        // return this.internalUnmodifiableList.filtered(a -\u003e a.getLocalDateTime().isAfter(LocalDateTime.now()));","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"yunbinmo"},"content":"        return this.internalUnmodifiableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"yunbinmo"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"yunbinmo"},"content":"        return this.internalList.iterator();","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"yunbinmo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"yunbinmo"},"content":"                || (other instanceof seedu.address.model.appointment.UniqueAppointmentList // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 this.internalList","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"yunbinmo"},"content":"                .equals(((seedu.address.model.appointment.UniqueAppointmentList) other).internalList));","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"yunbinmo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"yunbinmo"},"content":"        return this.internalList.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"yunbinmo"},"content":"     * Returns true if {@code appointments} contains only unique appointments.","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"yunbinmo"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"yunbinmo"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"yunbinmo"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"yunbinmo"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"yunbinmo"},"content":"                    return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"yunbinmo"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"yunbinmo"},"content":"        return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":146,"jessicajacelyn":4}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"public class AppointmentNotFoundException extends RuntimeException{","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":7}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":" * Signals that the operation will result in duplicate Appointments","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":" * (Appointments are considered duplicates if they have the same","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":" * identity).","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"        super(\"Operation would result in duplicate Appointment\");","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":12}},{"path":"src/main/java/seedu/address/model/history/AppointmentHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.model.history;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"public class AppointmentHistory {","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"jessicajacelyn":4}},{"path":"src/main/java/seedu/address/model/history/ExpiredRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.model.history;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"public class ExpiredRecord {","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"jessicajacelyn":4}},{"path":"src/main/java/seedu/address/model/history/UniqueAppointmentHistoryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.model.history;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":" * A list of appointment history that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * History is considered unique by comparing using {@code History#isSameHistory(History)}. As such,","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":" * adding and updating of history uses History#isSameHistory(History) for equality so as to ensure","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" * that the history being added or updated is unique in terms of identity in the UniqueHistoryList.","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":" * However, the removal of  history uses history#equals(Object) so as to ensure that the insurance","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" *","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"public class UniqueAppointmentHistoryList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"            FXCollections.unmodifiableObservableList(this.internalList);","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"        return this.internalUnmodifiableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        return this.internalList.iterator();","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"                || (other instanceof UniqueAppointmentHistoryList // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"                \u0026\u0026 this.internalList","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"                .equals(((UniqueAppointmentHistoryList) other).internalList));","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        return this.internalList.hashCode();","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean add(Appointment a) {","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"        return this.internalList.add(a);","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"jessicajacelyn":54,"zzkzzzz":2}},{"path":"src/main/java/seedu/address/model/history/UniqueExpiredRecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.model.history;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.exceptions.DuplicateRecordException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.exceptions.RecordNotFoundException;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":" * A list of expired records that enforce uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":" * A record is considered unique by comparing using {@code Record#isSameRecord(Record)}. As such, adding","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":" * and updating of records uses Record#isSameRecord(Record) for equality so as to ensure that the record","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" * being added or updated is unique in terms of identity in the UniqueRecordList. However, the removal of a insurance","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":" * uses Record#equals(Object) so as to ensure that the insurance with exactly the same fields will be removed.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":" *","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"public class UniqueExpiredRecordList implements Iterable\u003cRecord\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    private final ObservableList\u003cRecord\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"    private final ObservableList\u003cRecord\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"            FXCollections.unmodifiableObservableList(this.internalList);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns true if the list contains an equivalent record as the given argument.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean contains(Record toCheck) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        return this.internalList.stream().anyMatch(toCheck::isSameRecord);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"     * Adds a record to the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"     * The record must not already exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    public void add(Record toAdd) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"        if (this.contains(toAdd)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"        this.internalList.add(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"     * Replaces the record {@code target} in the list with {@code editedRecord}.","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"     * The record identity of {@code editedRecord} must not be the same as another existing record in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"        requireAllNonNull(target, editedRecord);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"        int index \u003d this.internalList.indexOf(target);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"            throw new RecordNotFoundException();","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"        if (!target.isSameRecord(editedRecord) \u0026\u0026 this.contains(editedRecord)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"jessicajacelyn"},"content":"        this.internalList.set(index, editedRecord);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"     * Removes the equivalent record from the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"jessicajacelyn"},"content":"     * The record must exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"jessicajacelyn"},"content":"    public void remove(Record toRemove) {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"jessicajacelyn"},"content":"        if (!this.internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"jessicajacelyn"},"content":"            throw new RecordNotFoundException();","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"    public void setRecords(UniqueExpiredRecordList replacement) {","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"jessicajacelyn"},"content":"        this.internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"jessicajacelyn"},"content":"     * Replaces the contents of this list with {@code records}.","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"jessicajacelyn"},"content":"     * {@code records} must not contain duplicate records.","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"jessicajacelyn"},"content":"    public void setRecords(List\u003cRecord\u003e records) {","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"jessicajacelyn"},"content":"        requireAllNonNull(records);","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"jessicajacelyn"},"content":"        if (!this.recordsAreUnique(records)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"jessicajacelyn"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"jessicajacelyn"},"content":"        this.internalList.setAll(records);","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"jessicajacelyn"},"content":"    public ObservableList\u003cRecord\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"jessicajacelyn"},"content":"        return this.internalUnmodifiableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"jessicajacelyn"},"content":"    public Iterator\u003cRecord\u003e iterator() {","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"jessicajacelyn"},"content":"        return this.internalList.iterator();","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"jessicajacelyn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"jessicajacelyn"},"content":"                || (other instanceof UniqueExpiredRecordList // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"jessicajacelyn"},"content":"                \u0026\u0026 this.internalList.equals(((UniqueExpiredRecordList) other).internalList));","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"jessicajacelyn"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"jessicajacelyn"},"content":"        return this.internalList.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns true if {@code records} contains only unique records.","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"jessicajacelyn"},"content":"    private boolean recordsAreUnique(List\u003cRecord\u003e records) {","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"jessicajacelyn"},"content":"        for (int i \u003d 0; i \u003c records.size() - 1; i++) {","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"jessicajacelyn"},"content":"            for (int j \u003d i + 1; j \u003c records.size(); j++) {","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"jessicajacelyn"},"content":"                if (records.get(i).isSameRecord(records.get(j))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"jessicajacelyn"},"content":"                    return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"jessicajacelyn"},"content":"                }","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"jessicajacelyn"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"jessicajacelyn"},"content":"        return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"jessicajacelyn":137}},{"path":"src/main/java/seedu/address/model/insurance/Insurance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.model.insurance;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":" * Represents an Insurance in Mr. Agent.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"public class Insurance {","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    private final Title title;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    private final Price price;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    public Insurance(Title title, Price price) {","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public Title getTitle() {","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        return this.title;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    public Price getPrice() {","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        return this.price;","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * Returns true if both insurances have the same name.","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * This defines a weaker notion of equality between two insurances.","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    public boolean isSameInsurance(Insurance otherInsurance) {","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        if (otherInsurance \u003d\u003d this) {","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"            return true;","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        return otherInsurance !\u003d null","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 otherInsurance.getTitle().equals(this.getTitle());","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     * Returns true if both insurances have the same identity and data fields.","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     * This defines a stronger notion of equality between two insurances.","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"            return true;","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        if (!(other instanceof Insurance)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"            return false;","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        Insurance otherInsurance \u003d (Insurance) other;","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        return otherInsurance.getTitle().equals(this.getTitle())","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 otherInsurance.getPrice().equals(this.getPrice());","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        return Objects.hash(this.title, this.price);","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        builder.append(this.getTitle())","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"                .append(\"; Price: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"                .append(this.getPrice());","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        return builder.toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":75}},{"path":"src/main/java/seedu/address/model/insurance/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.model.insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":" * Represents an Insurance\u0027s price.","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"public class Price {","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"            \"Price should only contain positive decimal number including 0\";","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(0|[1-9]\\\\d*)(\\\\.\\\\d+)?$\";","lastModifiedDate":"2022-04-02"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * @param price A valid price number.","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public Price(String price) {","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(price);","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        value \u003d price;","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * Returns true if a given string is a valid price number.","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof Price // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 value.equals(((Price) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":51}},{"path":"src/main/java/seedu/address/model/insurance/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.model.insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" * Represents an Insurance\u0027s title.","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"public class Title {","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    /*","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public final String title;","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"     * @param title A valid title.","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    public Title(String title) {","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        return this.title;","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 this.title.equals(((Title) other).title)); // state check","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        return this.title.hashCode();","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"zzkzzzz":59}},{"path":"src/main/java/seedu/address/model/insurance/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.model.insurance;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":" * Tests that a {@code Insurance}\u0027s {@code Title} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cInsurance\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean test(Insurance insurance) {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(String.valueOf(insurance.getTitle()), keyword));","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"                || (other instanceof TitleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"                \u0026\u0026 keywords.equals(((TitleContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"jessicajacelyn":31}},{"path":"src/main/java/seedu/address/model/insurance/UniqueInsuranceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.model.insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.exceptions.DuplicateInsuranceException;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.exceptions.InsuranceNotFoundException;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":" * A list of insurances that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":" * An insurance is considered unique by comparing using {@code Insurance#isSameInsurance(Insurance)}. As such, adding","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":" * and updating of insurances uses Insurance#isSameInsurance(Insurance) for equality so as to ensure that the insurance","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":" * being added or updated is unique in terms of identity in the UniqueInsuranceList. However, the removal of an","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" * insurance uses Insurance#equals(Object) so as to ensure that the insurance with exactly the same fields will be","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":" * removed.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":" *","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":" * @see Insurance#isSameInsurance(Insurance)","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"public class UniqueInsuranceList implements Iterable\u003cInsurance\u003e {","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    private final ObservableList\u003cInsurance\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    private final ObservableList\u003cInsurance\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"            FXCollections.unmodifiableObservableList(this.internalList);","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     * Returns true if the list contains an equivalent insurance as the given argument.","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    public boolean contains(Insurance toCheck) {","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        return this.internalList.stream().anyMatch(toCheck::isSameInsurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"     * Adds an insurance to the list.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     * The insurance must not already exist in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    public void add(Insurance toAdd) {","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        if (this.contains(toAdd)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            throw new DuplicateInsuranceException();","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        this.internalList.add(toAdd);","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"     * Replaces the insurance {@code target} in the list with {@code editedInsurance}.","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"     * The insurance identity of {@code editedInsurance} must not be the same as another existing insurance in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    public void setInsurance(Insurance target, Insurance editedInsurance) {","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"        requireAllNonNull(target, editedInsurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        int index \u003d this.internalList.indexOf(target);","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"            throw new InsuranceNotFoundException();","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"        if (!target.isSameInsurance(editedInsurance) \u0026\u0026 this.contains(editedInsurance)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"            throw new DuplicateInsuranceException();","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        this.internalList.set(index, editedInsurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"     * Removes the equivalent insurance from the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"     * The insurance must exist in the list.","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"    public void remove(Insurance toRemove) {","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"        if (!this.internalList.remove(toRemove)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"            throw new InsuranceNotFoundException();","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"    public void setInsurances(UniqueInsuranceList replacement) {","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        this.internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"     * Replaces the contents of this list with {@code insurances}.","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"     * {@code insurances} must not contain duplicate insurances.","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"    public void setInsurances(List\u003cInsurance\u003e insurances) {","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        requireAllNonNull(insurances);","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"        if (!this.insurancesAreUnique(insurances)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"            throw new DuplicateInsuranceException();","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"        this.internalList.setAll(insurances);","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"    public ObservableList\u003cInsurance\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"        return this.internalUnmodifiableList;","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"    public Iterator\u003cInsurance\u003e iterator() {","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"        return this.internalList.iterator();","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"                || (other instanceof UniqueInsuranceList // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 this.internalList.equals(((UniqueInsuranceList) other).internalList));","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"        return this.internalList.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"     * Returns true if {@code insurances} contains only unique insurances.","lastModifiedDate":"2022-02-28"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"    private boolean insurancesAreUnique(List\u003cInsurance\u003e insurances) {","lastModifiedDate":"2022-02-28"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"        for (int i \u003d 0; i \u003c insurances.size() - 1; i++) {","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"            for (int j \u003d i + 1; j \u003c insurances.size(); j++) {","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"                if (insurances.get(i).isSameInsurance(insurances.get(j))) {","lastModifiedDate":"2022-02-28"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"                    return false;","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"                }","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"        return true;","lastModifiedDate":"2022-02-28"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"jessicajacelyn":5,"zzkzzzz":133}},{"path":"src/main/java/seedu/address/model/insurance/exceptions/DuplicateInsuranceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.model.insurance.exceptions;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":" * Signals that the operation will result in duplicate Insurances","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":" * (Insurances are considered duplicates if they have the same","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":" * identity).","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"public class DuplicateInsuranceException extends RuntimeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    public DuplicateInsuranceException() {","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"        super(\"Operation would result in duplicate Insurance\");","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"zzkzzzz":12}},{"path":"src/main/java/seedu/address/model/insurance/exceptions/InsuranceNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.model.insurance.exceptions;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":" * Signals that the operation is unable to find the specified insurance.","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"public class InsuranceNotFoundException extends RuntimeException {","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"zzkzzzz":7}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" * Represents a Person in Mr. Agent.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    private final Set\u003cRecord\u003e records \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cRecord\u003e records) {","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        this.records.addAll(records);","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"    public Set\u003cRecord\u003e getRecords() {","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        return Collections.unmodifiableSet(records);","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 otherPerson.getRecords().equals(getRecords());","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"        Set\u003cRecord\u003e records \u003d getRecords();","lastModifiedDate":"2022-03-05"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"        if (!records.isEmpty()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"            builder.append(\"; Records: \");","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"            records.forEach(builder::append);","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jessicajacelyn":1,"-":121,"zzkzzzz":28}},{"path":"src/main/java/seedu/address/model/record/ClientID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model.record;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":" * Represents a Record\u0027s clientID.","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClientID(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"public class ClientID {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"            \"Client Index should only contain numbers, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_INDEX_CONSTRAINT \u003d \"Client Index cannot be 0!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"    public final String id;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     * Constructs a {@code ClientId}.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"     * @param clientID A valid clientID.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public ClientID(String clientID) {","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(clientID);","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        checkArgument(isValidClientID(clientID), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"        checkArgument(isNotZeroClientID(clientID), MESSAGE_INDEX_CONSTRAINT);","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        id \u003d clientID;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"     * @param clientName A valid name.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    public ClientID(String clientName, Boolean yes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(clientName);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        id \u003d clientName;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns true if a given string is a valid clientID.","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"    public static boolean isValidClientID(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns true if a clientID is more than zero","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"    public static boolean isNotZeroClientID(String test) {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        int clientID \u003d Integer.parseInt(test);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"        if (clientID \u003e 0) {","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"            return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"        } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        return id;","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"                || (other instanceof ClientID // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 id.equals(((ClientID) other).id)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"        return id.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":58,"jessicajacelyn":4,"zzkzzzz":13}},{"path":"src/main/java/seedu/address/model/record/EndDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model.record;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Represents a Record\u0027s associated date and time in the record book.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":" * Guarantees: immutable; is valid as declared in {@link #validateDateTime(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"public class EndDate {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"            \"End Date should be in this format: dd-MM-yyyy e.g. 02-03-2022\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    private static final String DATE_FORMAT \u003d \"dd-MM-uuuu\";","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"            DateTimeFormatter.ofPattern(DATE_FORMAT).withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"     * @param input A valid date time string.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    public EndDate(String input) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"        requireNonNull(input);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"        LocalDate result \u003d validateDateTime(input);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"            checkArgument(false, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"        this.date \u003d result;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"     * Alternative constructor using LocalDateTime object as input.","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"     * @param date A valid LocalDateTime object.","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"    public EndDate(LocalDate date) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        return date;","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"     * Returns a valid LocalDateTime object if a given string is valid date and time.","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"    public static LocalDate validateDateTime(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"            LocalDate date \u003d LocalDate.parse(test, DATE_FORMATTER);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"            return date;","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"            return null;","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"        return date.format(DATE_FORMATTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"        return date.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"jessicajacelyn"},"content":"        return this.date;","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":68,"yunbinmo":4,"jessicajacelyn":4,"zzkzzzz":4}},{"path":"src/main/java/seedu/address/model/record/InsuranceID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model.record;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":" * Represents a Record\u0027s insurance id.","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInsuranceID(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"public class InsuranceID {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"            \"Insurance Index should only contain numbers, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_INDEX_CONSTRAINT \u003d \"Insurance Index cannot be 0!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"    public final String id;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"     * @param insuranceID A valid price number.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceID(String insuranceID) {","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(insuranceID);","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        checkArgument(isValidInsuranceID(insuranceID), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"        checkArgument(isNotZeroInsuranceID(insuranceID), MESSAGE_INDEX_CONSTRAINT);","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        id \u003d insuranceID;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"     * @param insuranceName A valid name.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"    public InsuranceID(String insuranceName, Boolean yes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        requireNonNull(insuranceName);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"        id \u003d insuranceName;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"     * Returns true if a given string is a valid price number.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"    public static boolean isValidInsuranceID(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns true if a given insurance id is more than zero.","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"    public static boolean isNotZeroInsuranceID(String test) {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        int clientID \u003d Integer.parseInt(test);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"        if (clientID \u003e 0) {","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"            return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"        } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        return id;","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"                || (other instanceof InsuranceID // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 id.equals(((InsuranceID) other).id)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"        return id.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":69,"jessicajacelyn":2,"zzkzzzz":4}},{"path":"src/main/java/seedu/address/model/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.model.record;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":" * Represents a Record in Mr. Agent.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"public class Record {","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    //TODO","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    private static int globalId \u003d 0;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    private final int recordID;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    private final ClientID clientID;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    private final InsuranceID insuranceID;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    private final StartDate startDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"    private final EndDate endDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public Record(ClientID clientID, InsuranceID insuranceID, StartDate startDate, EndDate endDate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        this.recordID \u003d globalId++;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        this.clientID \u003d clientID;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceID \u003d insuranceID;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    public int getRecordId() {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        return this.recordID;","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"    public ClientID getClientID() {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        return this.clientID;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"    public InsuranceID getInsuranceID() {","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        return this.insuranceID;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"    public StartDate getStartDate() {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"        return this.startDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    public LocalDate getStartLocalDate() {","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        return this.startDate.getStartDate();","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"    public EndDate getEndDate() {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"        return this.endDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"    public LocalDate getEndLocalDate() {","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        return this.endDate.getEndDate();","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns true if both record have the same clientID.","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"     * This defines a weaker notion of equality between two records.","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"    public boolean isSameRecord(Record otherRecord) {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"        if (otherRecord \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"        return otherRecord !\u003d null","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 otherRecord.getClientID().equals(this.clientID)","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 otherRecord.getInsuranceID().equals(this.insuranceID)","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 otherRecord.getStartLocalDate().isBefore(this.getEndLocalDate())","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 otherRecord.getEndLocalDate().isAfter(this.getStartLocalDate());","lastModifiedDate":"2022-04-02"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"     * Returns true if both records have the same identity and data fields.","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"     * This defines a stronger notion of equality between two records.","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"seksek13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"seksek13"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"seksek13"},"content":"        if (!(other instanceof Record)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"seksek13"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"seksek13"},"content":"        Record otherRecord \u003d (Record) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"        return otherRecord.getRecordId() \u003d\u003d this.recordID","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 otherRecord.getClientID().equals(this.clientID)","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 otherRecord.getInsuranceID().equals(this.insuranceID)","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 otherRecord.getStartDate().equals(this.startDate)","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 otherRecord.getEndDate().equals(this.endDate);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"seksek13"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"seksek13"},"content":"        builder.append(\" Client \")","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"seksek13"},"content":"                .append(this.getClientID())","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"seksek13"},"content":"                .append(\" bought insurance \")","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"seksek13"},"content":"                .append(this.getInsuranceID())","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"seksek13"},"content":"                .append(\" valid from \")","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"seksek13"},"content":"                .append(this.getStartDate())","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"seksek13"},"content":"                .append(\" to \")","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"seksek13"},"content":"                .append(this.getEndDate());","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"seksek13"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"seksek13":65,"yunbinmo":2,"jessicajacelyn":2,"zzkzzzz":46}},{"path":"src/main/java/seedu/address/model/record/RecordContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model.record;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":" * Tests that a {@code Record}\u0027s {@code InsuranceID} matches any of the keywords given.","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"public class RecordContainsKeywordsPredicate implements Predicate\u003cRecord\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"    public RecordContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"    public boolean test(Record record) {","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"                        String.valueOf(record.getInsuranceID()), keyword));","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"                || (other instanceof RecordContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 keywords.equals(((RecordContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"seksek13":32}},{"path":"src/main/java/seedu/address/model/record/StartDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model.record;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * Represents a Record\u0027s associated date and time in the record book.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":" * Guarantees: immutable; is valid as declared in {@link #validateDateTime(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"public class StartDate {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"            \"Start Date should be in this format: dd-MM-yyyy e.g. 02-03-2022\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    private static final String DATE_FORMAT \u003d \"dd-MM-uuuu\";","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"            DateTimeFormatter.ofPattern(DATE_FORMAT).withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"     * @param input A valid date time string.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    public StartDate(String input) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"        requireNonNull(input);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"        LocalDate result \u003d validateDateTime(input);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"            checkArgument(false, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"        this.date \u003d result;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"     * Alternative constructor using LocalDateTime object as input.","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"     * @param date A valid LocalDateTime object.","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"    public StartDate(LocalDate date) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"     * Returns a valid LocalDateTime object if a given string is valid date and time.","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"    public static LocalDate validateDateTime(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"            LocalDate date \u003d LocalDate.parse(test, DATE_FORMATTER);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"            return date;","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"            return null;","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        return date;","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"        return date.format(DATE_FORMATTER);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"        return date.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":67,"yunbinmo":4,"jessicajacelyn":1,"zzkzzzz":4}},{"path":"src/main/java/seedu/address/model/record/UniqueRecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model.record;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.exceptions.DuplicateRecordException;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.exceptions.RecordNotFoundException;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":" * A list of records that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":" * A record is considered unique by comparing using {@code Record#isSameRecord(Record)}. As such, adding","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":" * and updating of records uses Record#isSameRecord(Record) for equality so as to ensure that the record","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" * being added or updated is unique in terms of identity in the UniqueRecordList. However, the removal of an insurance","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":" * uses Record#equals(Object) so as to ensure that the insurance with exactly the same fields will be removed.","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":" *","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":" * @see Record#isSameRecord(Record)","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"public class UniqueRecordList implements Iterable\u003cRecord\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"    private final ObservableList\u003cRecord\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"    private final ObservableList\u003cRecord\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"            FXCollections.unmodifiableObservableList(this.internalList);","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"     * Returns true if the list contains an equivalent record as the given argument.","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"    public boolean contains(Record toCheck) {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"        return this.internalList.stream().anyMatch(toCheck::isSameRecord);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"     * Adds a record to the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"     * The record must not already exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"    public void add(Record toAdd) {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"        if (this.contains(toAdd)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"        this.internalList.add(toAdd);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"     * Replaces the record {@code target} in the list with {@code editedRecord}.","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"     * The record identity of {@code editedRecord} must not be the same as another existing record in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"    public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"        requireAllNonNull(target, editedRecord);","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"        int index \u003d this.internalList.indexOf(target);","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"            throw new RecordNotFoundException();","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"        if (!target.isSameRecord(editedRecord) \u0026\u0026 this.contains(editedRecord)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"        this.internalList.set(index, editedRecord);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"     * Removes the equivalent record from the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"     * The record must exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"    public void remove(Record toRemove) {","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"        if (!this.internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"            throw new RecordNotFoundException();","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"seksek13"},"content":"    public void setRecords(UniqueRecordList replacement) {","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"seksek13"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"seksek13"},"content":"        this.internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"seksek13"},"content":"     * Replaces the contents of this list with {@code records}.","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"seksek13"},"content":"     * {@code records} must not contain duplicate records.","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"seksek13"},"content":"    public void setRecords(List\u003cRecord\u003e records) {","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"seksek13"},"content":"        requireAllNonNull(records);","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"seksek13"},"content":"        if (!this.recordsAreUnique(records)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"seksek13"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"seksek13"},"content":"        this.internalList.setAll(records);","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"     * Sorts the record list","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"    public void sort(Comparator\u003cRecord\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"        FXCollections.sort(this.internalList, comparator);","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"seksek13"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"seksek13"},"content":"    public ObservableList\u003cRecord\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"seksek13"},"content":"        return this.internalUnmodifiableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"seksek13"},"content":"    public Iterator\u003cRecord\u003e iterator() {","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"seksek13"},"content":"        return this.internalList.iterator();","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"seksek13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"seksek13"},"content":"                || (other instanceof UniqueRecordList // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 this.internalList.equals(((UniqueRecordList) other).internalList));","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"seksek13"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"seksek13"},"content":"        return this.internalList.hashCode();","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"seksek13"},"content":"     * Returns true if {@code records} contains only unique records.","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"seksek13"},"content":"    private boolean recordsAreUnique(List\u003cRecord\u003e records) {","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"seksek13"},"content":"        for (int i \u003d 0; i \u003c records.size() - 1; i++) {","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"seksek13"},"content":"            for (int j \u003d i + 1; j \u003c records.size(); j++) {","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"seksek13"},"content":"                if (records.get(i).isSameRecord(records.get(j))) {","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"seksek13"},"content":"                    return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"seksek13"},"content":"                }","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":142,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"seksek13"},"content":"        return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":137,"jessicajacelyn":1,"zzkzzzz":8}},{"path":"src/main/java/seedu/address/model/record/exceptions/DuplicateRecordException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model.record.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":" * Signals that the operation will result in duplicate Insurances","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":" * (Insurances are considered duplicates if they have the same","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":" * identity).","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"public class DuplicateRecordException extends RuntimeException {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"    public DuplicateRecordException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"        super(\"Operation would result in duplicate record\");","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":12}},{"path":"src/main/java/seedu/address/model/record/exceptions/RecordNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.model.record.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":" * Signals that the operation is unable to find the specified insurance.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"public class RecordNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":" * Represents a Tag in Mr. Agent.","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jessicajacelyn":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.InsuranceBook;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.RecordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Price;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Title;","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.ClientID;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.EndDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.InsuranceID;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.StartDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), getTagSet(\"friends\")),","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"            new Person(new Name(\"Sherlock Holmes\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    public static Insurance[] getSampleInsurances() {","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        return new Insurance[]{","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"            new Insurance(new Title(\"Motor Insurance\"), new Price(\"700\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"            new Insurance(new Title(\"Home Contents Insurance\"), new Price(\"1000\")),","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"            new Insurance(new Title(\"Travel Insurance Annual Cover\"), new Price(\"200\")),","lastModifiedDate":"2022-04-02"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"            new Insurance(new Title(\"Travel Insurance Family Plan\"), new Price(\"7000\")),","lastModifiedDate":"2022-04-02"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"            new Insurance(new Title(\"Work Injury Compensation Insurance\"), new Price(\"9000\")),","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"            new Insurance(new Title(\"Aviation Insurance\"), new Price(\"120\")),","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"            new Insurance(new Title(\"Business Insurance\"), new Price(\"300\")),","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"            new Insurance(new Title(\"Reinsurance\"), new Price(\"3030\"))","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        };","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"    public static Appointment[] getSampleAppointments() {","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"        return new Appointment[]{","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"            new Appointment(new Description(\"Meet James at UTown\"), new DateTime(\"02-03-2023 18:00\")),","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"            new Appointment(new Description(\"Discuss contract details with Jessie\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"                    new DateTime(\"23-04-2023 15:00\")),","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"            new Appointment(new Description(\"Sign contract with Tony at Bugis Junction\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"                    new DateTime(\"12-05-2023 09:00\")),","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"            new Appointment(new Description(\"First meeting with Alex at office\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"                    new DateTime(\"28-02-2023 10:00\")),","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"yunbinmo"},"content":"            new Appointment(new Description(\"Finalize paperwork with Sherlock\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"                    new DateTime(\"22-03-2023 11:00\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"            new Appointment(new Description(\"Sign contract with James at Bugis Junction\"),","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"                        new DateTime(\"22-03-2019 11:00\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"            new Appointment(new Description(\"Dinner with Roy Balakrishnan\"),","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"                        new DateTime(\"22-03-2018 11:00\"))","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"yunbinmo"},"content":"        };","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"seksek13"},"content":"    public static Record[] getSampleRecords() {","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"seksek13"},"content":"        return new Record[]{","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"Alex Yeoh\"), true), new InsuranceID((\"Motor Insurance\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"jessicajacelyn"},"content":"                    new StartDate(\"02-01-2021\"), new EndDate(\"01-03-2026\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"Bernice Yu\"), true), new InsuranceID((\"Home Contents Insurance\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"jessicajacelyn"},"content":"                    new StartDate(\"02-02-2010\"), new EndDate(\"09-03-2012\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"Bernice Yu\"), true), new InsuranceID((\"Aviation Insurance\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"jessicajacelyn"},"content":"                    new StartDate(\"02-05-2020\"), new EndDate(\"22-03-2023\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"Bernice Yu\"), true), new InsuranceID((\"Reinsurance\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"jessicajacelyn"},"content":"                    new StartDate(\"12-03-2019\"), new EndDate(\"02-07-2020\")),","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"Roy Balakrishnan\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"                    new InsuranceID((\"Home Contents Insurance\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"                    new StartDate(\"22-03-2020\"), new EndDate(\"02-04-2025\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"Roy Balakrishnan\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"                    new InsuranceID((\"Travel Insurance Family Plan\"), true),","lastModifiedDate":"2022-04-02"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"                        new StartDate(\"22-03-2020\"), new EndDate(\"02-04-2025\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"Sherlock Holmes\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"                    new InsuranceID((\"Travel Insurance Annual Cover\"), true),","lastModifiedDate":"2022-04-02"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"                        new StartDate(\"22-03-2020\"), new EndDate(\"12-04-2028\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"Sherlock Holmes\"), true), new InsuranceID((\"Home Contents Insurance\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"                        new StartDate(\"22-03-2020\"), new EndDate(\"24-09-2025\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"David Li\"), true), new InsuranceID((\"Travel Insurance Annual Cover\"), true),","lastModifiedDate":"2022-04-02"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"                        new StartDate(\"22-06-2020\"), new EndDate(\"02-04-2025\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"David Li\"), true), new InsuranceID((\"Travel Insurance Family Plan\"), true),","lastModifiedDate":"2022-04-02"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"                        new StartDate(\"22-09-2020\"), new EndDate(\"02-04-2025\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"            new Record(new ClientID((\"David Li\"), true), new InsuranceID((\"Home Contents Insurance\"), true),","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"                        new StartDate(\"22-10-2020\"), new EndDate(\"02-04-2025\")),","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"    public static ReadOnlyInsuranceBook getSampleInsuranceBook() {","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"        InsuranceBook sampleAb \u003d new InsuranceBook();","lastModifiedDate":"2022-02-28"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"        for (Insurance sampleInsurance : getSampleInsurances()) {","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"            sampleAb.addInsurance(sampleInsurance);","lastModifiedDate":"2022-02-28"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"        return sampleAb;","lastModifiedDate":"2022-02-28"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"yunbinmo"},"content":"    public static ReadOnlyAppointmentBook getSampleAppointmentBook() {","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"yunbinmo"},"content":"        AppointmentBook sampleAb \u003d new AppointmentBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"yunbinmo"},"content":"        for (Appointment sampleAppointment : getSampleAppointments()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"yunbinmo"},"content":"            sampleAb.addAppointment(sampleAppointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"yunbinmo"},"content":"        return sampleAb;","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"seksek13"},"content":"    public static ReadOnlyRecordBook getSampleRecordBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"seksek13"},"content":"        RecordBook sampleRb \u003d new RecordBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"seksek13"},"content":"        for (Record sampleRecord : getSampleRecords()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"seksek13"},"content":"            sampleRb.addRecord(sampleRecord);","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"seksek13"},"content":"        return sampleRb;","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yunbinmo":26,"seksek13":17,"jessicajacelyn":6,"-":59,"zzkzzzz":52}},{"path":"src/main/java/seedu/address/storage/AppointmentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":" * Represents a storage for {@link seedu.address.model.AppointmentBook}.","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"public interface AppointmentBookStorage {","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"     * Returns AppointmentBook data as a {@link ReadOnlyAppointmentBook}.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"     * @see #getAppointmentBookFilePath()","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"     * Saves the given {@link ReadOnlyAppointmentBook} to the storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"     * @param appointmentBook cannot be null.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"     * @see #saveAppointmentBook(ReadOnlyAppointmentBook)","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":43}},{"path":"src/main/java/seedu/address/storage/InsuranceBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":" * Represents a storage for {@link seedu.address.model.InsuranceBook}.","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"public interface InsuranceBookStorage {","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    Path getInsuranceBookFilePath();","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     * Returns InsuranceBook data as a {@link ReadOnlyInsuranceBook}.","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    Optional\u003cReadOnlyInsuranceBook\u003e readInsuranceBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * @see #getInsuranceBookFilePath()","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    Optional\u003cReadOnlyInsuranceBook\u003e readInsuranceBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"     * Saves the given {@link ReadOnlyInsuranceBook} to the storage.","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    void saveInsuranceBook(ReadOnlyInsuranceBook addressBook) throws IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     * @see #saveInsuranceBook(ReadOnlyInsuranceBook)","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    void saveInsuranceBook(ReadOnlyInsuranceBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"zzkzzzz":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    private final String description;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    private final String dateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"description\") String description,","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"                                  @JsonProperty(\"dateTime\") String dateTime) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"        description \u003d source.getDescription().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        dateTime \u003d source.getDateTime().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"                    DateTime.class.getSimpleName()));","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"        if (DateTime.validateDateTime(dateTime) \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"        final DateTime modelDateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"        return new Appointment(modelDescription, modelDateTime);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":62,"jessicajacelyn":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointmentHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.history.AppointmentHistory;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":" * Jackson-friendly version of {@link AppointmentHistory}.","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"public class JsonAdaptedAppointmentHistory {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    private final String description;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    private final String dateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment history details.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    public JsonAdaptedAppointmentHistory(@JsonProperty(\"description\") String description,","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"                                  @JsonProperty(\"dateTime\") String dateTime) {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"     * Converts a given {@code Appointment History} into this class for Jackson use.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"    public JsonAdaptedAppointmentHistory(Appointment source) {","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"        description \u003d source.getDescription().toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        dateTime \u003d source.getDateTime().toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"     * Converts this Jackson-friendly adapted appointment history object","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"     * into the model\u0027s {@code Appointment History } object.","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment history.","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"                    DateTime.class.getSimpleName()));","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"        if (DateTime.validateDateTime(dateTime) \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"        final DateTime modelDateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"        return new Appointment(modelDescription, modelDateTime);","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"jessicajacelyn":64,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInsurance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Price;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Title;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":" * Jackson-friendly version of {@link Insurance}.","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"public class JsonAdaptedInsurance {","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Insurance\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    private final String title;","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    private final String price;","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     * Constructs a {@code JsonAdaptedInsurance} with the given insurance details.","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public JsonAdaptedInsurance(@JsonProperty(\"title\") String title, @JsonProperty(\"price\") String price) {","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        this.price \u003d price;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * Converts a given {@code Insurance} into this class for Jackson use.","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    public JsonAdaptedInsurance(Insurance source) {","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        title \u003d source.getTitle().title;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        price \u003d source.getPrice().value;","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"     * Converts this Jackson-friendly adapted insurance object into the model\u0027s {@code Insurance} object.","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted insurance.","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    public Insurance toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        final Price modelPrice \u003d new Price(price);","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        return new Insurance(modelTitle, modelPrice);","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"zzkzzzz":63}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":108,"zzkzzzz":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.ClientID;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.EndDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.InsuranceID;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.StartDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":" * Jackson-friendly version of {@link Record}.","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"class JsonAdaptedRecord {","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Record\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    private final String clientID;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    private final String insuranceID;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"    private final String startDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"    private final String endDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"     * Constructs a {@code JsonAdaptedRecord} with the given record details.","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    public JsonAdaptedRecord(@JsonProperty(\"clientID\") String clientID,","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"                             @JsonProperty(\"insuranceID\") String insuranceID,","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"                             @JsonProperty(\"startDate\") String startDate,","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"                             @JsonProperty(\"endDate\") String endDate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        this.clientID \u003d clientID;","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceID \u003d insuranceID;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     * Converts a given {@code Record} into this class for Jackson use.","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    public JsonAdaptedRecord(Record source) {","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        clientID \u003d source.getClientID().toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        insuranceID \u003d source.getInsuranceID().toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"        startDate \u003d source.getStartDate().toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"        endDate \u003d source.getEndDate().toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"    /*@JsonValue","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"    public int getRecordName() {","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        return id;","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"    }*/","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"     * Converts this Jackson-friendly adapted record object into the model\u0027s {@code Record} object.","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted record.","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"    public Record toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        //TODO: validate Record object","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        if (clientID \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"                    ClientID.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        final ClientID modelClientID \u003d new ClientID(clientID, true);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        if (insuranceID \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"                    InsuranceID.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"        final InsuranceID modelInsuranceID \u003d new InsuranceID(insuranceID, true);","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"                    StartDate.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"        if (StartDate.validateDateTime(startDate) \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"            throw new IllegalValueException(StartDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"        final StartDate modelStartDate \u003d new StartDate(startDate);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"seksek13"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"seksek13"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"seksek13"},"content":"                    EndDate.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"seksek13"},"content":"        if (EndDate.validateDateTime(endDate) \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"seksek13"},"content":"            throw new IllegalValueException(EndDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"seksek13"},"content":"        final EndDate modelEndDate \u003d new EndDate(endDate);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        return new Record(modelClientID, modelInsuranceID, modelStartDate, modelEndDate);","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"seksek13":48,"jessicajacelyn":1,"zzkzzzz":49}},{"path":"src/main/java/seedu/address/storage/JsonAppointmentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":" * A class to access Appointment data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"public class JsonAppointmentBookStorage implements AppointmentBookStorage {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAppointmentBookStorage.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    public JsonAppointmentBookStorage(Path filePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        return filePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"        return readAppointmentBook(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"     * Similar to {@link #readAppointmentBook()}.","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        Optional\u003cJsonSerializableAppointmentBook\u003e jsonAppointmentBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"                filePath, JsonSerializableAppointmentBook.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"        if (!jsonAppointmentBook.isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"            return Optional.of(jsonAppointmentBook.get().toModelType());","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"        saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"     * Similar to {@link #saveAppointmentBook(ReadOnlyAppointmentBook)}.","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(appointmentBook);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAppointmentBook(appointmentBook), filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":79}},{"path":"src/main/java/seedu/address/storage/JsonAppointmentHistoryBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"public class JsonAppointmentHistoryBookStorage {","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"jessicajacelyn":4}},{"path":"src/main/java/seedu/address/storage/JsonInsuranceBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":" * A class to access Insurance data stored as a json file on the hard disk.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"public class JsonInsuranceBookStorage implements InsuranceBookStorage {","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonInsuranceBookStorage.class);","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public JsonInsuranceBookStorage(Path filePath) {","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    public Path getInsuranceBookFilePath() {","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        return filePath;","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    public Optional\u003cReadOnlyInsuranceBook\u003e readInsuranceBook() throws DataConversionException {","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        return readInsuranceBook(filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     * Similar to {@link #readInsuranceBook()}.","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    public Optional\u003cReadOnlyInsuranceBook\u003e readInsuranceBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        Optional\u003cJsonSerializableInsuranceBook\u003e jsonInsuranceBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                filePath, JsonSerializableInsuranceBook.class);","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        if (!jsonInsuranceBook.isPresent()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"            return Optional.of(jsonInsuranceBook.get().toModelType());","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"    public void saveInsuranceBook(ReadOnlyInsuranceBook addressBook) throws IOException {","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        saveInsuranceBook(addressBook, filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"     * Similar to {@link #saveInsuranceBook(ReadOnlyInsuranceBook)}.","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"    public void saveInsuranceBook(ReadOnlyInsuranceBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableInsuranceBook(addressBook), filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":79}},{"path":"src/main/java/seedu/address/storage/JsonRecordBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":" * A class to access Record data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"public class JsonRecordBookStorage implements RecordBookStorage {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonRecordBookStorage.class);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"    public JsonRecordBookStorage(Path filePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"    public Path getRecordBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"        return filePath;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"    public Optional\u003cReadOnlyRecordBook\u003e readRecordBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"        return readRecordBook(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"     * Similar to {@link #readRecordBook()}.","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"    public Optional\u003cReadOnlyRecordBook\u003e readRecordBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        Optional\u003cJsonSerializableRecordBook\u003e jsonRecordBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"                filePath, JsonSerializableRecordBook.class);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"        if (!jsonRecordBook.isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"            return Optional.of(jsonRecordBook.get().toModelType());","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"    public void saveRecordBook(ReadOnlyRecordBook recordBook) throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"        saveRecordBook(recordBook, filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"    public void saveRecordBook(ReadOnlyRecordBook recordBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"        requireNonNull(recordBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableRecordBook(recordBook), filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"seksek13":78}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":" * An Immutable AppointmentBook that is serializable to JSON format.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"@JsonRootName(value \u003d \"appointmentbook\")","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"public class JsonSerializableAppointmentBook {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointments list contains duplicate appointment(s).\";","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"     * Constructs a {@code JsonSerializableAppointmentBook} with the given appointments.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    public JsonSerializableAppointmentBook(@JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"     * Converts a given {@code ReadOnlyAppointmentBook} into this class for Jackson use.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAppointmentBook}.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    public JsonSerializableAppointmentBook(ReadOnlyAppointmentBook source) {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        appointments.addAll(source.getAppointmentList().stream().map(JsonAdaptedAppointment::new)","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"     * Converts this appointment book into the model\u0027s {@code AppointmentBook} object.","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"    public AppointmentBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"        AppointmentBook appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"            if (appointmentBook.hasAppointment(appointment)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"            appointmentBook.addAppointment(appointment);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"        return appointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"yunbinmo":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAppointmentHistoryBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":" * An Immutable AppointmentHistoryBook that is serializable to JSON format.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"@JsonRootName(value \u003d \"appointmenthistorybook\")","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"public class JsonSerializableAppointmentHistoryBook {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"History list contains duplicate history(s).\";","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"    private final List\u003cJsonAdaptedAppointmentHistory\u003e history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"     * Constructs a {@code JsonSerializableAppointmentHistoryBook} with the given appointments.","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    public JsonSerializableAppointmentHistoryBook(@JsonProperty(\"history\")","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"                                                          List\u003cJsonAdaptedAppointmentHistory\u003e history) {","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        this.history.addAll(history);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"     * Converts this appointment history book into the model\u0027s {@code AppointmentHistoryBook} object.","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    public AppointmentBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"        AppointmentBook appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"        for (JsonAdaptedAppointmentHistory jsonAdaptedAppointment : history) {","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"            if (appointmentBook.hasAppointment(appointment)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"            appointmentBook.addAppointment(appointment);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"        return appointmentBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"jessicajacelyn":46,"zzkzzzz":3}},{"path":"src/main/java/seedu/address/storage/JsonSerializableInsuranceBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.InsuranceBook;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":" * An Immutable InsuranceBook that is serializable to JSON format.","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"@JsonRootName(value \u003d \"insurancebook\")","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"class JsonSerializableInsuranceBook {","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_DUPLICATE_INSURANCE \u003d \"Insurances list contains duplicate insurance(s).\";","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    private final List\u003cJsonAdaptedInsurance\u003e insurances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"     * Constructs a {@code JsonSerializableInsuranceBook} with the given insurances.","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    public JsonSerializableInsuranceBook(@JsonProperty(\"insurances\") List\u003cJsonAdaptedInsurance\u003e insurances) {","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        this.insurances.addAll(insurances);","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"     * Converts a given {@code ReadOnlyInsuranceBook} into this class for Jackson use.","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableInsuranceBook}.","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    public JsonSerializableInsuranceBook(ReadOnlyInsuranceBook source) {","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        insurances.addAll(source.getInsuranceList().stream().map(JsonAdaptedInsurance::new)","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"     * Converts this insurance book into the model\u0027s {@code InsuranceBook} object.","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        InsuranceBook insuranceBook \u003d new InsuranceBook();","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        for (JsonAdaptedInsurance jsonAdaptedInsurance : insurances) {","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"            Insurance insurance \u003d jsonAdaptedInsurance.toModelType();","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"            if (insuranceBook.hasInsurance(insurance)) {","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INSURANCE);","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"            insuranceBook.addInsurance(insurance);","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"        return insuranceBook;","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"zzkzzzz":61}},{"path":"src/main/java/seedu/address/storage/JsonSerializableRecordBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.RecordBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":" * An Immutable RecordBook that is serializable to JSON format.","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"@JsonRootName(value \u003d \"recordbook\")","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"class JsonSerializableRecordBook {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"    public static final String MESSAGE_DUPLICATE_RECORD \u003d \"Records list contains duplicate record(s).\";","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"    private final List\u003cJsonAdaptedRecord\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"     * Constructs a {@code JsonSerializableRecordBook} with the given records.","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    public JsonSerializableRecordBook(@JsonProperty(\"records\") List\u003cJsonAdaptedRecord\u003e records) {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"        this.records.addAll(records);","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"     * Converts a given {@code ReadOnlyRecordBook} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableRecordBook}.","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"    public JsonSerializableRecordBook(ReadOnlyRecordBook source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"        records.addAll(source.getRecordList().stream().map(JsonAdaptedRecord::new)","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"     * Converts this record book into the model\u0027s {@code RecordBook} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"    public RecordBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"        RecordBook recordBook \u003d new RecordBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        for (JsonAdaptedRecord jsonAdaptedRecord : records) {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"            Record record \u003d jsonAdaptedRecord.toModelType();","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"            if (recordBook.hasRecord(record)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_RECORD);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"            recordBook.addRecord(record);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"        return recordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"seksek13":59,"zzkzzzz":1}},{"path":"src/main/java/seedu/address/storage/RecordBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"public interface RecordBookStorage {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"    Path getRecordBookFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"     * Returns RecordBook data as a {@link ReadOnlyRecordBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"    Optional\u003cReadOnlyRecordBook\u003e readRecordBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"     * @see #getRecordBookFilePath()","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"    Optional\u003cReadOnlyRecordBook\u003e readRecordBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"     * Saves the given {@link ReadOnlyRecordBook} to the storage.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"     * @param recordBook cannot be null.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"    void saveRecordBook(ReadOnlyRecordBook recordBook) throws IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"     * @see #saveRecordBook(ReadOnlyRecordBook)","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"    void saveRecordBook(ReadOnlyRecordBook recordBook, Path filePath) throws IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"seksek13":41}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"public interface Storage extends AddressBookStorage, InsuranceBookStorage, AppointmentBookStorage,","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        RecordBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InsuranceBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    Path getInsuranceBookFilePath();","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    Optional\u003cReadOnlyInsuranceBook\u003e readInsuranceBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    void saveInsuranceBook(ReadOnlyInsuranceBook insuranceBook) throws IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RecordBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"    Path getRecordBookFilePath();","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"    Optional\u003cReadOnlyRecordBook\u003e readRecordBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"    void saveRecordBook(ReadOnlyRecordBook recordBook) throws IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yunbinmo":11,"seksek13":10,"-":31,"zzkzzzz":14}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    private InsuranceBookStorage insuranceBookStorage;","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    private AppointmentBookStorage appointmentBookStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    private RecordBookStorage recordBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, InsuranceBookStorage insuranceBookStorage,","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"                          AppointmentBookStorage appointmentBookStorage, RecordBookStorage recordBookStorage,","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        this.insuranceBookStorage \u003d insuranceBookStorage;","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        this.appointmentBookStorage \u003d appointmentBookStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"        this.recordBookStorage \u003d recordBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"        return appointmentBookStorage.getAppointmentBookFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"        return readAppointmentBook(appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath)","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"        return appointmentBookStorage.readAppointmentBook(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"yunbinmo"},"content":"        saveAppointmentBook(appointmentBook, appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"yunbinmo"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"yunbinmo"},"content":"        logger.fine(\"Attempting to write to appointment data file: \" + filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"yunbinmo"},"content":"        appointmentBookStorage.saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InsuranceBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"    public Path getInsuranceBookFilePath() {","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"        return insuranceBookStorage.getInsuranceBookFilePath();","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"    public Optional\u003cReadOnlyInsuranceBook\u003e readInsuranceBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"        return readInsuranceBook(insuranceBookStorage.getInsuranceBookFilePath());","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"    public Optional\u003cReadOnlyInsuranceBook\u003e readInsuranceBook(Path filePath)","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"        return insuranceBookStorage.readInsuranceBook(filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"    public void saveInsuranceBook(ReadOnlyInsuranceBook insuranceBook) throws IOException {","lastModifiedDate":"2022-03-05"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"        saveInsuranceBook(insuranceBook, insuranceBookStorage.getInsuranceBookFilePath());","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"    public void saveInsuranceBook(ReadOnlyInsuranceBook insuranceBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"        insuranceBookStorage.saveInsuranceBook(insuranceBook, filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"seksek13"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RecordBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"seksek13"},"content":"    public Path getRecordBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"seksek13"},"content":"        return recordBookStorage.getRecordBookFilePath();","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"seksek13"},"content":"    public Optional\u003cReadOnlyRecordBook\u003e readRecordBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"seksek13"},"content":"        return readRecordBook(recordBookStorage.getRecordBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"seksek13"},"content":"    public Optional\u003cReadOnlyRecordBook\u003e readRecordBook(Path filePath)","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"seksek13"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"seksek13"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"seksek13"},"content":"        return recordBookStorage.readRecordBook(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"seksek13"},"content":"    public void saveRecordBook(ReadOnlyRecordBook recordBook) throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"seksek13"},"content":"        saveRecordBook(recordBook, recordBookStorage.getRecordBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"seksek13"},"content":"    public void saveRecordBook(ReadOnlyRecordBook recordBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"seksek13"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"seksek13"},"content":"        recordBookStorage.saveRecordBook(recordBook, filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunbinmo":29,"seksek13":35,"-":78,"zzkzzzz":37}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    public final Appointment appointment;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    private Label title;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    private Label dateTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"     * Creates a {@code AppointmentCode} with the given {@code Appointment} and index to display.","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex) {","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        super(FXML);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"        title.setText(displayedIndex + \". \" + appointment.getDescription());","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        dateTime.setText(appointment.getDateTime().toString());","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"            return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"        if (!(other instanceof AppointmentCard)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"            return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"        // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        return title.getText().equals(card.title.getText())","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"                \u0026\u0026 appointment.equals(card.appointment);","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"yunbinmo":54}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"     * Creates a {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"     * @param appointmentList","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        super(FXML);","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListPanel.AppointmentListViewCell());","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"                setText(null);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"            } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"yunbinmo":47,"jessicajacelyn":1}},{"path":"src/main/java/seedu/address/ui/ExpiredRecordCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"public class ExpiredRecordCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"    private static final String FXML \u003d \"ExpiredRecordCard.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    public final Record record;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    private Label title;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"    private Label startDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    private Label endDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"     * Creates a {@code RecordCode} with the given {@code record} and index to display.","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"    public ExpiredRecordCard(Record record, int displayedIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"        super(FXML);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"        this.record \u003d record;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        title.setText(record.getClientID().toString());","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        startDate.setText(\"Start: \" + record.getStartDate().toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"        endDate.setText(\"End: \" + record.getEndDate().toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"        if (!(other instanceof ExpiredRecordCard)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"        ExpiredRecordCard card \u003d (ExpiredRecordCard) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"        return title.getText().equals(card.title.getText())","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"                \u0026\u0026 record.equals(card.record);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"seksek13":1,"jessicajacelyn":56}},{"path":"src/main/java/seedu/address/ui/ExpiredRecordPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":" * Panel containing the list of expired records.","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"public class ExpiredRecordPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"    private ListView\u003cRecord\u003e appointmentListView;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"     * Creates a {@code ExpiredRecordPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"     * @param recordList","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    public ExpiredRecordPanel(ObservableList\u003cRecord\u003e recordList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"        super(FXML);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"        appointmentListView.setItems(recordList);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        appointmentListView.setCellFactory(listView -\u003e new ExpiredRecordPanel.ExpiredRecordListViewCell());","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Record} using a {@code RecordCard}.","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"    class ExpiredRecordListViewCell extends ListCell\u003cRecord\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"        protected void updateItem(Record record, boolean empty) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"            super.updateItem(record, empty);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"            if (empty || record \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"                setText(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"                setGraphic(new ExpiredRecordCard(record, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"jessicajacelyn":48}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"            \"https://ay2122s2-cs2103-f09-3.github.io/tp/UserGuide.html#delete-insurance\";","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *                                   \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *                                    if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *                                   \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *                                   \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *                                       if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *                                   \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *                                   \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                                       if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                                   \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *                                   \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                                       if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                                   \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":99,"zzkzzzz":4}},{"path":"src/main/java/seedu/address/ui/InsuranceCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" * A UI component that displays information of a {@code Insurance}.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"public class InsuranceCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    private static final String FXML \u003d \"InsuranceListCard.fxml\";","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public final Insurance insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    private Label title;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    private Label price;","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    private Label id;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"     * Creates a {@code InsuranceCode} with the given {@code Insurance} and index to display.","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceCard(Insurance insurance, int displayedIndex, MainWindow main) {","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        this.insurance \u003d insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        title.setText(insurance.getTitle().toString());","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        price.setText(\"Price: \" + insurance.getPrice().value);","lastModifiedDate":"2022-04-02"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        cardPane.setOnMousePressed(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"            public void handle(MouseEvent me) {","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Mouse pressed box \" + displayedIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"                main.updateInsuranceDetailPanel(insurance, displayedIndex);","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        });","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"            return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        if (!(other instanceof InsuranceCard)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"        InsuranceCard card \u003d (InsuranceCard) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 insurance.equals(card.insurance);","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"jessicajacelyn":1,"zzkzzzz":74}},{"path":"src/main/java/seedu/address/ui/InsuranceDetailCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":" * An UI component that displays information of a {@code Insurance}.","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"public class InsuranceDetailCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    private static final String FXML \u003d \"InsuranceDetailCard.fxml\";","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    public final Insurance insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    private Label title;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    private Label id;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    private Label price;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"     * Creates a {@code InsuranceCode} with the given {@code Insurance} and index to display.","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceDetailCard(Insurance insurance, int displayedIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        this.insurance \u003d insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        title.setText(insurance.getTitle().toString());","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        price.setText(\"Price: \" + insurance.getPrice().toString());","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"            return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        if (!(other instanceof InsuranceDetailCard)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        InsuranceDetailCard card \u003d (InsuranceDetailCard) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 insurance.equals(card.insurance);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"zzkzzzz":65}},{"path":"src/main/java/seedu/address/ui/InsuranceListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"public class InsuranceListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InsuranceListPanel.class);","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    private ListView\u003cInsurance\u003e personListView;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"     * Creates a {@code InsuranceListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceListPanel(ObservableList\u003cInsurance\u003e personList, MainWindow main) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        personListView.setCellFactory(listView -\u003e new InsuranceListViewCell(main));","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Insurance} using a {@code InsuranceCard}.","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    class InsuranceListViewCell extends ListCell\u003cInsurance\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        private MainWindow main;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        InsuranceListViewCell(MainWindow main) {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"            super();","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"            this.main \u003d main;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        protected void updateItem(Insurance insurance, boolean empty) {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"            super.updateItem(insurance, empty);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            if (empty || insurance \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                setText(null);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"            } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"                setGraphic(new InsuranceCard(insurance, getIndex() + 1, main).getRoot());","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"zzkzzzz":56}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    private InsuranceListPanel insuranceListPanel;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"    private RecordListPanel recordListPanel;","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    private AppointmentListPanel appointmentHistoryPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    private ExpiredRecordPanel expiredRecordPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    private StackPane objectListPanelPlaceholder;","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    private StackPane detailPanel;","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"    //@FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"    //private StackPane recordListPanelPlaceholder;","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"jessicajacelyn"},"content":"    private StackPane expiredRecordPanelPlaceholder;","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"    private StackPane appointmentHistoryPanelPlaceholder;","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"        // default will display Person List","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), this);","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"        objectListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"        insuranceListPanel \u003d new InsuranceListPanel(logic.getFilteredInsuranceList(), this);","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"seksek13"},"content":"        recordListPanel \u003d new RecordListPanel(logic.getFilteredRecordList(), this);","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"yunbinmo"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"yunbinmo"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"jessicajacelyn"},"content":"        appointmentHistoryPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentHistoryList());","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"jessicajacelyn"},"content":"        expiredRecordPanel \u003d new ExpiredRecordPanel(logic.getFilteredExpiredRecordList());","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"zzkzzzz"},"content":"     * Updates DetailPanel for clicked insurance card.","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"zzkzzzz"},"content":"    public void updateInsuranceDetailPanel(Insurance insurance, int displayedIndex) {","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"zzkzzzz"},"content":"        detailPanel.getChildren().clear();","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"zzkzzzz"},"content":"        detailPanel.getChildren().add(new InsuranceDetailCard(insurance, displayedIndex).getRoot());","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"zzkzzzz"},"content":"     * Updates DetailPanel for clicked insurance card.","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"zzkzzzz"},"content":"    public void updatePersonDetailPanel(Person person, int displayedIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"seksek13"},"content":"        ObservableList\u003cRecord\u003e records \u003d logic.getFilteredRecordList();","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"zzkzzzz"},"content":"        detailPanel.getChildren().clear();","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"zzkzzzz"},"content":"        detailPanel.getChildren().add(new PersonDetailCard(person, records, displayedIndex, this).getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":192,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"zzkzzzz"},"content":"     * Updates DetailPanel for clicked record card.","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"zzkzzzz"},"content":"    public void updateRecordDetailPanel(Record record, int displayedIndex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"seksek13"},"content":"        detailPanel.getChildren().clear();","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"zzkzzzz"},"content":"        detailPanel.getChildren().add(new RecordDetailCard(record, displayedIndex).getRoot());","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":199,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"zzkzzzz"},"content":"            if (commandResult.isListPerson()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":245,"author":{"gitId":"zzkzzzz"},"content":"                objectListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-11"},{"lineNumber":246,"author":{"gitId":"zzkzzzz"},"content":"                objectListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-03-11"},{"lineNumber":247,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":248,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":249,"author":{"gitId":"zzkzzzz"},"content":"            if (commandResult.isListInsurance()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":250,"author":{"gitId":"zzkzzzz"},"content":"                objectListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-11"},{"lineNumber":251,"author":{"gitId":"zzkzzzz"},"content":"                objectListPanelPlaceholder.getChildren().add(insuranceListPanel.getRoot());","lastModifiedDate":"2022-03-11"},{"lineNumber":252,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":253,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":254,"author":{"gitId":"zzkzzzz"},"content":"            if (commandResult.isListRecord()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":255,"author":{"gitId":"seksek13"},"content":"                objectListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-12"},{"lineNumber":256,"author":{"gitId":"seksek13"},"content":"                objectListPanelPlaceholder.getChildren().add(recordListPanel.getRoot());","lastModifiedDate":"2022-03-12"},{"lineNumber":257,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":258,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":259,"author":{"gitId":"jessicajacelyn"},"content":"            if (commandResult.isListAppointmentHistory()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":260,"author":{"gitId":"jessicajacelyn"},"content":"                objectListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"jessicajacelyn"},"content":"                objectListPanelPlaceholder.getChildren().add(appointmentHistoryPanel.getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"jessicajacelyn"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"jessicajacelyn"},"content":"            if (commandResult.isListExpiredRecord()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":264,"author":{"gitId":"jessicajacelyn"},"content":"                objectListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-15"},{"lineNumber":265,"author":{"gitId":"jessicajacelyn"},"content":"                objectListPanelPlaceholder.getChildren().add(expiredRecordPanel.getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":266,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":267,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"seksek13":20,"yunbinmo":7,"jessicajacelyn":16,"-":191,"zzkzzzz":49}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    public PersonCard(Person person, int displayedIndex, MainWindow main) {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2022-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2022-04-02"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        cardPane.setOnMousePressed(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"            public void handle(MouseEvent me) {","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Mouse pressed box \" + displayedIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"                main.updatePersonDetailPanel(person, displayedIndex);","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        });","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jessicajacelyn":1,"-":75,"zzkzzzz":11}},{"path":"src/main/java/seedu/address/ui/PersonDetailCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"public class PersonDetailCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    private static final String FXML \u003d \"PersonDetailCard.fxml\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    public final Person person;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    private RecordUnderPersonPanel recordUnderPersonPanel;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    private Label name;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    private Label id;","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    private Label phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    private Label address;","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    private Label email;","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"    private Label record;","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"    private StackPane recordListPanelPlaceholder;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    public PersonDetailCard(Person person, ObservableList\u003cRecord\u003e records, int displayedIndex, MainWindow main) {","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        person.getTags().stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        List\u003cRecord\u003e newRecords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"        String clientName \u003d person.getName().fullName.toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"        for (int i \u003d 0; i \u003c records.size(); i++) {","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"            String recordName \u003d records.get(i).getClientID().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"            if (recordName.equals(clientName)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"                newRecords.add(records.get(i));","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        ObservableList\u003cRecord\u003e observableList \u003d FXCollections.observableList(newRecords);","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        recordUnderPersonPanel \u003d new RecordUnderPersonPanel(observableList);","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        recordListPanelPlaceholder.getChildren().add(recordUnderPersonPanel.getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"        record.setText(\"Insurance:\");","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"            return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"        if (!(other instanceof PersonDetailCard)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"        // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"        PersonDetailCard card \u003d (PersonDetailCard) other;","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"seksek13":10,"jessicajacelyn":1,"zzkzzzz":98}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, MainWindow main) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell(main));","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        private MainWindow main;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        PersonListViewCell(MainWindow main) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"            super();","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"            this.main \u003d main;","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1, main).getRoot());","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":46,"zzkzzzz":11}},{"path":"src/main/java/seedu/address/ui/RecordCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"public class RecordCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"    private static final String FXML \u003d \"RecordListCard.fxml\";","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"    public final Record record;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"    private Label title;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    private Label id;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"     * Creates a {@code RecordCode} with the given {@code Record} and index to display.","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    public RecordCard(Record record, int displayedIndex, MainWindow main) {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"        super(FXML);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"        this.record \u003d record;","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        id.setText(displayedIndex + \". \" + record.getClientID());","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"        title.setText(\" - \" + record.getInsuranceID());","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"        cardPane.setOnMousePressed(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"            public void handle(MouseEvent me) {","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"                System.out.println(\"Mouse pressed box \" + displayedIndex);","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"                main.updateRecordDetailPanel(record, displayedIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"        });","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"            return true;","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"        if (!(other instanceof RecordCard)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"        // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"        RecordCard card \u003d (RecordCard) other;","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        return title.getText().equals(card.title.getText())","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 record.equals(card.record);","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"seksek13":64}},{"path":"src/main/java/seedu/address/ui/RecordDetailCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"public class RecordDetailCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"    private static final String FXML \u003d \"RecordDetailCard.fxml\";","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"    public final Record record;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"    private Label title;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"    private Label id;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"    private Label datetime;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"     * Creates a {@code RecordCode} with the given {@code Record} and index to display.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    public RecordDetailCard(Record record, int displayedIndex) {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"        super(FXML);","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"        this.record \u003d record;","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"        id.setText(displayedIndex + \". \" + record.getClientID());","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"        title.setText(\"Insurance type: \" + record.getInsuranceID());","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"        datetime.setText(\"Valid from \" + record.getStartDate() + \" to \" + record.getEndDate());","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"            return true;","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"        if (!(other instanceof RecordDetailCard)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"        // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"        RecordDetailCard card \u003d (RecordDetailCard) other;","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"                \u0026\u0026 record.equals(card.record);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"seksek13":53}},{"path":"src/main/java/seedu/address/ui/RecordListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"public class RecordListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(RecordListPanel.class);","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"    private ListView\u003cRecord\u003e personListView;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"     * Creates a {@code RecordListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"    public RecordListPanel(ObservableList\u003cRecord\u003e personList, MainWindow main) {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"        super(FXML);","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"        personListView.setCellFactory(listView -\u003e new RecordListViewCell(main));","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Record} using a {@code Record Card}.","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"    class RecordListViewCell extends ListCell\u003cRecord\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"        private MainWindow main;","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"        RecordListViewCell(MainWindow main) {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"            super();","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"            this.main \u003d main;","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"        protected void updateItem(Record record, boolean empty) {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"            super.updateItem(record, empty);","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"            if (empty || record \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"                setText(null);","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"            } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"                setGraphic(new RecordCard(record, getIndex() + 1, main).getRoot());","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"seksek13":54}},{"path":"src/main/java/seedu/address/ui/RecordUnderPersonPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"public class RecordUnderPersonPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(RecordUnderPersonPanel.class);","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    private ListView\u003cRecord\u003e personListView;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     * Creates a {@code RecordUnderPersonPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    public RecordUnderPersonPanel(ObservableList\u003cRecord\u003e personList) {","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        personListView.setCellFactory(listView -\u003e new SmallRecordListViewCell());","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Record} using a {@code Record Card}.","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    class SmallRecordListViewCell extends ListCell\u003cRecord\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        SmallRecordListViewCell() {","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"            super();","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        protected void updateItem(Record record, boolean empty) {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"            super.updateItem(record, empty);","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"            if (empty || record \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"                setText(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"            } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"                setGraphic(new SmallRecordCard(record, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"zzkzzzz":51}},{"path":"src/main/java/seedu/address/ui/SmallRecordCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"public class SmallRecordCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    private static final String FXML \u003d \"SmallRecordListCard.fxml\";","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    public final Record record;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    private HBox cardPane2;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    private Label title2;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    private Label id2;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * Creates a {@code RecordCode} with the given {@code Record} and index to display.","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    public SmallRecordCard(Record record, int displayedIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        this.record \u003d record;","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        title2.setText(\"Insurance type: \" + record.getInsuranceID());","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        tags.getChildren().add(new Label(\"Start: \" + record.getStartDate().toString()));","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        tags.getChildren().add(new Label(\"End: \" + record.getEndDate().toString()));","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        if (!(other instanceof SmallRecordCard)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        SmallRecordCard card \u003d (SmallRecordCard) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        return title2.getText().equals(card.title2.getText())","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"                \u0026\u0026 record.equals(card.record);","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"zzkzzzz":60}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"     * Updates DetailPanel for edit command.","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"    public void updateDetailPanel(Object obj, int index) {","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        if (obj instanceof Person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"            mainWindow.updatePersonDetailPanel((Person) obj, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"        } else if (obj instanceof Record) {","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"            mainWindow.updateRecordDetailPanel((Record) obj, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"        } else if (obj instanceof Insurance) {","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"            mainWindow.updateInsuranceDetailPanel((Insurance) obj, index);","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":88,"zzkzzzz":16}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"                \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"yunbinmo":23,"zzkzzzz":1}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"\u003cVBox style\u003d\"-fx-background-color: #dcbea9#dcbea9;\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" style\u003d\"-fx-background-color: #dcbea9#dcbea9;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"yunbinmo":3,"seksek13":3,"zzkzzzz":2}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"\u003cStackPane style\u003d\"-fx-border-color: transparent;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"  style\u003d\"-fx-border-color: transparent; -fx-prompt-text-fill: #b98b73;\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"seksek13":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 20%);","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"    background-color: #dcbea9; /* Used in the default.html file */","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d ;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: #dcbea9;","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#B98B73, 20%);","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"    -fx-border-color: #B98B73;","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 20%);","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 20%);","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: #dcbea9;","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"seksek13"},"content":"    -fx-border-radius: 16px;","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"seksek13"},"content":"    -fx-background-radius: 16px;","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: #ffe7d6;","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"seksek13"},"content":"    -fx-border-radius: 16px;","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"seksek13"},"content":"    -fx-background-radius: 16px;","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"seksek13"},"content":"    -fx-border-color: #B98B73;","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"seksek13"},"content":"    -fx-border-radius: 16px;","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"seksek13"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"seksek13"},"content":"    -fx-border-color: #B98B73;","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"seksek13"},"content":"    -fx-border-radius: 16px;","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":145,"author":{"gitId":"seksek13"},"content":"     -fx-background-color: derive(#dcbea9, 20%);","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"seksek13"},"content":"     -fx-background-color: derive(#dcbea9, 20%);","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"seksek13"},"content":"     -fx-border-color: derive(#dcbea9, 10%);","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 30%);","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #4B0000;","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 30%);","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"seksek13"},"content":"    -fx-border-color: derive(#dcbea9, 30%);","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":176,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 30%);","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 50%);","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 20%);","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":194,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"seksek13"},"content":"  -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: #dcbea9;","lastModifiedDate":"2022-03-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: #dcbea9;","lastModifiedDate":"2022-03-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 25%);","lastModifiedDate":"2022-03-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":277,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 20%);","lastModifiedDate":"2022-03-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":280,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#dcbea9, 50%);","lastModifiedDate":"2022-03-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"seksek13"},"content":"    -fx-border-color: #dcbea9;","lastModifiedDate":"2022-03-31"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-31"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"seksek13"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-03-31"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"seksek13"},"content":"    -fx-text-fill: #3a2c1d;","lastModifiedDate":"2022-03-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: #dcbea9;","lastModifiedDate":"2022-03-31"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: #b98b73;","lastModifiedDate":"2022-03-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"seksek13":56,"-":289}},{"path":"src/main/resources/view/ExpiredRecordCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"                \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" text\u003d\"\\$title\"/\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cLabel fx:id\u003d\"startDate\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" text\u003d\"\\$startDate\"/\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"            \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" text\u003d\"\\$endDate\"/\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"jessicajacelyn":25,"zzkzzzz":1}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"    -fx-background: #dcbea9;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seksek13":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"    -fx-background-color: derive(#B98B73, 20%);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"seksek13":1,"-":18}},{"path":"src/main/resources/view/InsuranceDetailCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"  wrapText\u003d\"true\"  style\u003d\"-fx-text-fill: #3a2c1d;\" \u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"                \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$title\" wrapText\u003d\"true\" styleClass\u003d\"cell_big_label\"  style\u003d\"-fx-text-fill: #3a2c1d;\" /\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"            \u003cLabel fx:id\u003d\"price\" text\u003d\"\\$price\"  wrapText\u003d\"true\" styleClass\u003d\"cell_big_label\"  style\u003d\"-fx-text-fill: #3a2c1d;\" /\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"yunbinmo":3,"zzkzzzz":33}},{"path":"src/main/resources/view/InsuranceListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"                \u003cLabel fx:id\u003d\"id\" wrapText\u003d\"true\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"                \u003cLabel fx:id\u003d\"title\" wrapText\u003d\"true\" text\u003d\"\\$title\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"            \u003cLabel fx:id\u003d\"price\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$price\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"yunbinmo":3,"zzkzzzz":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Mr. Agent\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"            \u003cVBox style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: #B98B73;\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: #B98B73;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"                \u003cSplitPane id\u003d\"mainSplitPane\" fx:id\u003d\"mainSplitPane\" dividerPositions\u003d\"0.9\" style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: #B98B73;\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"                    \u003cVBox prefHeight\u003d\"136.0\" prefWidth\u003d\"915.0\" style\u003d\"-fx-background-color: #dcbea9;\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"                        \u003cSplitPane id\u003d\"splitPane\" fx:id\u003d\"splitPane\" dividerPositions\u003d\"0.4\" prefWidth\u003d\"821.0\" style\u003d\"-fx-background-color: #dcbea9;\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"                            \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340.0\" style\u003d\"-fx-background-color: #dcbea9;\" SplitPane.resizableWithParent\u003d\"false\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"                                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"                                \u003cStackPane fx:id\u003d\"objectListPanelPlaceholder\" style\u003d\"-fx-background-color: #dcbea9;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"                            \u003c/VBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"                            \u003cStackPane fx:id\u003d\"detailPanel\" prefWidth\u003d\"340\" style\u003d\"-fx-background-color: #dcbea9;\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"                                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"                            \u003c/StackPane\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"                        \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"                        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" prefWidth\u003d\"919.0\" style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: #B98B73; -fx-border-width: 1;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"                                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: #B98B73;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"                                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"                    \u003cStackPane fx:id\u003d\"appointmentPane\" maxWidth\u003d\"350.0\" minWidth\u003d\"350.0\" style\u003d\"-fx-background-color: #dcbea9;\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"                            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"0\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"                        \u003cVBox fx:id\u003d\"appointmentList\" prefWidth\u003d\"370.0\" style\u003d\"-fx-background-color: #dcbea9;\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\" AnchorPane.topAnchor\u003d\"5.0\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"                            \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" maxWidth\u003d\"350.0\" minWidth\u003d\"350.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yunbinmo":15,"seksek13":14,"-":45,"zzkzzzz":9}},{"path":"src/main/resources/view/ObjectDetailPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"\u003cVBox style\u003d\"-fx-background-color: #dcbea9;\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"    \u003cListView fx:id\u003d\"ObjectDetailView\" style\u003d\"-fx-background-color:#dcbea9;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"seksek13":4,"zzkzzzz":4}},{"path":"src/main/resources/view/PersonDetailCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"    \u003cVBox style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: transparent;\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"        \u003cSplitPane id\u003d\"splitPane\" fx:id\u003d\"splitPane\" style\u003d\"-fx-border-color: transparent; -fx-background-color: #dcbea9#dcbea9;\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"            \u003cGridPane style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: transparent;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"                \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"                    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"3000\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"                \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"                \u003cVBox alignment\u003d\"CENTER_LEFT\" style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: transparent;\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"                    \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" style\u003d\"-fx-background-color: #dcbea9; -fx-border-color: transparent;\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"                        \u003cLabel fx:id\u003d\"id\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #3a2c1d; -fx-background-color: #dcbea9;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"                            \u003cminWidth\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"                                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"                                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"                            \u003c/minWidth\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"                        \u003cLabel fx:id\u003d\"name\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #3a2c1d; -fx-background-color: #dcbea9; -fx-font: 30 arial;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"                    \u003cFlowPane fx:id\u003d\"tags\" style\u003d\"-fx-text-fill: #3a2c1d; -fx-background-color: #dcbea9;\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"                    \u003cLabel fx:id\u003d\"phone\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #3a2c1d; -fx-background-color: #dcbea9; -fx-font: 15 arial;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"                    \u003cLabel fx:id\u003d\"address\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #3a2c1d; -fx-background-color: #dcbea9; -fx-font: 15 arial;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"                    \u003cLabel fx:id\u003d\"email\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #3a2c1d; -fx-background-color: #dcbea9; -fx-font: 15 arial;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"0\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"0\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"               \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" style\u003d\"-fx-background-color: #dcbea9;\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"            \u003cLabel fx:id\u003d\"record\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #3a2c1d; -fx-background-color: #dcbea9; -fx-font: 18 arial;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$record\" /\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"            \u003cStackPane fx:id\u003d\"recordListPanelPlaceholder\" style\u003d\"-fx-background-color: #dcbea9;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"seksek13":19,"yunbinmo":6,"zzkzzzz":37}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"                \u003cLabel fx:id\u003d\"id\" style\u003d\"-fx-text-fill: #3a2c1d;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"                \u003cLabel fx:id\u003d\"name\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #3a2c1d;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"            \u003cLabel fx:id\u003d\"phone\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"            \u003cLabel fx:id\u003d\"address\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"            \u003cLabel fx:id\u003d\"email\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"            \u003cRowConstraints/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seksek13":9,"yunbinmo":4,"-":25,"zzkzzzz":1}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"\u003cVBox style\u003d\"-fx-background-color: #dcbea9;\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"  \u003cListView fx:id\u003d\"personListView\" style\u003d\"-fx-background-color: #dcbea9; -fx-border-radius: 16; -fx-background-radius: 16;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seksek13":2,"-":6}},{"path":"src/main/resources/view/RecordDetailCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"                    \u003cLabel fx:id\u003d\"id\" prefHeight\u003d\"17.0\" style\u003d\"-fx-text-fill: #3a2c1d;\" styleClass\u003d\"cell_big_label\"","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"                           wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"                    \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-text-fill: #3a2c1d;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$title\"","lastModifiedDate":"2022-04-02"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"                           wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"            \u003cLabel fx:id\u003d\"datetime\" style\u003d\"-fx-text-fill: #3a2c1d;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$datetime\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"seksek13":31,"yunbinmo":9}},{"path":"src/main/resources/view/RecordListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"            \u003cVBox\u003e\u003c!----\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"                    \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$title\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"            \u003cRowConstraints/\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"seksek13":19,"yunbinmo":12}},{"path":"src/main/resources/view/RecordUnderPersonPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"\u003cVBox style\u003d\"-fx-background-color: #dcbea9;\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"    \u003cListView fx:id\u003d\"recordsUnderClientListView\" focusTraversable\u003d\"false\" mouseTransparent\u003d\"true\" style\u003d\"-fx-background-color: #dcbea9; -fx-border-color:#B98B73;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"seksek13":3,"zzkzzzz":5}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" style\u003d\"-fx-background-color: #dcbea9;\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" style\u003d\"-fx-background-color: #dcbea9;\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"seksek13":2,"-":6}},{"path":"src/main/resources/view/SmallRecordListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"\u003cHBox id\u003d\"cardPane2\" fx:id\u003d\"cardPane2\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"100\" prefWidth\u003d\"300\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"20\" prefWidth\u003d\"400\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"20\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"                \u003cLabel fx:id\u003d\"title2\" wrapText\u003d\"true\" text\u003d\"\\$title\" /\u003e","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"                \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"seksek13":9,"yunbinmo":1,"zzkzzzz":20}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.Command.COMMAND_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"import seedu.address.storage.JsonInsuranceBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"import seedu.address.storage.JsonRecordBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"        JsonInsuranceBookStorage insuranceBookStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"                new JsonInsuranceBookStorage(temporaryFolder.resolve(\"insuranceBook.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"                new JsonAppointmentBookStorage(temporaryFolder.resolve(\"appointmentBook.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"        JsonRecordBookStorage recordBookStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"                new JsonRecordBookStorage(temporaryFolder.resolve(\"recordBook.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, insuranceBookStorage, appointmentBookStorage,","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"                recordBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        String deleteCommand \u003d \"delete -c 9\";","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"        String listCommand \u003d ListPersonCommand.COMMAND_WORD + \" \" + COMMAND_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(listCommand, ListPersonCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":89,"author":{"gitId":"yunbinmo"},"content":"        JsonInsuranceBookStorage insuranceBookStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"yunbinmo"},"content":"                new JsonInsuranceBookStorage(temporaryFolder.resolve(\"ioExceptionInsuranceBook.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"yunbinmo"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"yunbinmo"},"content":"                new JsonAppointmentBookStorage(temporaryFolder.resolve(\"ioExceptionAppointmentBook\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"yunbinmo"},"content":"        JsonRecordBookStorage recordBookStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"                new JsonRecordBookStorage(temporaryFolder.resolve(\"ioExceptionRecordBook\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, insuranceBookStorage, appointmentBookStorage,","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"yunbinmo"},"content":"                recordBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"        String addCommand \u003d AddPersonCommand.COMMAND_WORD + \" -c\" + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"yunbinmo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getInsuranceBook(),","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"yunbinmo"},"content":"                model.getAppointmentBook(), model.getRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"seksek13":3,"yunbinmo":18,"-":152,"zzkzzzz":12}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyAppointmentHistoryBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyExpiredRecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.AppointmentHistory;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.ExpiredRecord;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_appointmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        CommandResult commandResult \u003d new AddAppointmentCommand(validAppointment).execute(modelStub);","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"        String expected \u003d String.format(AddAppointmentCommand.MESSAGE_SUCCESS, validAppointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"        assertEquals(expected, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"        assertEquals(Arrays.asList(validAppointment), modelStub.appointmentsAdded);","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_duplicateAppointment_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(validAppointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"        ModelStub modelStub \u003d new ModelStubWithAppointment(validAppointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"                AddAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT, () -\u003e addAppointmentCommand.execute(modelStub));","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment alice \u003d new AppointmentBuilder().withDescription(\"Meet Alice at Found cafe\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment bob \u003d new AppointmentBuilder().withDescription(\"Meet Bob at HVALA cafe\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"jessicajacelyn"},"content":"        AddAppointmentCommand addAliceCommand \u003d new AddAppointmentCommand(alice);","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"jessicajacelyn"},"content":"        AddAppointmentCommand addBobCommand \u003d new AddAppointmentCommand(bob);","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"jessicajacelyn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"jessicajacelyn"},"content":"        AddAppointmentCommand addAliceCommandCopy \u003d new AddAppointmentCommand(alice);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"jessicajacelyn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"jessicajacelyn"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"jessicajacelyn"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"jessicajacelyn"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"jessicajacelyn"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"jessicajacelyn"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"jessicajacelyn"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"jessicajacelyn"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"jessicajacelyn"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"jessicajacelyn"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"jessicajacelyn"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"jessicajacelyn"},"content":"        // Methods from new components","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyInsuranceBook getInsuranceBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"jessicajacelyn"},"content":"        public void setInsuranceBook(ReadOnlyInsuranceBook insuranceBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"jessicajacelyn"},"content":"        public void deleteInsurance(Insurance target) {","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"jessicajacelyn"},"content":"        public void addInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"jessicajacelyn"},"content":"        public void setInsurance(Insurance target, Insurance editedInsurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":195,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cInsurance\u003e getFilteredInsuranceList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredInsuranceList(Predicate\u003cInsurance\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":206,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":207,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":208,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"zzkzzzz"},"content":"        public void sortAppointmentBook(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":221,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":222,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":223,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":224,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":225,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":226,"author":{"gitId":"jessicajacelyn"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"jessicajacelyn"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAppointment(Appointment target, Appointment editedInsurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":237,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":238,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":239,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":240,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":241,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":242,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":243,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":244,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":245,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":246,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":247,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":248,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":249,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":250,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":251,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyRecordBook getRecordBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":252,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":253,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":254,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":255,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":256,"author":{"gitId":"jessicajacelyn"},"content":"        public void setRecordBook(ReadOnlyRecordBook recordBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":257,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":258,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":259,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":260,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":261,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":262,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":263,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":264,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":265,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":266,"author":{"gitId":"jessicajacelyn"},"content":"        public void addRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":267,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":268,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":269,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":270,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":271,"author":{"gitId":"jessicajacelyn"},"content":"        public void deleteRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":272,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":273,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":274,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":275,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"zzkzzzz"},"content":"        public void sortRecordBook(Comparator\u003cRecord\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":277,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"jessicajacelyn"},"content":"        public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":283,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":284,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":285,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":286,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":287,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":288,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":289,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":290,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":291,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":292,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":293,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":294,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":295,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":296,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":297,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAppointmentHistoryBook getAppointmentHistoryBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":298,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":299,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":300,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":301,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":302,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasHistory(AppointmentHistory history) {","lastModifiedDate":"2022-03-20"},{"lineNumber":303,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":304,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":305,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":306,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":307,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentHistoryList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":308,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":309,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":310,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":311,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":312,"author":{"gitId":"yunbinmo"},"content":"        public void updateFilteredAppointmentHistoryList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-04-02"},{"lineNumber":313,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":314,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":315,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":316,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyExpiredRecordBook getExpiredRecordBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":318,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":319,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":320,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":321,"author":{"gitId":"jessicajacelyn"},"content":"        //        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":322,"author":{"gitId":"jessicajacelyn"},"content":"        //        public boolean hasRecord(ExpiredRecord record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":323,"author":{"gitId":"jessicajacelyn"},"content":"        //            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":324,"author":{"gitId":"jessicajacelyn"},"content":"        //        }","lastModifiedDate":"2022-03-20"},{"lineNumber":325,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":326,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cRecord\u003e getFilteredExpiredRecordList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":329,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":330,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":331,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":332,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredExpiredRecordList(Predicate\u003cExpiredRecord\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":333,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":334,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":335,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":336,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":337,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":338,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":339,"author":{"gitId":"jessicajacelyn"},"content":"     * A Model stub that contains a single appointment.","lastModifiedDate":"2022-03-20"},{"lineNumber":340,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":341,"author":{"gitId":"jessicajacelyn"},"content":"    private class ModelStubWithAppointment extends ModelStub {","lastModifiedDate":"2022-03-20"},{"lineNumber":342,"author":{"gitId":"jessicajacelyn"},"content":"        private final Appointment appointment;","lastModifiedDate":"2022-03-20"},{"lineNumber":343,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":344,"author":{"gitId":"jessicajacelyn"},"content":"        ModelStubWithAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":345,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":346,"author":{"gitId":"jessicajacelyn"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2022-03-20"},{"lineNumber":347,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":348,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":349,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":350,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":351,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":352,"author":{"gitId":"jessicajacelyn"},"content":"            return this.appointment.isSameAppointment(appointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":353,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":354,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":355,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":356,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":357,"author":{"gitId":"jessicajacelyn"},"content":"     * A Model stub that always accept the appointment being added.","lastModifiedDate":"2022-03-20"},{"lineNumber":358,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":359,"author":{"gitId":"jessicajacelyn"},"content":"    private class ModelStubAcceptingAppointmentAdded extends ModelStub {","lastModifiedDate":"2022-03-20"},{"lineNumber":360,"author":{"gitId":"jessicajacelyn"},"content":"        final ArrayList\u003cAppointment\u003e appointmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":361,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":362,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":363,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":364,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":365,"author":{"gitId":"jessicajacelyn"},"content":"            return appointmentsAdded.stream().anyMatch(appointment::isSameAppointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":366,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":367,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":368,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":369,"author":{"gitId":"jessicajacelyn"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":370,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":371,"author":{"gitId":"jessicajacelyn"},"content":"            appointmentsAdded.add(appointment);","lastModifiedDate":"2022-03-20"},{"lineNumber":372,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":373,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":374,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":375,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":376,"author":{"gitId":"jessicajacelyn"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-20"},{"lineNumber":377,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":378,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":379,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":380,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"yunbinmo":1,"jessicajacelyn":368,"zzkzzzz":11}},{"path":"src/test/java/seedu/address/logic/commands/AddInsuranceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyAppointmentHistoryBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyExpiredRecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.AppointmentHistory;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.ExpiredRecord;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.InsuranceBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"public class AddInsuranceCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    public void constructor_nullInsurance_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddInsuranceCommand(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_insuranceAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"        ModelStubAcceptingInsuranceAdded modelStub \u003d new ModelStubAcceptingInsuranceAdded();","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance validInsurance \u003d new InsuranceBuilder().build();","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        CommandResult commandResult \u003d new AddInsuranceCommand(validInsurance).execute(modelStub);","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"        String expected \u003d String.format(AddInsuranceCommand.MESSAGE_SUCCESS, validInsurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"        assertEquals(expected, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"        assertEquals(Arrays.asList(validInsurance), modelStub.insurancesAdded);","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_duplicateInsurance_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance validInsurance \u003d new InsuranceBuilder().build();","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"        AddInsuranceCommand addInsuranceCommand \u003d new AddInsuranceCommand(validInsurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"        ModelStub modelStub \u003d new ModelStubWithInsurance(validInsurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"                AddInsuranceCommand.MESSAGE_DUPLICATE_INSURANCE, () -\u003e addInsuranceCommand.execute(modelStub));","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance heart \u003d new InsuranceBuilder().withTitle(\"Heart\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance life \u003d new InsuranceBuilder().withTitle(\"Life\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"jessicajacelyn"},"content":"        AddInsuranceCommand addHeartCommand \u003d new AddInsuranceCommand(heart);","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"jessicajacelyn"},"content":"        AddInsuranceCommand addLifeCommand \u003d new AddInsuranceCommand(life);","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"jessicajacelyn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(addHeartCommand.equals(addHeartCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"jessicajacelyn"},"content":"        AddInsuranceCommand addHeartCommandCopy \u003d new AddInsuranceCommand(heart);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(addHeartCommand.equals(addHeartCommandCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"jessicajacelyn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(addHeartCommand.equals(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(addHeartCommand.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"jessicajacelyn"},"content":"        // different insurance -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(addHeartCommand.equals(addLifeCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"jessicajacelyn"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"jessicajacelyn"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"jessicajacelyn"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"jessicajacelyn"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"jessicajacelyn"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"jessicajacelyn"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"jessicajacelyn"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"jessicajacelyn"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"jessicajacelyn"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"jessicajacelyn"},"content":"        // Methods from new components","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyInsuranceBook getInsuranceBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"jessicajacelyn"},"content":"        public void setInsuranceBook(ReadOnlyInsuranceBook insuranceBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"jessicajacelyn"},"content":"        public void deleteInsurance(Insurance target) {","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"jessicajacelyn"},"content":"        public void addInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"jessicajacelyn"},"content":"        public void setInsurance(Insurance target, Insurance editedInsurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":195,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cInsurance\u003e getFilteredInsuranceList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredInsuranceList(Predicate\u003cInsurance\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":206,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":207,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":208,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"zzkzzzz"},"content":"        public void sortAppointmentBook(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":221,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":222,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":223,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":224,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":225,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":226,"author":{"gitId":"jessicajacelyn"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"jessicajacelyn"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAppointment(Appointment target, Appointment editedInsurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":237,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":238,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":239,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":240,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":241,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":242,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":243,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":244,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":245,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":246,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":247,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":248,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":249,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":250,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":251,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyRecordBook getRecordBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":252,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":253,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":254,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":255,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":256,"author":{"gitId":"jessicajacelyn"},"content":"        public void setRecordBook(ReadOnlyRecordBook recordBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":257,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":258,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":259,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":260,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":261,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":262,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":263,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":264,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":265,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":266,"author":{"gitId":"jessicajacelyn"},"content":"        public void addRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":267,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":268,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":269,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":270,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":271,"author":{"gitId":"jessicajacelyn"},"content":"        public void deleteRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":272,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":273,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":274,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":275,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"zzkzzzz"},"content":"        public void sortRecordBook(Comparator\u003cRecord\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":277,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"jessicajacelyn"},"content":"        public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":283,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":284,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":285,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":286,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":287,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":288,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":289,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":290,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":291,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":292,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":293,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":294,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":295,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":296,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":297,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAppointmentHistoryBook getAppointmentHistoryBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":298,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":299,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":300,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":301,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":302,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasHistory(AppointmentHistory history) {","lastModifiedDate":"2022-03-20"},{"lineNumber":303,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":304,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":305,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":306,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":307,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentHistoryList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":308,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":309,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":310,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":311,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":312,"author":{"gitId":"yunbinmo"},"content":"        public void updateFilteredAppointmentHistoryList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-04-02"},{"lineNumber":313,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":314,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":315,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":316,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyExpiredRecordBook getExpiredRecordBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":318,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":319,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":320,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":321,"author":{"gitId":"jessicajacelyn"},"content":"        //        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":322,"author":{"gitId":"jessicajacelyn"},"content":"        //        public boolean hasRecord(ExpiredRecord record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":323,"author":{"gitId":"jessicajacelyn"},"content":"        //            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":324,"author":{"gitId":"jessicajacelyn"},"content":"        //        }","lastModifiedDate":"2022-03-20"},{"lineNumber":325,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":326,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cRecord\u003e getFilteredExpiredRecordList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":329,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":330,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":331,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":332,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredExpiredRecordList(Predicate\u003cExpiredRecord\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":333,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":334,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":335,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":336,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":337,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":338,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":339,"author":{"gitId":"jessicajacelyn"},"content":"     * A Model stub that contains a single insurance.","lastModifiedDate":"2022-03-20"},{"lineNumber":340,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":341,"author":{"gitId":"jessicajacelyn"},"content":"    private class ModelStubWithInsurance extends ModelStub {","lastModifiedDate":"2022-03-20"},{"lineNumber":342,"author":{"gitId":"jessicajacelyn"},"content":"        private final Insurance insurance;","lastModifiedDate":"2022-03-20"},{"lineNumber":343,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":344,"author":{"gitId":"jessicajacelyn"},"content":"        ModelStubWithInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":345,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(insurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":346,"author":{"gitId":"jessicajacelyn"},"content":"            this.insurance \u003d insurance;","lastModifiedDate":"2022-03-20"},{"lineNumber":347,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":348,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":349,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":350,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":351,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(insurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":352,"author":{"gitId":"jessicajacelyn"},"content":"            return this.insurance.isSameInsurance(insurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":353,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":354,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":355,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":356,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":357,"author":{"gitId":"jessicajacelyn"},"content":"     * A Model stub that always accept the insurance being added.","lastModifiedDate":"2022-03-20"},{"lineNumber":358,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":359,"author":{"gitId":"jessicajacelyn"},"content":"    private class ModelStubAcceptingInsuranceAdded extends ModelStub {","lastModifiedDate":"2022-03-20"},{"lineNumber":360,"author":{"gitId":"jessicajacelyn"},"content":"        final ArrayList\u003cInsurance\u003e insurancesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":361,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":362,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":363,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":364,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(insurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":365,"author":{"gitId":"jessicajacelyn"},"content":"            return insurancesAdded.stream().anyMatch(insurance::isSameInsurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":366,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":367,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":368,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":369,"author":{"gitId":"jessicajacelyn"},"content":"        public void addInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":370,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(insurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":371,"author":{"gitId":"jessicajacelyn"},"content":"            insurancesAdded.add(insurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":372,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":373,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":374,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":375,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":376,"author":{"gitId":"jessicajacelyn"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-20"},{"lineNumber":377,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":378,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":379,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":380,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"yunbinmo":1,"jessicajacelyn":368,"zzkzzzz":11}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":41,"zzkzzzz":4}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ReadOnlyAppointmentHistoryBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ReadOnlyExpiredRecordBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.history.AppointmentHistory;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.history.ExpiredRecord;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"yunbinmo"},"content":"        // Methods from new components","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"yunbinmo"},"content":"        public ReadOnlyInsuranceBook getInsuranceBook() {","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"yunbinmo"},"content":"        public void setInsuranceBook(ReadOnlyInsuranceBook insuranceBook) {","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"yunbinmo"},"content":"        public boolean hasInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"yunbinmo"},"content":"        public void deleteInsurance(Insurance target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"yunbinmo"},"content":"        public void addInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"yunbinmo"},"content":"        public void setInsurance(Insurance target, Insurance editedInsurance) {","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"yunbinmo"},"content":"        public ObservableList\u003cInsurance\u003e getFilteredInsuranceList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"yunbinmo"},"content":"        public void updateFilteredInsuranceList(Predicate\u003cInsurance\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"yunbinmo"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"yunbinmo"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2022-03-15"},{"lineNumber":211,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"yunbinmo"},"content":"        public void sortAppointmentBook(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"yunbinmo"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"yunbinmo"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"yunbinmo"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":232,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":233,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"yunbinmo"},"content":"        public void setAppointment(Appointment target, Appointment editedInsurance) {","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"yunbinmo"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"yunbinmo"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":249,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"yunbinmo"},"content":"        public ReadOnlyRecordBook getRecordBook() {","lastModifiedDate":"2022-03-15"},{"lineNumber":251,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":252,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":253,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":255,"author":{"gitId":"yunbinmo"},"content":"        public void setRecordBook(ReadOnlyRecordBook recordBook) {","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":257,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":258,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":259,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":260,"author":{"gitId":"yunbinmo"},"content":"        public boolean hasRecord(Record record) {","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":264,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":265,"author":{"gitId":"yunbinmo"},"content":"        public void addRecord(Record record) {","lastModifiedDate":"2022-03-15"},{"lineNumber":266,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":267,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":270,"author":{"gitId":"yunbinmo"},"content":"        public void deleteRecord(Record record) {","lastModifiedDate":"2022-03-15"},{"lineNumber":271,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":272,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":275,"author":{"gitId":"zzkzzzz"},"content":"        public void sortRecordBook(Comparator\u003cRecord\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":277,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"yunbinmo"},"content":"        public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"yunbinmo"},"content":"        public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":289,"author":{"gitId":"yunbinmo"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"yunbinmo"},"content":"        public void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"yunbinmo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":294,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":296,"author":{"gitId":"zzkzzzz"},"content":"        public ReadOnlyAppointmentHistoryBook getAppointmentHistoryBook() {","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":301,"author":{"gitId":"zzkzzzz"},"content":"        public boolean hasHistory(AppointmentHistory history) {","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":305,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":306,"author":{"gitId":"zzkzzzz"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentHistoryList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":307,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":308,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":309,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":311,"author":{"gitId":"yunbinmo"},"content":"        public void updateFilteredAppointmentHistoryList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-04-02"},{"lineNumber":312,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":313,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":314,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":315,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":316,"author":{"gitId":"zzkzzzz"},"content":"        public ReadOnlyExpiredRecordBook getExpiredRecordBook() {","lastModifiedDate":"2022-03-16"},{"lineNumber":317,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":318,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":319,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":320,"author":{"gitId":"zzkzzzz"},"content":"        //        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":321,"author":{"gitId":"zzkzzzz"},"content":"        //        public boolean hasRecord(ExpiredRecord record) {","lastModifiedDate":"2022-03-16"},{"lineNumber":322,"author":{"gitId":"zzkzzzz"},"content":"        //            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":323,"author":{"gitId":"zzkzzzz"},"content":"        //        }","lastModifiedDate":"2022-03-16"},{"lineNumber":324,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":325,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":326,"author":{"gitId":"zzkzzzz"},"content":"        public ObservableList\u003cRecord\u003e getFilteredExpiredRecordList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":327,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":328,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":329,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":330,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":331,"author":{"gitId":"zzkzzzz"},"content":"        public void updateFilteredExpiredRecordList(Predicate\u003cExpiredRecord\u003e predicate) {","lastModifiedDate":"2022-03-16"},{"lineNumber":332,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-16"},{"lineNumber":333,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":334,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yunbinmo":136,"-":185,"zzkzzzz":58}},{"path":"src/test/java/seedu/address/logic/commands/AddRecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyAppointmentHistoryBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyExpiredRecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyInsuranceBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyRecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.AppointmentHistory;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.history.ExpiredRecord;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.RecordBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"public class AddRecordCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    public void constructor_nullRecord_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRecordCommand(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_recordAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"        ModelStubAcceptingRecordAdded modelStub \u003d new ModelStubAcceptingRecordAdded();","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"        Record validRecord \u003d new RecordBuilder().build();","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        CommandResult commandResult \u003d new AddRecordCommand(validRecord).execute(modelStub);","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"        assertEquals(String.format(AddRecordCommand.MESSAGE_SUCCESS, validRecord), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"        assertEquals(Arrays.asList(validRecord), modelStub.recordsAdded);","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_duplicateRecord_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"        Record validRecord \u003d new RecordBuilder().build();","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"        AddRecordCommand addRecordCommand \u003d new AddRecordCommand(validRecord);","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"        ModelStub modelStub \u003d new ModelStubWithRecord(validRecord);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"                AddRecordCommand.MESSAGE_DUPLICATE_RECORD, () -\u003e addRecordCommand.execute(modelStub));","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":"        Record alice \u003d new RecordBuilder().withClientID(\"1\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"jessicajacelyn"},"content":"        Record bob \u003d new RecordBuilder().withClientID(\"2\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"jessicajacelyn"},"content":"        AddRecordCommand addAliceCommand \u003d new AddRecordCommand(alice);","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"jessicajacelyn"},"content":"        AddRecordCommand addBobCommand \u003d new AddRecordCommand(bob);","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"jessicajacelyn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"        AddRecordCommand addAliceCommandCopy \u003d new AddRecordCommand(alice);","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"jessicajacelyn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"jessicajacelyn"},"content":"        // different record -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"jessicajacelyn"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"jessicajacelyn"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"jessicajacelyn"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"jessicajacelyn"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"jessicajacelyn"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"jessicajacelyn"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"jessicajacelyn"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"jessicajacelyn"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"jessicajacelyn"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"jessicajacelyn"},"content":"        // Methods from new components","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyInsuranceBook getInsuranceBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"jessicajacelyn"},"content":"        public void setInsuranceBook(ReadOnlyInsuranceBook insuranceBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"jessicajacelyn"},"content":"        public void deleteInsurance(Insurance target) {","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"jessicajacelyn"},"content":"        public void addInsurance(Insurance insurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"jessicajacelyn"},"content":"        public void setInsurance(Insurance target, Insurance editedInsurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":195,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cInsurance\u003e getFilteredInsuranceList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredInsuranceList(Predicate\u003cInsurance\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":206,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":207,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":208,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"zzkzzzz"},"content":"        public void sortAppointmentBook(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":221,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":222,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":223,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":224,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":225,"author":{"gitId":"jessicajacelyn"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":226,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"jessicajacelyn"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"jessicajacelyn"},"content":"        public void setAppointment(Appointment target, Appointment editedInsurance) {","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":237,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":238,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":239,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":240,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":241,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":242,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":243,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":244,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":245,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":246,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":247,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":248,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":249,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":250,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyRecordBook getRecordBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":251,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":252,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":253,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":254,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":255,"author":{"gitId":"jessicajacelyn"},"content":"        public void setRecordBook(ReadOnlyRecordBook recordBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":256,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":257,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":258,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":259,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":260,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":261,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":262,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":263,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":264,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":265,"author":{"gitId":"jessicajacelyn"},"content":"        public void addRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":266,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":267,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":268,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":269,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":270,"author":{"gitId":"jessicajacelyn"},"content":"        public void deleteRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":271,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":272,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":273,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":274,"author":{"gitId":"zzkzzzz"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":275,"author":{"gitId":"zzkzzzz"},"content":"        public void sortRecordBook(Comparator\u003cRecord\u003e comparator) {","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"zzkzzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":277,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"jessicajacelyn"},"content":"        public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":283,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":284,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":285,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":286,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":287,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":288,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":289,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":290,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":291,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":292,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":293,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":294,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":295,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":296,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAppointmentHistoryBook getAppointmentHistoryBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":297,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":298,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":299,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":300,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":301,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasHistory(AppointmentHistory history) {","lastModifiedDate":"2022-03-20"},{"lineNumber":302,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":303,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":304,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":305,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":306,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentHistoryList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":307,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":308,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":309,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":310,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":311,"author":{"gitId":"yunbinmo"},"content":"        public void updateFilteredAppointmentHistoryList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2022-04-02"},{"lineNumber":312,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":313,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":314,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":315,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":316,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyExpiredRecordBook getExpiredRecordBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":318,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":319,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":320,"author":{"gitId":"jessicajacelyn"},"content":"        //        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":321,"author":{"gitId":"jessicajacelyn"},"content":"        //        public boolean hasRecord(ExpiredRecord record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":322,"author":{"gitId":"jessicajacelyn"},"content":"        //            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":323,"author":{"gitId":"jessicajacelyn"},"content":"        //        }","lastModifiedDate":"2022-03-20"},{"lineNumber":324,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":325,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":326,"author":{"gitId":"jessicajacelyn"},"content":"        public ObservableList\u003cRecord\u003e getFilteredExpiredRecordList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":329,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":330,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":331,"author":{"gitId":"jessicajacelyn"},"content":"        public void updateFilteredExpiredRecordList(Predicate\u003cExpiredRecord\u003e predicate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":332,"author":{"gitId":"jessicajacelyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":333,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":334,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":335,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":336,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":337,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":338,"author":{"gitId":"jessicajacelyn"},"content":"     * A Model stub that contains a single record.","lastModifiedDate":"2022-03-20"},{"lineNumber":339,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":340,"author":{"gitId":"jessicajacelyn"},"content":"    private class ModelStubWithRecord extends ModelStub {","lastModifiedDate":"2022-03-20"},{"lineNumber":341,"author":{"gitId":"jessicajacelyn"},"content":"        private final Record record;","lastModifiedDate":"2022-03-20"},{"lineNumber":342,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":343,"author":{"gitId":"jessicajacelyn"},"content":"        ModelStubWithRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":344,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(record);","lastModifiedDate":"2022-03-20"},{"lineNumber":345,"author":{"gitId":"jessicajacelyn"},"content":"            this.record \u003d record;","lastModifiedDate":"2022-03-20"},{"lineNumber":346,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":347,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":348,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":349,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":350,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(record);","lastModifiedDate":"2022-03-20"},{"lineNumber":351,"author":{"gitId":"jessicajacelyn"},"content":"            return this.record.isSameRecord(record);","lastModifiedDate":"2022-03-20"},{"lineNumber":352,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":353,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":354,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":355,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":356,"author":{"gitId":"jessicajacelyn"},"content":"     * A Model stub that always accept the record being added.","lastModifiedDate":"2022-03-20"},{"lineNumber":357,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":358,"author":{"gitId":"jessicajacelyn"},"content":"    private class ModelStubAcceptingRecordAdded extends ModelStub {","lastModifiedDate":"2022-03-20"},{"lineNumber":359,"author":{"gitId":"jessicajacelyn"},"content":"        final ArrayList\u003cRecord\u003e recordsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":360,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":361,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":362,"author":{"gitId":"jessicajacelyn"},"content":"        public boolean hasRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":363,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(record);","lastModifiedDate":"2022-03-20"},{"lineNumber":364,"author":{"gitId":"jessicajacelyn"},"content":"            return recordsAdded.stream().anyMatch(record::isSameRecord);","lastModifiedDate":"2022-03-20"},{"lineNumber":365,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":366,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":367,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":368,"author":{"gitId":"jessicajacelyn"},"content":"        public void addRecord(Record record) {","lastModifiedDate":"2022-03-20"},{"lineNumber":369,"author":{"gitId":"jessicajacelyn"},"content":"            requireNonNull(record);","lastModifiedDate":"2022-03-20"},{"lineNumber":370,"author":{"gitId":"jessicajacelyn"},"content":"            recordsAdded.add(record);","lastModifiedDate":"2022-03-20"},{"lineNumber":371,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":372,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":373,"author":{"gitId":"jessicajacelyn"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":374,"author":{"gitId":"jessicajacelyn"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":375,"author":{"gitId":"jessicajacelyn"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-20"},{"lineNumber":376,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":377,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":378,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":379,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"yunbinmo":1,"jessicajacelyn":367,"zzkzzzz":11}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(new ClearPersonCommand(), model, ClearPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":31,"zzkzzzz":1}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"                false, false, false, false, false, false, false)));","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false,","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"                false, false, false, true, false)));","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false,","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"                false, false, false, true)));","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"                false, false, false, false, true, false).hashCode());","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"                false, false, false, false, false, true).hashCode());","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"yunbinmo":5,"-":49,"zzkzzzz":5}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DATETIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPT_DESCRIPTION;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.InsuranceBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.RecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.RecordContainsKeywordsPredicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.EditInsuranceDescriptorBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String VALID_DESCRIPTION_FELIX \u003d \"Meet Felix at Orchard\";","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String VALID_DESCRIPTION_TED \u003d \"Meet Ted at Chinatown\";","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String VALID_DATETIME_FELIX \u003d \"06-12-2022 18:00\";","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String VALID_DATETIME_TED \u003d \"02-04-2022 12:00\";","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"    public static final EditAppointmentCommand.EditAppointmentDescriptor DESC_FELIX;","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"jessicajacelyn"},"content":"    public static final EditAppointmentCommand.EditAppointmentDescriptor DESC_TED;","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_DESC_APPOINTMENT1 \u003d \"Meet James for health insurance\";","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_DATETIME_APPOINTMENT1 \u003d \"02-03-2023 15:00\";","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_DESC_APPOINTMENT2 \u003d \"Meet Alice for car insurance\";","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_DATETIME_APPOINTMENT2 \u003d \"02-04-2023 19:00\";","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_DESC_APPOINTMENT3 \u003d \"Meet Tom for insurance renewal\";","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_DATETIME_APPOINTMENT3 \u003d \"04-03-2023 18:00\";","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"yunbinmo"},"content":"    public static final String INVALID_DATETIME_APPOINTMENT \u003d \" \" + PREFIX_APPT_DATETIME + \"04-03-2023 1800\";","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"yunbinmo"},"content":"    public static final String INVALID_DESC_APPOINTMENT \u003d \" \" + PREFIX_APPT_DESCRIPTION + \" \";","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"    public static final String DESC_APPOINTMENT1 \u003d \" \" + PREFIX_APPT_DESCRIPTION + VALID_DESC_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"    public static final String DATETIME_APPOINTMENT1 \u003d \" \" + PREFIX_APPT_DATETIME + VALID_DATETIME_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"yunbinmo"},"content":"    public static final String DESC_APPOINTMENT2 \u003d \" \" + PREFIX_APPT_DESCRIPTION + VALID_DESC_APPOINTMENT2;","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"yunbinmo"},"content":"    public static final String DATETIME_APPOINTMENT2 \u003d \" \" + PREFIX_APPT_DATETIME + VALID_DATETIME_APPOINTMENT2;","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"yunbinmo"},"content":"    public static final String DESC_APPOINTMENT3 \u003d \" \" + PREFIX_APPT_DESCRIPTION + VALID_DESC_APPOINTMENT3;","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"yunbinmo"},"content":"    public static final String DATETIME_APPOINTMENT3 \u003d \" \" + PREFIX_APPT_DATETIME + VALID_DATETIME_APPOINTMENT3;","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_TITLE_INSURANCE1 \u003d \"Health\";","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_TITLE_INSURANCE2 \u003d \"Car\";","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_PRICE_INSURANCE1 \u003d \"123\";","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"yunbinmo"},"content":"    public static final String VALID_PRICE_INSURANCE2 \u003d \"111\";","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"yunbinmo"},"content":"    public static final String INVALID_TITLE_INSURANCE \u003d \" \" + PREFIX_TITLE + \" \";","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"yunbinmo"},"content":"    public static final String INVALID_PRICE_INSURANCE \u003d \" \" + PREFIX_PRICE + \"two\";","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"yunbinmo"},"content":"    public static final String TITLE_INSURANCE1 \u003d \" \" + PREFIX_TITLE + VALID_TITLE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"yunbinmo"},"content":"    public static final String PRICE_INSURANCE1 \u003d \" \" + PREFIX_PRICE + VALID_PRICE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"yunbinmo"},"content":"    public static final String TITLE_INSURANCE2 \u003d \" \" + PREFIX_TITLE + VALID_TITLE_INSURANCE2;","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"yunbinmo"},"content":"    public static final String PRICE_INSURANCE2 \u003d \" \" + PREFIX_PRICE + VALID_PRICE_INSURANCE2;","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String VALID_TITLE_HEART \u003d \"Heart\";","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String VALID_TITLE_LIFE \u003d \"Life\";","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String VALID_PRICE_HEART \u003d \"300\";","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String VALID_PRICE_LIFE \u003d \"500\";","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"jessicajacelyn"},"content":"    public static final EditInsuranceCommand.EditInsuranceDescriptor DESC_HEART;","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"jessicajacelyn"},"content":"    public static final EditInsuranceCommand.EditInsuranceDescriptor DESC_LIFE;","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"jessicajacelyn"},"content":"        DESC_FELIX \u003d new EditAppointmentDescriptorBuilder().withDescription(VALID_DESCRIPTION_FELIX)","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"jessicajacelyn"},"content":"                .withDateTime(VALID_DATETIME_FELIX).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"jessicajacelyn"},"content":"        DESC_TED \u003d new EditAppointmentDescriptorBuilder().withDescription(VALID_DESCRIPTION_TED)","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"jessicajacelyn"},"content":"                .withDateTime(VALID_DATETIME_TED).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"jessicajacelyn"},"content":"        DESC_HEART \u003d new EditInsuranceDescriptorBuilder().withTitle(VALID_TITLE_HEART)","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"jessicajacelyn"},"content":"                .withPrice(VALID_PRICE_HEART).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"jessicajacelyn"},"content":"        DESC_LIFE \u003d new EditInsuranceDescriptorBuilder().withTitle(VALID_TITLE_LIFE)","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"jessicajacelyn"},"content":"                .withPrice(VALID_PRICE_LIFE).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"            // assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"zzkzzzz"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"zzkzzzz"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"zzkzzzz"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"zzkzzzz"},"content":"     * - the insurance book, filtered insurance list and selected insurance in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"zzkzzzz"},"content":"    public static void assertInsuranceCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"zzkzzzz"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"zzkzzzz"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"zzkzzzz"},"content":"        InsuranceBook expectedInsuranceBook \u003d new InsuranceBook(actualModel.getInsuranceBook());","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"zzkzzzz"},"content":"        List\u003cInsurance\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredInsuranceList());","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-03-20"},{"lineNumber":193,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedInsuranceBook, actualModel.getInsuranceBook());","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredInsuranceList());","lastModifiedDate":"2022-03-20"},{"lineNumber":195,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"zzkzzzz"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"zzkzzzz"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"zzkzzzz"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"zzkzzzz"},"content":"     * - the record book, filtered record list and selected record in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"zzkzzzz"},"content":"    public static void assertRecordCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"zzkzzzz"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"zzkzzzz"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-03-20"},{"lineNumber":206,"author":{"gitId":"zzkzzzz"},"content":"        RecordBook expectedRecordBook \u003d new RecordBook(actualModel.getRecordBook());","lastModifiedDate":"2022-03-20"},{"lineNumber":207,"author":{"gitId":"zzkzzzz"},"content":"        List\u003cRecord\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredRecordList());","lastModifiedDate":"2022-03-20"},{"lineNumber":208,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedRecordBook, actualModel.getRecordBook());","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredRecordList());","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"zzkzzzz"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"zzkzzzz"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"zzkzzzz"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"zzkzzzz"},"content":"     * - the appointment book, filtered appointment list","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"zzkzzzz"},"content":"     * and selected appointment in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":221,"author":{"gitId":"zzkzzzz"},"content":"    public static void assertAppointmentCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-03-20"},{"lineNumber":222,"author":{"gitId":"zzkzzzz"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-03-20"},{"lineNumber":223,"author":{"gitId":"zzkzzzz"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-03-20"},{"lineNumber":224,"author":{"gitId":"zzkzzzz"},"content":"        AppointmentBook expectedAppointmentBook \u003d new AppointmentBook(actualModel.getAppointmentBook());","lastModifiedDate":"2022-03-20"},{"lineNumber":225,"author":{"gitId":"zzkzzzz"},"content":"        List\u003cAppointment\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredAppointmentList());","lastModifiedDate":"2022-03-20"},{"lineNumber":226,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedAppointmentBook, actualModel.getAppointmentBook());","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredAppointmentList());","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":246,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":247,"author":{"gitId":"jessicajacelyn"},"content":"     * Updates {@code model}\u0027s filtered list to show only the appointment at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-20"},{"lineNumber":248,"author":{"gitId":"jessicajacelyn"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-20"},{"lineNumber":249,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":250,"author":{"gitId":"jessicajacelyn"},"content":"    public static void showAppointmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-20"},{"lineNumber":251,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredAppointmentList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":252,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":253,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment appointment \u003d model.getFilteredAppointmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":254,"author":{"gitId":"jessicajacelyn"},"content":"        final String[] splitName \u003d appointment.getDescription().description.split(\"\\\\s+\");","lastModifiedDate":"2022-03-20"},{"lineNumber":255,"author":{"gitId":"jessicajacelyn"},"content":"        model.updateFilteredAppointmentList(new DescriptionContainsKeywordsPredicate(Arrays.asList(splitName[1])));","lastModifiedDate":"2022-03-20"},{"lineNumber":256,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":257,"author":{"gitId":"jessicajacelyn"},"content":"        assertEquals(1, model.getFilteredAppointmentList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":259,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":260,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":261,"author":{"gitId":"zzkzzzz"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Insurance at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-20"},{"lineNumber":262,"author":{"gitId":"jessicajacelyn"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-20"},{"lineNumber":263,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":264,"author":{"gitId":"jessicajacelyn"},"content":"    public static void showInsuranceAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-20"},{"lineNumber":265,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredInsuranceList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance insurance \u003d model.getFilteredInsuranceList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":268,"author":{"gitId":"jessicajacelyn"},"content":"        final String[] splitName \u003d insurance.getTitle().title.split(\"\\\\s+\");","lastModifiedDate":"2022-03-20"},{"lineNumber":269,"author":{"gitId":"jessicajacelyn"},"content":"        model.updateFilteredInsuranceList(new TitleContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-20"},{"lineNumber":270,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":271,"author":{"gitId":"jessicajacelyn"},"content":"        assertEquals(1, model.getFilteredInsuranceList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":272,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":273,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":274,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":275,"author":{"gitId":"zzkzzzz"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Record at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"zzkzzzz"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-20"},{"lineNumber":277,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"zzkzzzz"},"content":"    public static void showRecordAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredRecordList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"zzkzzzz"},"content":"        Record record \u003d model.getFilteredRecordList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"zzkzzzz"},"content":"        final String[] splitName \u003d record.getInsuranceID().id.split(\"\\\\s+\");","lastModifiedDate":"2022-03-20"},{"lineNumber":283,"author":{"gitId":"zzkzzzz"},"content":"        model.updateFilteredRecordList(new RecordContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-20"},{"lineNumber":284,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":285,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(1, model.getFilteredRecordList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":286,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yunbinmo":30,"jessicajacelyn":52,"-":128,"zzkzzzz":77}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertAppointmentCommandFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":" * {@code DeleteAppointmentCommand}.","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    private Model model \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        Appointment insuranceToDelete \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"                insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAppointmentBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        expectedModel.deleteAppointment(insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        assertAppointmentCommandFailure(deleteAppointmentCommand, model,","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        Appointment insuranceToDelete \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"                insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        Model expectedModel \u003d new ModelManager(model.getAppointmentBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        expectedModel.deleteAppointment(insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        showNoAppointment(expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        // ensures that outOfBoundIndex is still in bounds of appointment book list","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAppointmentBook().getAppointmentList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        assertAppointmentCommandFailure(deleteAppointmentCommand, model,","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"                Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        DeleteAppointmentCommand deleteFirstCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        DeleteAppointmentCommand deleteSecondCommand \u003d new DeleteAppointmentCommand(INDEX_SECOND_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"        DeleteAppointmentCommand deleteFirstCommandCopy \u003d new DeleteAppointmentCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"    private void showNoAppointment(Model model) {","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"        model.updateFilteredAppointmentList(p -\u003e false);","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(model.getFilteredAppointmentList().isEmpty());","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"zzkzzzz":113}},{"path":"src/test/java/seedu/address/logic/commands/DeleteInsuranceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertInsuranceCommandFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showInsuranceAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalInsurances.getTypicalInsuranceBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":" * {@code DeleteInsuranceCommand}.","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"public class DeleteInsuranceCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    private Model model \u003d new ModelManager(getTypicalInsuranceBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        Insurance insuranceToDelete \u003d model.getFilteredInsuranceList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        DeleteInsuranceCommand deleteInsuranceCommand \u003d new DeleteInsuranceCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(DeleteInsuranceCommand.MESSAGE_DELETE_INSURANCE_SUCCESS,","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"                insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getInsuranceBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        expectedModel.deleteInsurance(insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(deleteInsuranceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInsuranceList().size() + 1);","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        DeleteInsuranceCommand deleteInsuranceCommand \u003d new DeleteInsuranceCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        assertInsuranceCommandFailure(deleteInsuranceCommand, model,","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                Messages.MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        showInsuranceAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        Insurance insuranceToDelete \u003d model.getFilteredInsuranceList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        DeleteInsuranceCommand deleteInsuranceCommand \u003d new DeleteInsuranceCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(DeleteInsuranceCommand.MESSAGE_DELETE_INSURANCE_SUCCESS,","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"                insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        Model expectedModel \u003d new ModelManager(model.getInsuranceBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        expectedModel.deleteInsurance(insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        showNoInsurance(expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(deleteInsuranceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"        showInsuranceAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        // ensures that outOfBoundIndex is still in bounds of insurance book list","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInsuranceBook().getInsuranceList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        DeleteInsuranceCommand deleteInsuranceCommand \u003d new DeleteInsuranceCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        assertInsuranceCommandFailure(deleteInsuranceCommand, model,","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"                Messages.MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        DeleteInsuranceCommand deleteFirstCommand \u003d new DeleteInsuranceCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        DeleteInsuranceCommand deleteSecondCommand \u003d new DeleteInsuranceCommand(INDEX_SECOND_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"        DeleteInsuranceCommand deleteFirstCommandCopy \u003d new DeleteInsuranceCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"        // different insurance -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"    private void showNoInsurance(Model model) {","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"        model.updateFilteredInsuranceList(p -\u003e false);","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(model.getFilteredInsuranceList().isEmpty());","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"zzkzzzz":113}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":88,"zzkzzzz":21}},{"path":"src/test/java/seedu/address/logic/commands/DeleteRecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertRecordCommandFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showRecordAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalRecords.getTypicalRecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":" * {@code DeleteRecordCommand}.","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"public class DeleteRecordCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    private Model model \u003d new ModelManager(getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        Record insuranceToDelete \u003d model.getFilteredRecordList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        DeleteRecordCommand deleteRecordCommand \u003d new DeleteRecordCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(DeleteRecordCommand.MESSAGE_DELETE_RECORD_SUCCESS, insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        expectedModel.deleteRecord(insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(deleteRecordCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredRecordList().size() + 1);","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        DeleteRecordCommand deleteRecordCommand \u003d new DeleteRecordCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        assertRecordCommandFailure(deleteRecordCommand, model, Messages.MESSAGE_INVALID_RECORD_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        showRecordAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        Record insuranceToDelete \u003d model.getFilteredRecordList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        DeleteRecordCommand deleteRecordCommand \u003d new DeleteRecordCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(DeleteRecordCommand.MESSAGE_DELETE_RECORD_SUCCESS, insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        Model expectedModel \u003d new ModelManager(model.getRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        expectedModel.deleteRecord(insuranceToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        showNoRecord(expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(deleteRecordCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"        showRecordAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"        // ensures that outOfBoundIndex is still in bounds of record book list","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRecordBook().getRecordList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        DeleteRecordCommand deleteRecordCommand \u003d new DeleteRecordCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"        assertRecordCommandFailure(deleteRecordCommand, model, Messages.MESSAGE_INVALID_RECORD_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"        DeleteRecordCommand deleteFirstCommand \u003d new DeleteRecordCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"        DeleteRecordCommand deleteSecondCommand \u003d new DeleteRecordCommand(INDEX_SECOND_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        DeleteRecordCommand deleteFirstCommandCopy \u003d new DeleteRecordCommand(INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"        // different record -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"    private void showNoRecord(Model model) {","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"        model.updateFilteredRecordList(p -\u003e false);","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(model.getFilteredRecordList().isEmpty());","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"zzkzzzz":109}},{"path":"src/test/java/seedu/address/logic/commands/EditAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_FELIX;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_TED;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_FELIX;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_FELIX;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalInsurances.getTypicalInsuranceBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalRecords.getTypicalRecordBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"public class EditAppointmentCommandTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInsuranceBook(),","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"            getTypicalAppointmentBook(), getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder(editedAppointment).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_OBJECT, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"                String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment);","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        Model expectedModel \u003d new ModelManager(new AppointmentBook(model.getAppointmentBook()), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel.setAppointment(model.getFilteredAppointmentList().get(0), editedAppointment);","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"        Index indexLastAppointment \u003d Index.fromOneBased(model.getFilteredAppointmentList().size());","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment lastAppointment \u003d model.getFilteredAppointmentList().get(indexLastAppointment.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"        AppointmentBuilder appointmentInList \u003d new AppointmentBuilder(lastAppointment);","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment editedAppointment \u003d appointmentInList.withDescription(VALID_DESCRIPTION_FELIX)","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"                .withDateTime(VALID_DATETIME_FELIX)","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"                .build();","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"                .withDescription(VALID_DESCRIPTION_FELIX).withDateTime(VALID_DATETIME_FELIX).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(indexLastAppointment, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"jessicajacelyn"},"content":"                String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment);","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"        Model expectedModel \u003d new ModelManager(new AppointmentBook(model.getAppointmentBook()), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel.setAppointment(lastAppointment, editedAppointment);","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"jessicajacelyn"},"content":"                new EditAppointmentCommand(INDEX_FIRST_OBJECT, new EditAppointmentDescriptor());","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment editedAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"jessicajacelyn"},"content":"                String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment);","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"jessicajacelyn"},"content":"        Model expectedModel \u003d new ModelManager(new AppointmentBook(model.getAppointmentBook()), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"jessicajacelyn"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment appointmentInFilteredList \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"jessicajacelyn"},"content":"                .get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment editedAppointment \u003d new AppointmentBuilder(appointmentInFilteredList)","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"jessicajacelyn"},"content":"                .withDescription(VALID_DESCRIPTION_FELIX).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_OBJECT,","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"jessicajacelyn"},"content":"                new EditAppointmentDescriptorBuilder().withDescription(VALID_DESCRIPTION_FELIX).build());","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"jessicajacelyn"},"content":"                String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment);","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"jessicajacelyn"},"content":"        Model expectedModel \u003d new ModelManager(new AppointmentBook(model.getAppointmentBook()), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel.setAppointment(model.getFilteredAppointmentList().get(0), editedAppointment);","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_duplicateAppointmentUnfilteredList_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment firstAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder(firstAppointment).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_SECOND_OBJECT, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandFailure(editAppointmentCommand, model, EditAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_duplicateAppointmentFilteredList_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"jessicajacelyn"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"jessicajacelyn"},"content":"        // edit appointment in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"jessicajacelyn"},"content":"        Appointment appointmentInList \u003d model.getAppointmentBook().getAppointmentList()","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"jessicajacelyn"},"content":"                .get(INDEX_SECOND_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(INDEX_FIRST_OBJECT,","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"jessicajacelyn"},"content":"                new EditAppointmentDescriptorBuilder(appointmentInList).build());","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandFailure(editAppointmentCommand, model, EditAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_invalidAppointmentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"jessicajacelyn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"jessicajacelyn"},"content":"                .withDescription(VALID_DESCRIPTION_FELIX).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandFailure(editAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"jessicajacelyn"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"jessicajacelyn"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_invalidAppointmentIndexFilteredList_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"jessicajacelyn"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"jessicajacelyn"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"jessicajacelyn"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAppointmentBook().getAppointmentList().size());","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"jessicajacelyn"},"content":"                new EditAppointmentDescriptorBuilder().withDescription(VALID_DESCRIPTION_FELIX).build());","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandFailure(editAppointmentCommand, model, Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"jessicajacelyn"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"jessicajacelyn"},"content":"        final EditAppointmentCommand standardCommand \u003d new EditAppointmentCommand(INDEX_FIRST_OBJECT, DESC_TED);","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"jessicajacelyn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentDescriptor copyDescriptor \u003d new EditAppointmentDescriptor(DESC_TED);","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentCommand commandWithSameValues \u003d new EditAppointmentCommand(INDEX_FIRST_OBJECT, copyDescriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"jessicajacelyn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"jessicajacelyn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"jessicajacelyn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"jessicajacelyn"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(standardCommand.equals(new EditAppointmentCommand(INDEX_SECOND_OBJECT, DESC_TED)));","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"jessicajacelyn"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":183,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(standardCommand.equals(new EditAppointmentCommand(INDEX_FIRST_OBJECT, DESC_FELIX)));","lastModifiedDate":"2022-03-21"},{"lineNumber":184,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":185,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"jessicajacelyn":186}},{"path":"src/test/java/seedu/address/logic/commands/EditAppointmentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_FELIX;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_TED;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_TED;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TED;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"public class EditAppointmentDescriptorTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentDescriptor descriptorWithSameValues \u003d new EditAppointmentDescriptor(DESC_FELIX);","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(DESC_FELIX.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(DESC_FELIX.equals(DESC_FELIX));","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_FELIX.equals(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_FELIX.equals(5));","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_FELIX.equals(DESC_TED));","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        EditAppointmentDescriptor editedFelix \u003d new EditAppointmentDescriptorBuilder(DESC_FELIX)","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"                .withDescription(VALID_DESCRIPTION_TED).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_FELIX.equals(editedFelix));","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"        // different datetime -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"        editedFelix \u003d new EditAppointmentDescriptorBuilder(DESC_FELIX).withDateTime(VALID_DATETIME_TED).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_FELIX.equals(editedFelix));","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"jessicajacelyn":44}},{"path":"src/test/java/seedu/address/logic/commands/EditInsuranceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HEART;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_LIFE;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_HEART;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_HEART;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showInsuranceAtIndex;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalInsurances.getTypicalInsuranceBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalRecords.getTypicalRecordBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.EditInsuranceCommand.EditInsuranceDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.InsuranceBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.EditInsuranceDescriptorBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.InsuranceBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"public class EditInsuranceCommandTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInsuranceBook(),","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"            getTypicalAppointmentBook(), getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance editedInsurance \u003d new InsuranceBuilder().build();","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceDescriptor descriptor \u003d new EditInsuranceDescriptorBuilder(editedInsurance).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceCommand editInsuranceCommand \u003d new EditInsuranceCommand(INDEX_FIRST_OBJECT, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"                String.format(EditInsuranceCommand.MESSAGE_EDIT_INSURANCE_SUCCESS, editedInsurance);","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        Model expectedModel \u003d new ModelManager(new InsuranceBook(model.getInsuranceBook()), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel.setInsurance(model.getFilteredInsuranceList().get(0), editedInsurance);","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(editInsuranceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"        Index indexLastInsurance \u003d Index.fromOneBased(model.getFilteredInsuranceList().size());","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance lastInsurance \u003d model.getFilteredInsuranceList().get(indexLastInsurance.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"        InsuranceBuilder insuranceInList \u003d new InsuranceBuilder(lastInsurance);","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance editedInsurance \u003d insuranceInList.withTitle(VALID_TITLE_HEART)","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"                .withPrice(VALID_PRICE_HEART)","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"                .build();","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceDescriptor descriptor \u003d new EditInsuranceDescriptorBuilder()","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"                .withTitle(VALID_TITLE_HEART).withPrice(VALID_PRICE_HEART).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceCommand editInsuranceCommand \u003d new EditInsuranceCommand(indexLastInsurance, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"jessicajacelyn"},"content":"                String.format(EditInsuranceCommand.MESSAGE_EDIT_INSURANCE_SUCCESS, editedInsurance);","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"jessicajacelyn"},"content":"        Model expectedModel \u003d new ModelManager(new InsuranceBook(model.getInsuranceBook()), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel.setInsurance(lastInsurance, editedInsurance);","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(editInsuranceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceCommand editInsuranceCommand \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"jessicajacelyn"},"content":"                new EditInsuranceCommand(INDEX_FIRST_OBJECT, new EditInsuranceDescriptor());","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance editedInsurance \u003d model.getFilteredInsuranceList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"jessicajacelyn"},"content":"                String.format(EditInsuranceCommand.MESSAGE_EDIT_INSURANCE_SUCCESS, editedInsurance);","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"jessicajacelyn"},"content":"        Model expectedModel \u003d new ModelManager(new InsuranceBook(model.getInsuranceBook()), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(editInsuranceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"jessicajacelyn"},"content":"        showInsuranceAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance insuranceInFilteredList \u003d model.getFilteredInsuranceList()","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"jessicajacelyn"},"content":"                .get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance editedInsurance \u003d new InsuranceBuilder(insuranceInFilteredList)","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"jessicajacelyn"},"content":"                .withTitle(VALID_TITLE_HEART).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceCommand editInsuranceCommand \u003d new EditInsuranceCommand(INDEX_FIRST_OBJECT,","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"jessicajacelyn"},"content":"                new EditInsuranceDescriptorBuilder().withTitle(VALID_TITLE_HEART).build());","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"jessicajacelyn"},"content":"                String.format(EditInsuranceCommand.MESSAGE_EDIT_INSURANCE_SUCCESS, editedInsurance);","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"jessicajacelyn"},"content":"        Model expectedModel \u003d new ModelManager(new InsuranceBook(model.getInsuranceBook()), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel.setInsurance(model.getFilteredInsuranceList().get(0), editedInsurance);","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(editInsuranceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_duplicateInsuranceUnfilteredList_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance firstInsurance \u003d model.getFilteredInsuranceList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceDescriptor descriptor \u003d new EditInsuranceDescriptorBuilder(firstInsurance).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceCommand editInsuranceCommand \u003d new EditInsuranceCommand(INDEX_SECOND_OBJECT, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandFailure(editInsuranceCommand, model, EditInsuranceCommand.MESSAGE_DUPLICATE_INSURANCE);","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_duplicateInsuranceFilteredList_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"jessicajacelyn"},"content":"        showInsuranceAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"jessicajacelyn"},"content":"        // edit insurance in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"jessicajacelyn"},"content":"        Insurance insuranceInList \u003d model.getInsuranceBook().getInsuranceList()","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"jessicajacelyn"},"content":"                .get(INDEX_SECOND_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceCommand editInsuranceCommand \u003d new EditInsuranceCommand(INDEX_FIRST_OBJECT,","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"jessicajacelyn"},"content":"                new EditInsuranceDescriptorBuilder(insuranceInList).build());","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandFailure(editInsuranceCommand, model, EditInsuranceCommand.MESSAGE_DUPLICATE_INSURANCE);","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_invalidInsuranceIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"jessicajacelyn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInsuranceList().size() + 1);","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceDescriptor descriptor \u003d new EditInsuranceDescriptorBuilder()","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"jessicajacelyn"},"content":"                .withTitle(VALID_TITLE_HEART).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceCommand editInsuranceCommand \u003d new EditInsuranceCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandFailure(editInsuranceCommand, model, Messages.MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"jessicajacelyn"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"jessicajacelyn"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_invalidInsuranceIndexFilteredList_failure() {","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"jessicajacelyn"},"content":"        showInsuranceAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"jessicajacelyn"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"jessicajacelyn"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInsuranceBook().getInsuranceList().size());","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceCommand editInsuranceCommand \u003d new EditInsuranceCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"jessicajacelyn"},"content":"                new EditInsuranceDescriptorBuilder().withTitle(VALID_TITLE_HEART).build());","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandFailure(editInsuranceCommand, model, Messages.MESSAGE_INVALID_INSURANCE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"jessicajacelyn"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"jessicajacelyn"},"content":"        final EditInsuranceCommand standardCommand \u003d new EditInsuranceCommand(INDEX_FIRST_OBJECT, DESC_LIFE);","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"jessicajacelyn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceDescriptor copyDescriptor \u003d new EditInsuranceDescriptor(DESC_LIFE);","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceCommand commandWithSameValues \u003d new EditInsuranceCommand(INDEX_FIRST_OBJECT, copyDescriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"jessicajacelyn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"jessicajacelyn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"jessicajacelyn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"jessicajacelyn"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(standardCommand.equals(new EditInsuranceCommand(INDEX_SECOND_OBJECT, DESC_LIFE)));","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"jessicajacelyn"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":183,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(standardCommand.equals(new EditInsuranceCommand(INDEX_FIRST_OBJECT, DESC_HEART)));","lastModifiedDate":"2022-03-21"},{"lineNumber":184,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":185,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"jessicajacelyn":186}},{"path":"src/test/java/seedu/address/logic/commands/EditInsuranceDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_HEART;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_LIFE;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_LIFE;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_LIFE;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.EditInsuranceCommand.EditInsuranceDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.testutil.EditInsuranceDescriptorBuilder;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"public class EditInsuranceDescriptorTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    public void equals() {","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceDescriptor descriptorWithSameValues \u003d new EditInsuranceDescriptor(DESC_HEART);","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(DESC_HEART.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"        assertTrue(DESC_HEART.equals(DESC_HEART));","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_HEART.equals(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_HEART.equals(5));","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_HEART.equals(DESC_LIFE));","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        EditInsuranceDescriptor editedHeart \u003d new EditInsuranceDescriptorBuilder(DESC_HEART)","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"                .withTitle(VALID_TITLE_LIFE).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_HEART.equals(editedHeart));","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"        // different price -\u003e returns false","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"        editedHeart \u003d new EditInsuranceDescriptorBuilder(DESC_HEART).withPrice(VALID_PRICE_LIFE).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"        assertFalse(DESC_HEART.equals(editedHeart));","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"jessicajacelyn":44}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_OBJECT, descriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_OBJECT, new EditPersonDescriptor());","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_OBJECT,","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_SECOND_OBJECT, descriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_OBJECT.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_OBJECT,","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2022-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_OBJECT, DESC_AMY);","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_OBJECT, copyDescriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_OBJECT, DESC_AMY)));","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_OBJECT, DESC_BOB)));","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":137,"zzkzzzz":36}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":57,"zzkzzzz":1}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false,","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"                false, false, false, false, false, true);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yunbinmo":1,"-":19,"zzkzzzz":1}},{"path":"src/test/java/seedu/address/logic/commands/FindAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_APPOINTMENT_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT2;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT3;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.appointment.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"public class FindAppointmentCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"    private Model model \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"        DescriptionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"        DescriptionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"        FindAppointmentCommand findFirstCommand \u003d new FindAppointmentCommand(firstPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"        FindAppointmentCommand findSecondCommand \u003d new FindAppointmentCommand(secondPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"        FindAppointmentCommand findFirstCommandCopy \u003d new FindAppointmentCommand(firstPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"    public void execute_zeroKeywords_noAppointmentFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENT_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        FindAppointmentCommand command \u003d new FindAppointmentCommand(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"    public void execute_multipleKeywords_multipleAppointmentsFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENT_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\"Health Car Renewal\");","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"        FindAppointmentCommand command \u003d new FindAppointmentCommand(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"        assertEquals(Arrays.asList(APPOINTMENT1 , APPOINTMENT2, APPOINTMENT3), model.getFilteredAppointmentList());","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"     * Parses {@code userInput} into a {@code DescriptionContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"    private DescriptionContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"        return new DescriptionContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"seksek13":84}},{"path":"src/test/java/seedu/address/logic/commands/FindInsuranceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INSURANCES_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalInsurances.INSURANCE1;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalInsurances.INSURANCE2;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalInsurances.INSURANCE3;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalInsurances.getTypicalInsuranceBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.insurance.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"public class FindInsuranceCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"    private Model model \u003d new ModelManager(getTypicalInsuranceBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalInsuranceBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        FindInsuranceCommand findFirstCommand \u003d new FindInsuranceCommand(firstPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"        FindInsuranceCommand findSecondCommand \u003d new FindInsuranceCommand(secondPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"        FindInsuranceCommand findFirstCommandCopy \u003d new FindInsuranceCommand(firstPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"    public void execute_zeroKeywords_noInsuranceFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INSURANCES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"        FindInsuranceCommand command \u003d new FindInsuranceCommand(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"        expectedModel.updateFilteredInsuranceList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredInsuranceList());","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"    public void execute_multipleKeywords_multipleInsurancesFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INSURANCES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\"Health Car House\");","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"        FindInsuranceCommand command \u003d new FindInsuranceCommand(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"        expectedModel.updateFilteredInsuranceList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"        assertEquals(Arrays.asList(INSURANCE1, INSURANCE2, INSURANCE3), model.getFilteredInsuranceList());","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"    private TitleContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"        return new TitleContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"seksek13":82}},{"path":"src/test/java/seedu/address/logic/commands/FindPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"public class FindPersonCommandTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        FindPersonCommand findSecondCommand \u003d new FindPersonCommand(secondPredicate);","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":76,"zzkzzzz":7}},{"path":"src/test/java/seedu/address/logic/commands/FindRecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seksek13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"seksek13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"seksek13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"seksek13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"seksek13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_RECORDS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"seksek13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalRecords.RECORD1;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalRecords.RECORD2;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalRecords.RECORD3;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"seksek13"},"content":"import static seedu.address.testutil.TypicalRecords.getTypicalRecordBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"seksek13"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"seksek13"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"seksek13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"seksek13"},"content":"import seedu.address.model.record.RecordContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"seksek13"},"content":"public class FindRecordCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"seksek13"},"content":"    private Model model \u003d new ModelManager(getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"seksek13"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"seksek13"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"seksek13"},"content":"        RecordContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"                new RecordContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"seksek13"},"content":"        RecordContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"seksek13"},"content":"                new RecordContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"seksek13"},"content":"        FindRecordCommand findFirstCommand \u003d new FindRecordCommand(firstPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"seksek13"},"content":"        FindRecordCommand findSecondCommand \u003d new FindRecordCommand(secondPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"seksek13"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"seksek13"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"seksek13"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"seksek13"},"content":"        FindRecordCommand findFirstCommandCopy \u003d new FindRecordCommand(firstPredicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"seksek13"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"seksek13"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"seksek13"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"seksek13"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"seksek13"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"seksek13"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"seksek13"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"seksek13"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"seksek13"},"content":"    public void execute_zeroKeywords_noRecordFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"seksek13"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RECORDS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"seksek13"},"content":"        RecordContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"seksek13"},"content":"        FindRecordCommand command \u003d new FindRecordCommand(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"seksek13"},"content":"        expectedModel.updateFilteredRecordList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"seksek13"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"seksek13"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredRecordList());","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"seksek13"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"seksek13"},"content":"    public void execute_multipleKeywords_multipleRecordsFound() {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"seksek13"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RECORDS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"seksek13"},"content":"        RecordContainsKeywordsPredicate predicate \u003d preparePredicate(\"1 2 3\");","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"seksek13"},"content":"        FindRecordCommand command \u003d new FindRecordCommand(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"seksek13"},"content":"        expectedModel.updateFilteredRecordList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"seksek13"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"seksek13"},"content":"        assertEquals(Arrays.asList(RECORD1, RECORD2, RECORD3), model.getFilteredRecordList());","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"seksek13"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"seksek13"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"seksek13"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"seksek13"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"seksek13"},"content":"    private RecordContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"seksek13"},"content":"        return new RecordContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"seksek13"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"seksek13"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"seksek13":81}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, false, false,","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"                false, false, false, false, true, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yunbinmo":1,"-":19,"zzkzzzz":1}},{"path":"src/test/java/seedu/address/logic/commands/ListAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalInsurances.getTypicalInsuranceBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalRecords.getTypicalRecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"public class ListAppointmentCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    private Model model;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInsuranceBook(),","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"                getTypicalAppointmentBook(), getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(new ListAppointmentCommand(), model,","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"                ListAppointmentCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(new ListAppointmentCommand(), model,","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"                ListAppointmentCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jessicajacelyn":29,"zzkzzzz":16}},{"path":"src/test/java/seedu/address/logic/commands/ListAppointmentHistoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalInsurances.getTypicalInsuranceBook;","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalRecords.getTypicalRecordBook;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"public class ListAppointmentHistoryCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    private Model model;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInsuranceBook(),","lastModifiedDate":"2022-04-02"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"                getTypicalAppointmentBook(), getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d ListAppointmentHistoryCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(new ListAppointmentHistoryCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d ListAppointmentHistoryCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(new ListAppointmentHistoryCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"yunbinmo":5,"jessicajacelyn":38,"zzkzzzz":2}},{"path":"src/test/java/seedu/address/logic/commands/ListExpiredRecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2022-04-02"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalInsurances.getTypicalInsuranceBook;","lastModifiedDate":"2022-04-02"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalRecords.getTypicalRecordBook;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"public class ListExpiredRecordCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    private Model model;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInsuranceBook(),","lastModifiedDate":"2022-04-02"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"                getTypicalAppointmentBook(), getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d ListExpiredRecordCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(new ListExpiredRecordCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"        String expectedMessage \u003d ListExpiredRecordCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(new ListExpiredRecordCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"yunbinmo":5,"jessicajacelyn":38,"zzkzzzz":2}},{"path":"src/test/java/seedu/address/logic/commands/ListInsuranceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showInsuranceAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalInsurances.getTypicalInsuranceBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalRecords.getTypicalRecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"public class ListInsuranceCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    private Model model;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInsuranceBook(),","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"                getTypicalAppointmentBook(), getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(new ListInsuranceCommand(), model, ListInsuranceCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        showInsuranceAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(new ListInsuranceCommand(), model, ListInsuranceCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jessicajacelyn":38,"zzkzzzz":5}},{"path":"src/test/java/seedu/address/logic/commands/ListPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"public class ListPersonCommandTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":34,"zzkzzzz":5}},{"path":"src/test/java/seedu/address/logic/commands/ListRecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showRecordAtIndex;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalInsurances.getTypicalInsuranceBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"import static seedu.address.testutil.TypicalRecords.getTypicalRecordBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"public class ListRecordCommandTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    private Model model;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInsuranceBook(),","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"                getTypicalAppointmentBook(), getTypicalRecordBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(new ListRecordCommand(), model, ListRecordCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"        showRecordAtIndex(model, INDEX_FIRST_OBJECT);","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"        assertCommandSuccess(new ListRecordCommand(), model, ListRecordCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"jessicajacelyn":43}},{"path":"src/test/java/seedu/address/logic/commands/SortAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"public class SortAppointmentCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"        String firstSortOption \u003d \"firstOption\";","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"        String secondSortOption \u003d \"secondOption\";","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"        SortAppointmentCommand firstSortAppointmentCommand \u003d new SortAppointmentCommand(firstSortOption);","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"        SortAppointmentCommand secondSortAppointmentCommand \u003d new SortAppointmentCommand(secondSortOption);","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"        assertTrue(firstSortAppointmentCommand.equals(firstSortAppointmentCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        SortAppointmentCommand firstSortAppointmentCommandCopy \u003d new SortAppointmentCommand(firstSortOption);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        assertTrue(firstSortAppointmentCommand.equals(firstSortAppointmentCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        assertFalse(firstSortAppointmentCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        assertFalse(firstSortAppointmentCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        assertFalse(firstSortAppointmentCommand.equals(secondSortAppointmentCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"yunbinmo":33}},{"path":"src/test/java/seedu/address/logic/commands/SortRecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"public class SortRecordCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"        String firstSortOption \u003d \"firstOption\";","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"        String secondSortOption \u003d \"secondOption\";","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"        SortRecordCommand firstSortRecordCommand \u003d new SortRecordCommand(firstSortOption);","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"        SortRecordCommand secondSortRecordCommand \u003d new SortRecordCommand(secondSortOption);","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"        assertTrue(firstSortRecordCommand.equals(firstSortRecordCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        SortRecordCommand firstSortRecordCommandCopy \u003d new SortRecordCommand(firstSortOption);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        assertTrue(firstSortRecordCommand.equals(firstSortRecordCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        assertFalse(firstSortRecordCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        assertFalse(firstSortRecordCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        assertFalse(firstSortRecordCommand.equals(secondSortRecordCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"yunbinmo":33}},{"path":"src/test/java/seedu/address/logic/parser/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATETIME_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATETIME_APPOINTMENT2;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT2;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATETIME_APPOINTMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESC_APPOINTMENT;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalAppointments.APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"public class AddAppointmentCommandParserTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    private AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        Appointment expectedAppointment \u003d new AppointmentBuilder(APPOINTMENT1).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + DESC_APPOINTMENT1 + DATETIME_APPOINTMENT1,","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"                new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        // multiple description - last description accepted","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"                DESC_APPOINTMENT2 + DESC_APPOINTMENT1 + DATETIME_APPOINTMENT1,","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"                new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        // multiple datetime - last datetime accepted","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, DESC_APPOINTMENT1 + DATETIME_APPOINTMENT2 + DATETIME_APPOINTMENT1,","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"                new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        // missing description","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, DATETIME_APPOINTMENT1, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        // missing datetime","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, DESC_APPOINTMENT1, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"        // invalid datetime","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, DESC_APPOINTMENT1 + INVALID_DATETIME_APPOINTMENT,","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"                DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"        // invalid description","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, INVALID_DESC_APPOINTMENT + DATETIME_APPOINTMENT1,","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"                Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"yunbinmo":62}},{"path":"src/test/java/seedu/address/logic/parser/AddInsuranceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRICE_INSURANCE;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE_INSURANCE;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_INSURANCE2;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_INSURANCE2;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalInsurances.INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.AddInsuranceCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.insurance.Price;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.insurance.Title;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.testutil.InsuranceBuilder;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"public class AddInsuranceCommandParserTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    private AddInsuranceCommandParser parser \u003d new AddInsuranceCommandParser();","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        Insurance expectedInsurance \u003d new InsuranceBuilder(INSURANCE1).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TITLE_INSURANCE1 + PRICE_INSURANCE1,","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"                new AddInsuranceCommand(expectedInsurance));","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"        // multiple title - last title accepted","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"                TITLE_INSURANCE2 + TITLE_INSURANCE1 + PRICE_INSURANCE1,","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"                new AddInsuranceCommand(expectedInsurance));","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        // multiple price - last price accepted","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, TITLE_INSURANCE1 + PRICE_INSURANCE2 + PRICE_INSURANCE1,","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"                new AddInsuranceCommand(expectedInsurance));","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInsuranceCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        // missing title","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, PRICE_INSURANCE1, expectedMessage);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        // missing price","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, TITLE_INSURANCE1, expectedMessage);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"        // invalid title","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, INVALID_TITLE_INSURANCE + PRICE_INSURANCE1,","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"                Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"        // invalid price","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, TITLE_INSURANCE1 + INVALID_PRICE_INSURANCE,","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"                Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"yunbinmo":62}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":129,"zzkzzzz":12}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(null, PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(parser.parseCommand(null, ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(null,","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + Command.COMMAND_PERSON","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"                        + \" \" + INDEX_FIRST_OBJECT.getOneBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_OBJECT), command);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"        EditPersonCommand command \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"                (EditPersonCommand) parser.parseCommand(null, EditPersonCommand.COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"                        + \" \" + Command.COMMAND_PERSON + \" \"","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"                        + INDEX_FIRST_OBJECT.getOneBased() + \" \"","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"                        + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_OBJECT, descriptor), command);","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(parser.parseCommand(null, ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) parser.parseCommand(null,","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"                FindPersonCommand.COMMAND_WORD + \" \" + Command.COMMAND_PERSON + \" \"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(new FindPersonCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(parser.parseCommand(null, HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(parser.parseCommand(null, ListPersonCommand.COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"yunbinmo"},"content":"                + \" \" + Command.COMMAND_PERSON) instanceof ListPersonCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"            -\u003e parser.parseCommand(null, \"\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(null, \"unknownCommand\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yunbinmo":8,"-":73,"zzkzzzz":23}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"public class DeleteAppointmentCommandParserTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"    private DeleteAppointmentCommandParser parser \u003d new DeleteAppointmentCommandParser();","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, \"1\", new DeleteAppointmentCommand(INDEX_FIRST_OBJECT));","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"yunbinmo":25}},{"path":"src/test/java/seedu/address/logic/parser/DeleteInsuranceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.DeleteInsuranceCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"public class DeleteInsuranceCommandParserTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"    private DeleteInsuranceCommandParser parser \u003d new DeleteInsuranceCommandParser();","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, \"1\", new DeleteInsuranceCommand(INDEX_FIRST_OBJECT));","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"                DeleteInsuranceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"yunbinmo":25}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_OBJECT));","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"                DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"yunbinmo":2,"-":26,"zzkzzzz":5}},{"path":"src/test/java/seedu/address/logic/parser/EditAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATETIME_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATETIME_APPOINTMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESC_APPOINTMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESC_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"public class EditAppointmentCommandParserTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"    private EditAppointmentCommandParser parser \u003d new EditAppointmentCommandParser();","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"        // no index specified","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, VALID_DATETIME_APPOINTMENT1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"        // no field specified","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1\", EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"        // no index and no field specified","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        // negative index","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"-5\" + VALID_DATETIME_APPOINTMENT1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        // zero index","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"0\" + VALID_DATETIME_APPOINTMENT1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATETIME_APPOINTMENT,","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"                DateTime.MESSAGE_CONSTRAINTS); // invalid datetime","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESC_APPOINTMENT,","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"                Description.MESSAGE_CONSTRAINTS); // invalid description","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"        Index targetIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESC_APPOINTMENT1 + DATETIME_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentDescriptor descriptor \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"                new EditAppointmentDescriptorBuilder().withDescription(VALID_DESC_APPOINTMENT1)","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"                .withDateTime(VALID_DATETIME_APPOINTMENT1).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"    public void parse_oneFieldsSpecified_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"        // Description","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"        Index targetIndex \u003d INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"yunbinmo"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESC_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentDescriptor descriptor \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"yunbinmo"},"content":"                new EditAppointmentDescriptorBuilder().withDescription(VALID_DESC_APPOINTMENT1).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"yunbinmo"},"content":"        // Datetime","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"yunbinmo"},"content":"        userInput \u003d targetIndex.getOneBased() + DATETIME_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"yunbinmo"},"content":"        descriptor \u003d new EditAppointmentDescriptorBuilder().withDateTime(VALID_DATETIME_APPOINTMENT1).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"yunbinmo"},"content":"        expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"yunbinmo"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"yunbinmo"},"content":"        Index targetIndex \u003d INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"yunbinmo"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESC_APPOINTMENT1 + DATETIME_APPOINTMENT1 + DESC_APPOINTMENT1","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"yunbinmo"},"content":"                + DATETIME_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentDescriptor descriptor \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"yunbinmo"},"content":"                new EditAppointmentDescriptorBuilder().withDescription(VALID_DESC_APPOINTMENT1)","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"yunbinmo"},"content":"                .withDateTime(VALID_DATETIME_APPOINTMENT1).withDescription(VALID_DESC_APPOINTMENT1)","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"yunbinmo"},"content":"                        .withDateTime(VALID_DATETIME_APPOINTMENT1).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"yunbinmo"},"content":"        // no other valid values specified","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"yunbinmo"},"content":"        Index targetIndex \u003d INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"yunbinmo"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DESC_APPOINTMENT + DESC_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentDescriptor descriptor \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"yunbinmo"},"content":"                new EditAppointmentDescriptorBuilder().withDescription(VALID_DESC_APPOINTMENT1).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"yunbinmo"},"content":"        EditAppointmentCommand expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"yunbinmo"},"content":"        // other valid values specified","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"yunbinmo"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_DESC_APPOINTMENT + DATETIME_APPOINTMENT1 + DESC_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"yunbinmo"},"content":"        descriptor \u003d new EditAppointmentDescriptorBuilder().withDescription(VALID_DESC_APPOINTMENT1)","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"yunbinmo"},"content":"                .withDateTime(VALID_DATETIME_APPOINTMENT1).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"yunbinmo"},"content":"        expectedCommand \u003d new EditAppointmentCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"yunbinmo":130}},{"path":"src/test/java/seedu/address/logic/parser/EditInsuranceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRICE_INSURANCE;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE_INSURANCE;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_INSURANCE2;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_INSURANCE2;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_INSURANCE2;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_INSURANCE2;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.EditInsuranceCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.EditInsuranceCommand.EditInsuranceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.insurance.Price;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.insurance.Title;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.testutil.EditInsuranceDescriptorBuilder;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"public class EditInsuranceCommandParserTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditInsuranceCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"    private EditInsuranceCommandParser parser \u003d new EditInsuranceCommandParser();","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"        // no index specified","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, VALID_TITLE_INSURANCE1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        // no field specified","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1\", EditInsuranceCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"        // no index and no field specified","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"        // negative index","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"-5\" + VALID_TITLE_INSURANCE1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        // zero index","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"0\" + VALID_TITLE_INSURANCE1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PRICE_INSURANCE,","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"                Price.MESSAGE_CONSTRAINTS); // invalid datetime","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_INSURANCE,","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"                Title.MESSAGE_CONSTRAINTS); // invalid description","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"        Index targetIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"        String userInput \u003d targetIndex.getOneBased() + TITLE_INSURANCE1 + PRICE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"        EditInsuranceDescriptor descriptor \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"                new EditInsuranceDescriptorBuilder().withTitle(VALID_TITLE_INSURANCE1)","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"                        .withPrice(VALID_PRICE_INSURANCE1).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"        EditInsuranceCommand expectedCommand \u003d new EditInsuranceCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"yunbinmo"},"content":"    public void parse_oneFieldsSpecified_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"yunbinmo"},"content":"        // Title","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"yunbinmo"},"content":"        Index targetIndex \u003d INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"yunbinmo"},"content":"        String userInput \u003d targetIndex.getOneBased() + TITLE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"yunbinmo"},"content":"        EditInsuranceDescriptor descriptor \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"                new EditInsuranceDescriptorBuilder().withTitle(VALID_TITLE_INSURANCE1).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"yunbinmo"},"content":"        EditInsuranceCommand expectedCommand \u003d new EditInsuranceCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"yunbinmo"},"content":"        // Price","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"        userInput \u003d targetIndex.getOneBased() + PRICE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"yunbinmo"},"content":"        descriptor \u003d new EditInsuranceDescriptorBuilder().withPrice(VALID_PRICE_INSURANCE1).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"yunbinmo"},"content":"        expectedCommand \u003d new EditInsuranceCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"yunbinmo"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"yunbinmo"},"content":"        Index targetIndex \u003d INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"yunbinmo"},"content":"        String userInput \u003d targetIndex.getOneBased() + TITLE_INSURANCE1 + TITLE_INSURANCE2 + PRICE_INSURANCE1","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"yunbinmo"},"content":"                + PRICE_INSURANCE2;","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"yunbinmo"},"content":"        EditInsuranceDescriptor descriptor \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"yunbinmo"},"content":"                new EditInsuranceDescriptorBuilder().withTitle(VALID_TITLE_INSURANCE1)","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"yunbinmo"},"content":"                        .withTitle(VALID_TITLE_INSURANCE2).withPrice(VALID_PRICE_INSURANCE1)","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"yunbinmo"},"content":"                        .withPrice(VALID_PRICE_INSURANCE2).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"yunbinmo"},"content":"        EditInsuranceCommand expectedCommand \u003d new EditInsuranceCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"yunbinmo"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"yunbinmo"},"content":"        // no other valid values specified","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"yunbinmo"},"content":"        Index targetIndex \u003d INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"yunbinmo"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_TITLE_INSURANCE + TITLE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"yunbinmo"},"content":"        EditInsuranceDescriptor descriptor \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"yunbinmo"},"content":"                new EditInsuranceDescriptorBuilder().withTitle(VALID_TITLE_INSURANCE1).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"yunbinmo"},"content":"        EditInsuranceCommand expectedCommand \u003d new EditInsuranceCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"yunbinmo"},"content":"        // other valid values specified","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"yunbinmo"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_TITLE_INSURANCE + TITLE_INSURANCE1 + PRICE_INSURANCE1;","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"yunbinmo"},"content":"        descriptor \u003d new EditInsuranceDescriptorBuilder().withTitle(VALID_TITLE_INSURANCE1)","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"yunbinmo"},"content":"                .withPrice(VALID_PRICE_INSURANCE1).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"yunbinmo"},"content":"        expectedCommand \u003d new EditInsuranceCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"yunbinmo":134}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"        Index targetIndex \u003d INDEX_SECOND_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"        Index targetIndex \u003d INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"        Index targetIndex \u003d INDEX_THIRD_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"        Index targetIndex \u003d INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"zzkzzzz"},"content":"        Index targetIndex \u003d INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"zzkzzzz"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"zzkzzzz"},"content":"        Index targetIndex \u003d INDEX_THIRD_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"zzkzzzz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-02-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":185,"zzkzzzz":26}},{"path":"src/test/java/seedu/address/logic/parser/FindAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"public class FindAppointmentCommandParserTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    private FindAppointmentCommandParser parser \u003d new FindAppointmentCommandParser();","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"                FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        FindAppointmentCommand expectedFindAppointmentCommand \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"                new FindAppointmentCommand(new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Meet\", \"UTown\")));","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, \"Meet UTown\", expectedFindAppointmentCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, \" \\n Meet \\n \\t UTown  \\t\", expectedFindAppointmentCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"yunbinmo":32}},{"path":"src/test/java/seedu/address/logic/parser/FindInsuranceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.logic.commands.FindInsuranceCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.insurance.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"public class FindInsuranceCommandParserTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    private FindInsuranceCommandParser parser \u003d new FindInsuranceCommandParser();","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"                FindInsuranceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        FindInsuranceCommand expectedFindInsuranceCommand \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"                new FindInsuranceCommand(new TitleContainsKeywordsPredicate(Arrays.asList(\"Personal\", \"Accident\")));","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, \"Personal Accident\", expectedFindInsuranceCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        assertParseSuccess(parser, \" \\n Personal \\n \\t Accident  \\t\", expectedFindInsuranceCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"yunbinmo":32}},{"path":"src/test/java/seedu/address/logic/parser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"                FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        FindPersonCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"                new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindPersonCommand);","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindPersonCommand);","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"yunbinmo":2,"-":26,"zzkzzzz":7}},{"path":"src/test/java/seedu/address/logic/parser/PersonParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.logic.parser.PersonParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_OBJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"public class PersonParserUtilTest {","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(ParseException.class, () -\u003e PersonParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            -\u003e PersonParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(INDEX_FIRST_OBJECT, PersonParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(INDEX_FIRST_OBJECT, PersonParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e PersonParserUtil.parseName((String) null));","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(ParseException.class, () -\u003e PersonParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedName, PersonParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedName, PersonParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e PersonParserUtil.parsePhone((String) null));","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(ParseException.class, () -\u003e PersonParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedPhone, PersonParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedPhone, PersonParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e PersonParserUtil.parseAddress((String) null));","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(ParseException.class, () -\u003e PersonParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedAddress, PersonParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedAddress, PersonParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2022-02-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e PersonParserUtil.parseEmail((String) null));","lastModifiedDate":"2022-02-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(ParseException.class, () -\u003e PersonParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-02-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedEmail, PersonParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedEmail, PersonParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-02-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e PersonParserUtil.parseTag(null));","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(ParseException.class, () -\u003e PersonParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedTag, PersonParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expectedTag, PersonParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-02-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e PersonParserUtil.parseTags(null));","lastModifiedDate":"2022-02-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(ParseException.class, () -\u003e PersonParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-02-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(PersonParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-02-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"zzkzzzz"},"content":"        Set\u003cTag\u003e actualTagSet \u003d PersonParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-02-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":165,"zzkzzzz":31}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        );","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":109,"zzkzzzz":2}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"seksek13"},"content":"        JsonInsuranceBookStorage insuranceBookStorage \u003d new JsonInsuranceBookStorage(getTempFilePath(\"ib\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"                new JsonAppointmentBookStorage(getTempFilePath(\"aptb\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"seksek13"},"content":"        JsonRecordBookStorage recordBookStorage \u003d new JsonRecordBookStorage(getTempFilePath(\"rb\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, insuranceBookStorage, appointmentBookStorage,","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"                recordBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seksek13":2,"yunbinmo":4,"-":67}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Meet James at UTown\";","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    public static final String DEFAULT_DATETIME \u003d \"08-08-2022 19:00\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    private Description description;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    private DateTime dateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"     * Creates a {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        dateTime \u003d new DateTime(DEFAULT_DATETIME);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"        description \u003d appointmentToCopy.getDescription();","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        dateTime \u003d appointmentToCopy.getDateTime();","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"     * Sets the {@code Description} of the {@code Appointment} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"    public AppointmentBuilder withDescription(String description) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"     * Sets the {@code DateTime} of the {@code Appointment} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"    public AppointmentBuilder withDateTime(String dateTime) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"    public Appointment build() {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"        return new Appointment(description, dateTime);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"yunbinmo":42,"jessicajacelyn":8}},{"path":"src/test/java/seedu/address/testutil/EditAppointmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.DateTime;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":" * A utility class to help with building EditAppointmentDescriptor objects.","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"public class EditAppointmentDescriptorBuilder {","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"    private EditAppointmentDescriptor descriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    public EditAppointmentDescriptorBuilder() {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    public EditAppointmentDescriptorBuilder(EditAppointmentDescriptor descriptor) {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"        this.descriptor \u003d new EditAppointmentDescriptor(descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an {@code EditAppointmentDescriptor} with fields containing {@code appointment}\u0027s details","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    public EditAppointmentDescriptorBuilder(Appointment appointment) {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor.setDescription(appointment.getDescription());","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor.setDateTime(appointment.getDateTime());","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"     * Sets the {@code Description} of the {@code EditAppointmentDescriptor} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"    public EditAppointmentDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"     * Sets the {@code DateTime} of the {@code EditAppointmentDescriptor} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    public EditAppointmentDescriptorBuilder withDateTime(String dateTime) {","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor.setDateTime(new DateTime(dateTime));","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"    public EditAppointmentDescriptor build() {","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        return descriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"jessicajacelyn":51}},{"path":"src/test/java/seedu/address/testutil/EditInsuranceDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.logic.commands.EditInsuranceCommand.EditInsuranceDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.Price;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.insurance.Title;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":"public class EditInsuranceDescriptorBuilder {","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"    private EditInsuranceDescriptor descriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    public EditInsuranceDescriptorBuilder() {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor \u003d new EditInsuranceDescriptor();","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    public EditInsuranceDescriptorBuilder(EditInsuranceDescriptor descriptor) {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"        this.descriptor \u003d new EditInsuranceDescriptor(descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an {@code EditInsuranceDescriptor} with fields containing {@code insurance}\u0027s details","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    public EditInsuranceDescriptorBuilder(Insurance insurance) {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor \u003d new EditInsuranceDescriptor();","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor.setTitle(insurance.getTitle());","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor.setPrice(insurance.getPrice());","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"     * Sets the {@code Title} of the {@code EditInsuranceDescriptor} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"    public EditInsuranceDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"     * Sets the {@code Price} of the {@code EditInsuranceDescriptor} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"    public EditInsuranceDescriptorBuilder withPrice(String price) {","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"        descriptor.setPrice((new Price(price)));","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"    public EditInsuranceDescriptor build() {","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"        return descriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"jessicajacelyn":51}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":86,"zzkzzzz":1}},{"path":"src/test/java/seedu/address/testutil/InsuranceBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.InsuranceBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Price;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Title;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" * A utility class to help with building Insurancebook objects.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":" * {@code InsuranceBook ab \u003d new InsuranceBookBuilder().withInsurance(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"public class InsuranceBuilder {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Health\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    public static final String DEFAULT_DATETIME \u003d \"123\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    private Title title;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    private Price price;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    private InsuranceBook insurance;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     * Creates a {@code InsuranceBuilder} with the default details.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceBuilder() {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        title \u003d new Title(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        price \u003d new Price(DEFAULT_DATETIME);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceBuilder(InsuranceBook insurance) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        this.insurance \u003d insurance;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"     * Initializes the InsuranceBuilder with the data of {@code insuranceToCopy}.","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    public InsuranceBuilder(Insurance insuranceToCopy) {","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"        title \u003d insuranceToCopy.getTitle();","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"        price \u003d insuranceToCopy.getPrice();","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     * Sets the {@code Title} of the {@code Insurance} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceBuilder withTitle(String title) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"     * Sets the {@code Price} of the {@code Insurance} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"    public InsuranceBuilder withPrice(String price) {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        this.price \u003d new Price(price);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    public Insurance build() {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        return new Insurance(title, price);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"jessicajacelyn":8,"zzkzzzz":53}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        return AddPersonCommand.COMMAND_WORD + \" -c \" + getPersonDetails(person);","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yunbinmo":1,"-":59,"zzkzzzz":2}},{"path":"src/test/java/seedu/address/testutil/RecordBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.ClientID;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.EndDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.InsuranceID;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.StartDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":" * A utility class to help with building Record objects.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":"public class RecordBuilder {","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String DEFAULT_CLIENT_ID \u003d \"1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String DEFAULT_INSURANCE_ID \u003d \"1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String DEFAULT_STARTDATE \u003d \"06-12-2000\";","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jessicajacelyn"},"content":"    public static final String DEFAULT_ENDDATE \u003d \"06-12-2075\";","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"    private ClientID clientID;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"jessicajacelyn"},"content":"    private InsuranceID insuranceID;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"    private StartDate startDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"    private EndDate endDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"     * Creates a {@code RecordBuilder} with the default details.","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"    public RecordBuilder() {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"        clientID \u003d new ClientID(DEFAULT_CLIENT_ID);","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"        insuranceID \u003d new InsuranceID(DEFAULT_INSURANCE_ID);","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"        startDate \u003d new StartDate(DEFAULT_STARTDATE);","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"        endDate \u003d new EndDate(DEFAULT_ENDDATE);","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"     * Sets the {@code ClientID} of the {@code Record} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    public RecordBuilder withClientID(String clientID) {","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"        this.clientID \u003d new ClientID(clientID);","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"jessicajacelyn"},"content":"     * Sets the {@code InsuranceID} of the {@code Record} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"jessicajacelyn"},"content":"    public RecordBuilder withInsuranceID(String insuranceID) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"jessicajacelyn"},"content":"        this.insuranceID \u003d new InsuranceID(insuranceID);","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"jessicajacelyn"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jessicajacelyn"},"content":"     * Sets the {@code StartDate} of the {@code Record} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"jessicajacelyn"},"content":"    public RecordBuilder withStartDate(String startDate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"jessicajacelyn"},"content":"        this.startDate \u003d new StartDate(startDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"jessicajacelyn"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"jessicajacelyn"},"content":"     * Sets the {@code EndDate} of the {@code Record} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"jessicajacelyn"},"content":"    public RecordBuilder withEndDate(String endDate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"jessicajacelyn"},"content":"        this.endDate \u003d new EndDate(endDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"jessicajacelyn"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"jessicajacelyn"},"content":"    public Record build() {","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"jessicajacelyn"},"content":"        return new Record(clientID, insuranceID, startDate, endDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"jessicajacelyn":69}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_APPOINTMENT2;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATETIME_APPOINTMENT3;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESC_APPOINTMENT1;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESC_APPOINTMENT2;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESC_APPOINTMENT3;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"public class TypicalAppointments {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    public static final Appointment APPOINTMENT1 \u003d new AppointmentBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"            .withDescription(VALID_DESC_APPOINTMENT1)","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"            .withDateTime(VALID_DATETIME_APPOINTMENT1).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"    public static final Appointment APPOINTMENT2 \u003d new AppointmentBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"            .withDescription(VALID_DESC_APPOINTMENT2)","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"            .withDateTime(VALID_DATETIME_APPOINTMENT2).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    public static final Appointment APPOINTMENT3 \u003d new AppointmentBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"            .withDescription(VALID_DESC_APPOINTMENT3)","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"            .withDateTime(VALID_DATETIME_APPOINTMENT3).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"    private TypicalAppointments() {} // prevents instantiation","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an {@code AppointmentBook} with all the typical appointments.","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    public static AppointmentBook getTypicalAppointmentBook() {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"        AppointmentBook ab \u003d new AppointmentBook();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"        return ab;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPOINTMENT1, APPOINTMENT2, APPOINTMENT3));","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"yunbinmo":48,"jessicajacelyn":1}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    public static final Index INDEX_FIRST_OBJECT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    public static final Index INDEX_SECOND_OBJECT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    public static final Index INDEX_THIRD_OBJECT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":9,"zzkzzzz":3}},{"path":"src/test/java/seedu/address/testutil/TypicalInsurances.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.InsuranceBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":" * A utility class containing a list of {@code Insurance} objects to be used in tests.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"public class TypicalInsurances {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public static final Insurance INSURANCE1 \u003d new InsuranceBuilder()","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"            .withTitle(\"Health\")","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"            .withPrice(\"123\").build();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public static final Insurance INSURANCE2 \u003d new InsuranceBuilder()","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"            .withTitle(\"Car\")","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"            .withPrice(\"111\").build();","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public static final Insurance INSURANCE3 \u003d new InsuranceBuilder()","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            .withTitle(\"House\")","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"            .withPrice(\"222\").build();","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    private TypicalInsurances() {} // prevents instantiation","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an {@code InsuranceBook} with all the typical insurances.","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    public static InsuranceBook getTypicalInsuranceBook() {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"        InsuranceBook ib \u003d new InsuranceBook();","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"        for (Insurance insurance : getTypicalInsurances()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"            ib.addInsurance(insurance);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        return ib;","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    public static List\u003cInsurance\u003e getTypicalInsurances() {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(INSURANCE1, INSURANCE2, INSURANCE3));","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"jessicajacelyn":5,"zzkzzzz":37}},{"path":"src/test/java/seedu/address/testutil/TypicalRecords.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jessicajacelyn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"jessicajacelyn"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.RecordBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jessicajacelyn"},"content":"import seedu.address.model.record.Record;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"jessicajacelyn"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jessicajacelyn"},"content":" * A utility class containing a list of {@code Record} objects to be used in tests.","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jessicajacelyn"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"jessicajacelyn"},"content":"public class TypicalRecords {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"jessicajacelyn"},"content":"    public static final Record RECORD1 \u003d new RecordBuilder()","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jessicajacelyn"},"content":"            .withClientID(\"1\")","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"            .withInsuranceID(\"1\").withStartDate(\"12-12-2021\").withEndDate(\"12-12-2029\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"jessicajacelyn"},"content":"    public static final Record RECORD2 \u003d new RecordBuilder()","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jessicajacelyn"},"content":"            .withClientID(\"2\")","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"            .withInsuranceID(\"2\").withStartDate(\"03-12-2021\").withEndDate(\"03-12-2029\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jessicajacelyn"},"content":"    public static final Record RECORD3 \u003d new RecordBuilder()","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"jessicajacelyn"},"content":"            .withClientID(\"3\")","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"            .withInsuranceID(\"3\").withStartDate(\"01-12-2021\").withEndDate(\"01-12-2029\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"jessicajacelyn"},"content":"    private TypicalRecords() {} // prevents instantiation","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jessicajacelyn"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jessicajacelyn"},"content":"     * Returns an {@code RecordBook} with all the typical records.","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jessicajacelyn"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jessicajacelyn"},"content":"    public static RecordBook getTypicalRecordBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"jessicajacelyn"},"content":"        RecordBook rb \u003d new RecordBook();","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"jessicajacelyn"},"content":"        for (Record record : getTypicalRecords()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jessicajacelyn"},"content":"            rb.addRecord(record);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"jessicajacelyn"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jessicajacelyn"},"content":"        return rb;","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"jessicajacelyn"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"jessicajacelyn"},"content":"    public static List\u003cRecord\u003e getTypicalRecords() {","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jessicajacelyn"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(RECORD1, RECORD2, RECORD3));","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"jessicajacelyn"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"jessicajacelyn"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"yunbinmo":3,"jessicajacelyn":39}}]
