[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"# HackNet","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W13-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-W13-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"## Introduction","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"**HackNet** is a desktop application that helps users manage details of potential teammates for technical projects. It is designed to be used via a Command Line Interface (CLI) which takes in text commands.","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"## Quickstart","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"To try out **HackNet**, check out the instructions at our [User Guide](https://ay2122s2-cs2103t-w13-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"## For developers","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"To take a deeper look at our design architecture and implementation logic, check out our [Developer Guide](https://ay2122s2-cs2103t-w13-3.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"## Acknowledgements","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"Jiaaa-yang":18,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"run {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"Jiaaa-yang":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"### Toh Zhan Qing","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"\u003cimg src\u003d\"images/tzhan98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"[[github](http://github.com/tzhan98)][[portfolio](team/tzhan98.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"### Alex Teo","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"\u003cimg src\u003d\"images/alexteo98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"[[github](http://github.com/alexteo98)][[portfolio](team/alexteo98.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"### Lye Jia Yang","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"\u003cimg src\u003d\"images/jiaaa-yang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"[[github](http://github.com/jiaaa-yang)][[portfolio](team/jiaaa-yang.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"### Melvin Chan Zijun","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"\u003cimg src\u003d\"images/melvinczj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"[[github](https://https://github.com/MelvinCZJ)][[portfolio](team/melvinczj.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"* Responsibilities: Functionality","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"### Junha Park","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"\u003cimg src\u003d\"images/b1llp4rk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"[[github](http://github.com/B1LLP4RK)]","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"[[portfolio](team/b1llp4rk.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"alexteo98":3,"tzhan98":3,"B1LLP4RK":4,"-":37,"Jiaaa-yang":4,"MelvinCZJ":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"tzhan98"},"content":"### SkillSet class","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"tzhan98"},"content":"The \u0027SkillSet\u0027 class,","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"tzhan98"},"content":"* stores a Set of `Skill`","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"tzhan98"},"content":"* is used to manipulate `Skill` objects","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"tzhan98"},"content":"### Skill class","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"tzhan98"},"content":"The `Skill` class,","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"tzhan98"},"content":"* can store an alphanumeric skill name value and an integer ranging from 0 to 100 for skill proficiency value","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"tzhan98"},"content":"* is a field of the `Person` class","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"tzhan98"},"content":"* is used for sorting by `Skill` proficiency level","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"tzhan98"},"content":"![skillClassDiagram](images/SkillDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"tzhan98"},"content":"Given below is an example of how `SkillSet` interacts with the `Skill` class when the `Person` class calls the method","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"tzhan98"},"content":"`getSkillProficency(Skill)`","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"tzhan98"},"content":"![skillSequenceDiagram](images/SkillSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Jiaaa-yang"},"content":"### Team forming feature","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"Jiaaa-yang"},"content":"#### Implementation","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"Jiaaa-yang"},"content":"`MakeTeamCommand` which supports this feature is a command which is responsible for two distinct command words: `team` and `unteam`.","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"Jiaaa-yang"},"content":"With most commands implemented in **HackNet** being responsible for one and only one command word, the `MakeTeamCommand` is an exception due to the similarity between the 2 actions.","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"Jiaaa-yang"},"content":"![MakeTeamCommand](images/MakeTeamCommandClassDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"Jiaaa-yang"},"content":"We have decided that it is preferable to use an enumeration to distinguish the two actions the command can perform, rather than having 2 distinct classes, due to their overlapping implementations.","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"Jiaaa-yang"},"content":"It is recommended that such a design is used for two commands with similar implementations that perform opposite actions.","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"Jiaaa-yang"},"content":"#### Execution","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"Jiaaa-yang"},"content":"Below is a sequence diagram showing the execution path for this command","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"Jiaaa-yang"},"content":"![MakeTeamCommand](images/MakeTeamSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"Jiaaa-yang"},"content":"By making use of the enumeration `TeamAction`, this command decides its execution path to either add or remove someone from the list of potential teammates.","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"Jiaaa-yang"},"content":"Similar logic required by the command after (e.g. `model#setPerson`) regardless of the path taken will hence have a single implementation, reducing the risks of have 2 out-of-sync commands.","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"alexteo98"},"content":"### Filtering feature","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"alexteo98"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"alexteo98"},"content":"`FilterSkillCommand` is a command which is responsible for one command word: `filter`.","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"alexteo98"},"content":"This command is used to display a list of people who has the skill specified in the command argument.","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"alexteo98"},"content":"![FilterSkillCommand](images/FilterSkillCommandClassDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"alexteo98"},"content":"#### Execution","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"alexteo98"},"content":"Below is a sequence diagram showing the execution path when this command is entered. ","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"alexteo98"},"content":"![FilterSkillCommand](images/FilterSkillSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"B1LLP4RK"},"content":"* NUS Computing student looking for teammates to do team projects with","lastModifiedDate":"2022-03-01"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"B1LLP4RK"},"content":"**Value proposition**: Provide ability for users to sort contacts by technical skills and find teammates with specific technical skills.","lastModifiedDate":"2022-03-01"},{"lineNumber":322,"author":{"gitId":"B1LLP4RK"},"content":"Hacknet functions as an addressbook to store all relevant details of potential teammates, as well as all the relevant information required to search and filter to form teams for the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"B1LLP4RK"},"content":"Priorities: High (must have) - A, Medium (nice to have) - B, Low (unlikely to have) - C","lastModifiedDate":"2022-03-01"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"| Priority | As a …​                                             | I want to …​                                                          | So that I can…​                                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"Jiaaa-yang"},"content":"|----------|-----------------------------------------------------|-----------------------------------------------------------------------|---------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-22"},{"lineNumber":331,"author":{"gitId":"B1LLP4RK"},"content":"| A        | Beginner user                                       | Save contacts even after HackNet is closed                            | Access those contacts again without having to keep HackNet running the whole time     |","lastModifiedDate":"2022-03-01"},{"lineNumber":332,"author":{"gitId":"B1LLP4RK"},"content":"| A        | User familiar with CLI                              | Make use of HackNet through the use of CLI                            | I do not have to take a long time getting used to HackNet                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":333,"author":{"gitId":"B1LLP4RK"},"content":"| A        | Beginner user                                       | Manually add a new contact                                            | I am able to have his details                                                         |","lastModifiedDate":"2022-03-01"},{"lineNumber":334,"author":{"gitId":"B1LLP4RK"},"content":"| A        | Beginner user                                       | Delete a contact                                                      | Remove a contact from my address book                                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":335,"author":{"gitId":"B1LLP4RK"},"content":"| A        | Beginner user                                       | I can view my added contacts                                          | So that I can see the contacts I have saved                                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":336,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Sort my contacts by relevant details                                  | I can find potential teammates faster                                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":337,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | create my custom teams to label teammates by                          | I can search for relevant teammates faster                                            |","lastModifiedDate":"2022-03-15"},{"lineNumber":338,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Look at the github profile of a potential teammate                    | I can further scrutinize the person’s past experience/project                         |","lastModifiedDate":"2022-03-01"},{"lineNumber":339,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Filter out people based on certain skills i.e. proficient in java     | I can easily look for the teammate that complements my skill                          |","lastModifiedDate":"2022-03-01"},{"lineNumber":340,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Add people into my ‘basket’.                                          | I can simulate possible team-ups for the project                                      |","lastModifiedDate":"2022-03-01"},{"lineNumber":341,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Potential user                                      | Get help on the features available                                    | I can try those features out                                                          |","lastModifiedDate":"2022-03-01"},{"lineNumber":342,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Share my profile with others                                          | Other people will be able contact me if they think that i fit their team              |","lastModifiedDate":"2022-03-01"},{"lineNumber":343,"author":{"gitId":"B1LLP4RK"},"content":"| B        | New user urgently searching for project members     | Download HackNet and share contacts with an avid user                 | I can have a large selection of project members to choose from                        |","lastModifiedDate":"2022-03-01"},{"lineNumber":344,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Users who prefer typing to mouse interaction        | Use HackNet with minimal mouse interaction                            | User HackNet to add contacts faster                                                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":345,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Create my profile and populate it with my details                     | I can share it with others                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":346,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Beginner user                                       | Undo my last command                                                  | I can rectify my mistakes                                                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":347,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Someone who wants to upskill in a less focused area | Check my contacts and see which skills are not well focused on        | I can know which skill are less popular                                               |","lastModifiedDate":"2022-03-01"},{"lineNumber":348,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Visual person                                       | Use different colors to differentiate my contacts by technical skills | I can classify my contacts at a glance                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":349,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Tweak settings such as shortcuts and preferences                      | I can be more productive with HackNet                                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":350,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Person with a friend also using HackNet             | Add him to my team and share contacts                                 | We can share contacts with a team                                                     |","lastModifiedDate":"2022-03-01"},{"lineNumber":351,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Use batch actions                                                     | Add teams to multiple people in a single action                                       |","lastModifiedDate":"2022-03-15"},{"lineNumber":352,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | View past teammates                                                   | Keep track of who i worked with before                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":353,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Request/suggest a feature to the developer                            | Future experience with the app gets faster and more user friendly                     |","lastModifiedDate":"2022-03-01"},{"lineNumber":354,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Choose specific formats to display info in                            | Formats are more natural(date formats and name formats etc)                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":355,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Enter multiple commands at one time                                   | I can perform tedious tasks more quickly                                              |","lastModifiedDate":"2022-03-01"},{"lineNumber":356,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Beginner user                                       | Follow a interactive tutorial                                         | Get to know the basic features without looking at the documentation                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":357,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Export a save data of the contacts                                    | To work with the same data in a different/new pc                                      |","lastModifiedDate":"2022-03-01"},{"lineNumber":358,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Users who can type fast                             | Enter commands quickly on HackNet                                     | Navigate through HackNet faster                                                       |","lastModifiedDate":"2022-03-01"},{"lineNumber":359,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Users with need to manage large number of contacts  | Manage large number of contacts effortlessly                          | Search for contacts through the use of different search options easily / add contacts |","lastModifiedDate":"2022-03-01"},{"lineNumber":360,"author":{"gitId":"B1LLP4RK"},"content":"| B        | User who value my privacy                           | Make my contact private so others cannot share it                     | Only users that directly share contacts with me will have my contact                  |","lastModifiedDate":"2022-03-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"B1LLP4RK"},"content":"2.  HackNet shows a list of persons","lastModifiedDate":"2022-03-01"},{"lineNumber":373,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"B1LLP4RK"},"content":"4.  HackNet deletes the person","lastModifiedDate":"2022-03-01"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"B1LLP4RK"},"content":"    * 3a1. HackNet shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"B1LLP4RK"},"content":"4. The program should not have functionalities sharing data with others.","lastModifiedDate":"2022-03-01"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"alexteo98":14,"tzhan98":19,"B1LLP4RK":38,"-":363,"Jiaaa-yang":23}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"Welcome to the User Guide for **HackNet**, where we will guide you through all you need to know to get started!","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"**HackNet** is a desktop application that can help you manage contact details of potential team members to work on a technical project or participate in a Hackathon with. It has a simple Graphical User Interface (GUI) which displays details of your potential teammates, and works mainly via a Command Line Interface (GUI) through text commands.","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"## Table of Contents","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"* [Features](#features)","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    * [Viewing help: help](#viewing-help-help)","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    * [Contact Management](#contact-management)","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Adding a person: add](#adding-a-person-add)","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Editing details for existing contact: edit](#editing-a-person-edit)","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Add/remove person as potential teammate: team/unteam](#addremove-potential-teammates-teamunteam)","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Deleting a person: delete](#deleting-a-person-delete)","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Remove all contacts: clear](#clearing-all-entries-clear)","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    * [Team Forming](#team-forming)","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"      * [List all contacts: list](#listing-all-persons-list)","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Find person by name: find](#locating-persons-by-name-find)","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Filter person by technical skills: filter](#filter-for-past-teammates-filterteam)","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Sort person by technical skill: sort](#sorting-persons-by-skill-proficiency-sort)","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Show past teammates: filterteam](#filter-for-past-teammates-filterteam)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Show potential teammates: show](#show-all-potential-teammates-show)","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    * [Exiting HackNet](#exiting-the-program-exit)","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"    * [Navigating User Input History](#navigating-user-input-history)","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"* [Data](#data)","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"* [FAQ](#faq)","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"1. Download the latest `HackNet.jar` from [here](https://github.com/AY2122S2-CS2103T-W13-3/tp/releases).","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for HackNet.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com g/johndoe123` : Adds a contact named `John Doe` to HackNet.","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * **`delete`**` 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"    * e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"    * e.g `n/NAME [t/TEAM]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"    * e.g. `[t/TEAM]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"    * e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"    * e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"    * e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"* For skill field, Skill name have to be followed by a underscore `_` and Skill proficiency level that ranges from 0 to 100 with 0 being a low proficiency level and 100.","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"    * e.g. `[s/SKILLNAME_SKILLPROFICENCY]…​` as `[s/Java_90]`","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"Format: `help [topic]` or `help`","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"Simply calling `help` will bring up a prompt linking to the user guide.","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"Calling `help [topic]` with `topic` being a relevant keyword such as `add` will bring up a brief description and usage","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"of the topic.","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"![help add message](images/helpAdd.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"## Contact Management","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"This section contains commands that can help you manage the details of your contacts within **HackNet**.","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"Adds a person to HackNet.","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL g/GITHUB_USERNAME [t/TEAM]…​ [s/SKILLNAME_SKILLPROFICENCY]…​`","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"B1LLP4RK"},"content":"A person can have any number of teams (including 0)","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com g/johndoe123`","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com g/betsycoder p/1234567 t/entrepeneur s/java_80`","lastModifiedDate":"2022-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Editing a person: `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"Jiaaa-yang"},"content":"Edits an existing person in HackNet.","lastModifiedDate":"2022-02-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"B1LLP4RK"},"content":"Format: `edit INDEX [-r] [n/NAME] [p/PHONE] [e/EMAIL] [g/GITHUB_USERNAME] [t/TEAM]…​ [s/SKILLNAME_SKILLPROFICENCY]…​`","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"B1LLP4RK"},"content":"* In default mode, editing teams appends the new team to the person.","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"B1LLP4RK"},"content":"* -r option activates reset mode.","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"B1LLP4RK"},"content":"* In reset mode, editing teams edits the teams of a person from scratch. i.e adding of teams is not cumulative. You can remove all the person’s teams by typing `t/` without","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"B1LLP4RK"},"content":"  specifying any teams after it.","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"B1LLP4RK"},"content":"* The concept of default and reset mode applies with the skill field with prefix `s/` as well.","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"B1LLP4RK"},"content":"* `edit 2 -r n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing teams.","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"B1LLP4RK"},"content":"* `edit 2 t/HackNet s/` Appends the team `Hacknet` to the 2nd person and keep the current skills.","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"B1LLP4RK"},"content":"### Batch editing multiple persons: `batchedit`","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"B1LLP4RK"},"content":"Edits multiple persons in HackNet.","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"B1LLP4RK"},"content":"Format: `batchedit INDEX... [s/SKILLNAME_SKILLPROFICENCY...] [t/TEAM...]`","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"B1LLP4RK"},"content":"* Edits multiple persons in the specified \u0027INDEX...\u0027. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"B1LLP4RK"},"content":"* If some of the indices are invalid, HackNet will try its best to edit at least for the valid indices.","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"B1LLP4RK"},"content":"* At least one field to edit must be provided.","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"B1LLP4RK"},"content":"* The values after `t/` and `s/` is divided by commas.","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"B1LLP4RK"},"content":"* You can remove all the person’s teams by typing `t/` without","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"B1LLP4RK"},"content":"  specifying any teams after it. Same concept applies with the skill field with prefix `s/`","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"B1LLP4RK"},"content":"* `batchedit 1 2 3 s/Java_100, Python_80` Edits the skill set of the 1st, 2nd and 3rd person to be `java` and `python` with proficiency of 100 and 80.","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"B1LLP4RK"},"content":"* `batchedit 2 3 s/ t/GoogleProject, Hackathon 2022` Clears the skill set of 2nd and 3rd person in the list, and marks them to be in the team `GoogleProject` and `Hackathon2022`.","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Deleting a person: `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"Jiaaa-yang"},"content":"Deletes the specified person from HackNet.","lastModifiedDate":"2022-02-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"Jiaaa-yang"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"Jiaaa-yang"},"content":"Clears all existing contacts from HackNet.","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"Jiaaa-yang"},"content":"Format: `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"Jiaaa-yang"},"content":"## Team Forming","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"tzhan98"},"content":"This section contains commands that will aid you to find people with the technical skills you need to form your dream team.","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"Jiaaa-yang"},"content":"### Listing all persons: `list`","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"Jiaaa-yang"},"content":"Shows a list of all persons in HackNet.","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"Jiaaa-yang"},"content":"Format: `list`","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"alexteo98"},"content":"### Locating persons by skills: `filter`","lastModifiedDate":"2022-03-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":213,"author":{"gitId":"alexteo98"},"content":"Finds persons that have the specified skills.","lastModifiedDate":"2022-03-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":215,"author":{"gitId":"alexteo98"},"content":"Format: `filter KEYWORD`","lastModifiedDate":"2022-03-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":217,"author":{"gitId":"alexteo98"},"content":"* The search is case-insensitive. e.g `java` will match `Java`","lastModifiedDate":"2022-03-07"},{"lineNumber":218,"author":{"gitId":"alexteo98"},"content":"* Only full words will be matched e.g. `C` will not match `C#`","lastModifiedDate":"2022-03-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-07"},{"lineNumber":221,"author":{"gitId":"alexteo98"},"content":"* `find C` returns `Alex Yeoh`, `Bernice Yu` and `Irfan Ibrahim`","lastModifiedDate":"2022-03-07"},{"lineNumber":222,"author":{"gitId":"alexteo98"},"content":"* `filter java` returns `David Li`\u003cbr\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":223,"author":{"gitId":"alexteo98"},"content":"  ![result for \u0027filter C\u0027](images/filterCResult.png)","lastModifiedDate":"2022-03-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":225,"author":{"gitId":"Jiaaa-yang"},"content":"### Sorting persons by skill proficiency: `sort`","lastModifiedDate":"2022-03-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":227,"author":{"gitId":"Jiaaa-yang"},"content":"Sort persons in descending level of proficiency of specified skill.","lastModifiedDate":"2022-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":229,"author":{"gitId":"Jiaaa-yang"},"content":"Format: `sort SKILL`","lastModifiedDate":"2022-03-11"},{"lineNumber":230,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":231,"author":{"gitId":"Jiaaa-yang"},"content":"* Only persons with the specified `SKILL` will be listed","lastModifiedDate":"2022-03-11"},{"lineNumber":232,"author":{"gitId":"Jiaaa-yang"},"content":"* The search is case-insensitive. e.g `java` will match `Java`","lastModifiedDate":"2022-03-11"},{"lineNumber":233,"author":{"gitId":"Jiaaa-yang"},"content":"* Only full words will be matched e.g. `C` will not match `C#`","lastModifiedDate":"2022-03-11"},{"lineNumber":234,"author":{"gitId":"Jiaaa-yang"},"content":"* The list will be shown in descending level of skill proficiency","lastModifiedDate":"2022-03-11"},{"lineNumber":235,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":236,"author":{"gitId":"Jiaaa-yang"},"content":"Examples:","lastModifiedDate":"2022-03-11"},{"lineNumber":237,"author":{"gitId":"Jiaaa-yang"},"content":"* `sort Python` shows persons with `Python` as a skill in descending order of proficiency","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":239,"author":{"gitId":"Jiaaa-yang"},"content":"### Mark/unmark contact as potential teammates: `team/unteam`","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":241,"author":{"gitId":"Jiaaa-yang"},"content":"Format:","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"Jiaaa-yang"},"content":"* `team INDEX`","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"Jiaaa-yang"},"content":"* `unteam INDEX`","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"Jiaaa-yang"},"content":"    * Marks/unmarks the person at `INDEX`as potential teammate","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"Jiaaa-yang"},"content":"    * The index refers to the index number shown in the displayed person list","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"Jiaaa-yang"},"content":"    * The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-29"},{"lineNumber":247,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"Jiaaa-yang"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"Jiaaa-yang"},"content":"* `team 1` marks the first person as a potential teammate","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":251,"author":{"gitId":"Jiaaa-yang"},"content":"![result for \u0027team 1\u0027](images/teamCommandResultBefore.png)","lastModifiedDate":"2022-03-29"},{"lineNumber":252,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"Jiaaa-yang"},"content":"![result for \u0027team 1\u0027](images/teamCommandResultAfter.png)","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"Jiaaa-yang"},"content":"### Filter for past teammates: `filterteam`","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"Jiaaa-yang"},"content":"Shows a list of past teammates in HackNet.","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":259,"author":{"gitId":"MelvinCZJ"},"content":"Format: `filterteam`","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":261,"author":{"gitId":"Jiaaa-yang"},"content":"### Show all potential teammates: `show`","lastModifiedDate":"2022-03-22"},{"lineNumber":262,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":263,"author":{"gitId":"Jiaaa-yang"},"content":"Shows the list of all persons marked as potential teammates","lastModifiedDate":"2022-03-22"},{"lineNumber":264,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"Jiaaa-yang"},"content":"Format: `show`","lastModifiedDate":"2022-03-22"},{"lineNumber":266,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"MelvinCZJ"},"content":"### Navigating User Input History: `↑`, `↓`","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":275,"author":{"gitId":"MelvinCZJ"},"content":"Allows user to quickly retrieve their previous inputs from current session by using the up and down arrow keys.","lastModifiedDate":"2022-03-25"},{"lineNumber":276,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":277,"author":{"gitId":"MelvinCZJ"},"content":"Format: `↑`, `↓`","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":279,"author":{"gitId":"Jiaaa-yang"},"content":"## Data","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"Jiaaa-yang"},"content":"This section contains information about how we save your data across sessions.","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"Jiaaa-yang"},"content":"HackNet data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":289,"author":{"gitId":"Jiaaa-yang"},"content":"HackNet data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":292,"author":{"gitId":"Jiaaa-yang"},"content":"If your changes to the data file makes its format invalid, HackNet will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-02-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"Jiaaa-yang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous HackNet home folder.","lastModifiedDate":"2022-02-28"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"Jiaaa-yang"},"content":"**Help** | `help`","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"B1LLP4RK"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL g/GITHUB_USERNAME [t/Team]…​ [s/SKILLNAME_SKILLPROFICENCY]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com g/jameshooo t/friend t/colleague s/java_70`","lastModifiedDate":"2022-03-15"},{"lineNumber":314,"author":{"gitId":"B1LLP4RK"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [g/GITHUB_USERNAME] [t/Team]…​ [s/SKILLNAME_SKILLPROFICENCY]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-03-15"},{"lineNumber":315,"author":{"gitId":"Jiaaa-yang"},"content":"**Make Team** | `team`, `unteam` \u003cbr\u003e e.g., `team 1`","lastModifiedDate":"2022-03-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"Jiaaa-yang"},"content":"**Clear** | `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"alexteo98"},"content":"**Filter** | `filter SKILL`\u003cbr\u003e e.g. `filter c`","lastModifiedDate":"2022-03-13"},{"lineNumber":321,"author":{"gitId":"Jiaaa-yang"},"content":"**Sort** | `sort SKILL`\u003cbr\u003e e.g., `sort Python`","lastModifiedDate":"2022-03-11"},{"lineNumber":322,"author":{"gitId":"Jiaaa-yang"},"content":"**Filter Past Teammates** | `filterteam` ","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"Jiaaa-yang"},"content":"**Show potential teammates** | `show`","lastModifiedDate":"2022-03-22"},{"lineNumber":324,"author":{"gitId":"Jiaaa-yang"},"content":"**Exit HackNet** | `exit`","lastModifiedDate":"2022-03-24"},{"lineNumber":325,"author":{"gitId":"MelvinCZJ"},"content":"**Navigate User Input History** | `↑`, `↓`","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"alexteo98":9,"tzhan98":16,"B1LLP4RK":25,"-":162,"Jiaaa-yang":104,"MelvinCZJ":9}},{"path":"docs/diagrams/FilterSkillCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"class Skill{","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"skillName : String","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"skillProficiency : int","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"isSameSkill(skill : Skill) : boolean","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"class PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"class FilterSkillCommand{","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"    execute(Model model)","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"class FilterSkillCommandParser{","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    parse(String args)","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser --\u003e \"1    \" FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser --\u003e Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"PersonContainsSkillPredicate --\u003e \"1 \" Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand  --\u003e \"1 \" PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alexteo98":22}},{"path":"docs/diagrams/FilterSkilllSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"participant \":FilterSkillCommandParser\" as FilterSkillCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"participant \"f:FilterSkillCommand\" as FilterSkillCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"participant \":PersonContainsSkillPredicate\" as PersonContainsSkillPredicate MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"participant \":Skill\" as Skill MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"[-\u003e LogicManager : execute(\"filter java\")","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter java\")","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"create FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"AddressBookParser -\u003e FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"activate FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"deactivate FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"AddressBookParser -\u003e FilterSkillCommandParser : parse(\"java\")","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"activate FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"create Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser -\u003e Skill : new Skill(\"java\")","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"activate Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"Skill -\u003e FilterSkillCommandParser : s","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"deactivate Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"create PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser -\u003e PersonContainsSkillPredicate : new PersonContainsSkillPredicate(s)","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"activate PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"PersonContainsSkillPredicate -\u003e FilterSkillCommandParser : p","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"deactivate PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"create FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser -\u003e FilterSkillCommand : new FilterSkillCommand(p)","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"activate FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand --\u003e FilterSkillCommandParser : f","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"deactivate FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"deactivate FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"destroy FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"LogicManager -\u003e FilterSkillCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"activate FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand -\u003e Model : updateDisplayPersonList(p)","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"Model --\u003e FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"CommandResult --\u003e FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"deactivate FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alexteo98":83}},{"path":"docs/diagrams/MakeTeamCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"class MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"class MakeTeamCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"class \"\u003c\u003cenumeration\u003e\u003e\\nTeamAction\" {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003ccolor:white\u003eADD\u003c/color\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003ccolor:white\u003eREMOVE\u003c/color\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"show \"\u003c\u003cenumeration\u003e\u003e\\nTeamAction\" members","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"MakeTeamCommandParser ..\u003e MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"MakeTeamCommandParser --\u003e \"\u003c\u003cenumeration\u003e\u003e\\nTeamAction\"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"MakeTeamCommand -right-\u003e \"\u003c\u003cenumeration\u003e\u003e\\nTeamAction\"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Jiaaa-yang":18}},{"path":"docs/diagrams/MakeTeamSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"participant \":MakeTeamCommand\" as MakeTeamCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"[-\u003e MakeTeamCommand : execute(model)","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"activate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"alt TeamAction.ADD","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    MakeTeamCommand -\u003e MakeTeamCommand: createNewTeamPerson(true)","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    activate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    create Person","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    MakeTeamCommand -\u003e Person","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    activate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    Person --\u003e MakeTeamCommand: updatedPerson","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    deactivate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    deactivate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"else TeamAction.REMOVE","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    MakeTeamCommand -\u003e MakeTeamCommand: createNewTeamPerson(false)","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    activate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    create Person","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    MakeTeamCommand -\u003e Person","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    activate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    Person --\u003e MakeTeamCommand: updatedPerson","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    deactivate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    deactivate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"MakeTeamCommand -\u003e Model: setPerson(updatedPerson)","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"Model --\u003e MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"[\u003c--MakeTeamCommand: CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"deactivate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Jiaaa-yang":43}},{"path":"docs/diagrams/SkillClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"class Person {","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"email","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"githubUsername","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"phone","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"skillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"team","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"class Skill {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"skillName : String","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"skillProficiency : int","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"isSameSkill(skill : Skill) : boolean","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"class SkillSet {","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"skillset : Set\u003cSkill\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"hasSkill(skill : Skill) : boolean","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"addAll(SkillSeq : SkillSet)","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"add(skill : Skill)","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"getSkillProficiency(skill : Skill) : int","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"Person \"1\" -- \"1\" SkillSet : \u003e have","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"SkillSet \"1\" *-- \"0..*\"Skill : \u003e contains","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tzhan98":30}},{"path":"docs/diagrams/SkillSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"Person -\u003e SkillSet : getSkillProficiency(skill)","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"loop for every skill in SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"    SkillSet -\u003e Skill : isSameSkill(skill)","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"    SkillSet \u003c-- Skill","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"Person \u003c-- SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tzhan98":11}},{"path":"docs/images/skillClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"class Skill {","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"skillName","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"skillProficiency","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"\u0027class SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"Person \"1\" -- \"0..*\" Skill : \u003e have","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tzhan98":14}},{"path":"docs/team/alexteo98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"title: Alex Teo\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"HackNet helps computing students find teammates to do projects with. It allows users to add and find contacts by technical skills, providing them a platform to find the right teammates for each project.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dalexteo98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"    * to be added","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"alexteo98":33}},{"path":"docs/team/b1llp4rk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"title: B1LLP4RK\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"HackNet - HackNet is a desktop address book application used for finding teammates to do team projects with. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"* **Code contributed**: [RepoSense link]() to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"    * to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"  * to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"  * to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"* **Contributions to the team-based tasks**:","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"  * to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"  * to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"    * to be added soon","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"B1LLP4RK":32}},{"path":"docs/team/jiaaa-yang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"title: Lye Jia Yang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"HackNet helps computing students find teammates to do projects with. It allows users to add and find contacts by technical skills, providing them a platform to find the right teammates for each project.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"  * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003djiaaa-yang\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"  * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"  * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"  * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"  * to be added","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"Jiaaa-yang":33}},{"path":"docs/team/melvinczj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"title: Melvin Chan Zijun\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"HackNet helps computing students find teammates to do projects with. It allows users to add and find contacts by technical skills, providing them a platform to find the right teammates for each project.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"  * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtzhan98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtzhan98\u0026tabRepo\u003dAY2122S2-CS2103T-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"* **Project management**:","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"  * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"  * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"  * User Guide:","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"* **Community**:","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"  * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"* **Tools**:","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"  * to be added","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"MelvinCZJ":33}},{"path":"docs/team/tzhan98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"title: Toh Zhan Qing\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"HackNet helps computing students find teammates to do projects with. It allows users to add and find contacts by technical skills, providing them a platform to find the right teammates for each project.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"  * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtzhan98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtzhan98\u0026tabRepo\u003dAY2122S2-CS2103T-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"  * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"  * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    * refer to docs/DeveloperGuide.md","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"  * to be added","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"  * to be added","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"tzhan98":33}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    private static HostServices hostServices \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        hostServices \u003d getHostServices();","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns HostServices for current application instance,","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"Jiaaa-yang"},"content":"     * and is guaranteed to be non-null.","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"Jiaaa-yang"},"content":"    public static HostServices getHS() {","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(hostServices);","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"Jiaaa-yang"},"content":"        return hostServices;","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":183,"Jiaaa-yang":16}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_INVALID_INDEX_FOR_PERSON \u003d \"The person index provided is invalid\";","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_INVALID_INDEX_FOR_SOME_PERSON \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"        \"Not all of the person indices provided is valid\";","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"B1LLP4RK":3,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Returns an unmodifiable view of the filtered and sorted list of persons */","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    ObservableList\u003cPerson\u003e getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":48,"Jiaaa-yang":2}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"    public ObservableList\u003cPerson\u003e getDisplayPersonList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        return model.getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":79,"Jiaaa-yang":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":" * Adds a person to HackNet.","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to HackNet. \"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        + PREFIX_GITHUB_USERNAME + \"GITHUB USERNAME \"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"        + \"[\" + PREFIX_TEAM + \"TEAM]...\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        + \"[\" + PREFIX_SKILL + \"SKILLNAME_SKILLPROFICENCY]...\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        + PREFIX_GITHUB_USERNAME + \"johndoe-123 \"","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_TEAM + \"friends \"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_TEAM + \"owesMoney\"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        + PREFIX_SKILL + \"Java_90\";","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in HackNet.\";","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tzhan98":3,"B1LLP4RK":4,"-":57,"Jiaaa-yang":6}},{"path":"src/main/java/seedu/address/logic/commands/BatchEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"public class BatchEditCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String COMMAND_WORD \u003d \"batchedit\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the persons identified \"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Existing skillsets and teams will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Either the prefix for skillset or teams have to be present\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"        + \"values after prefixes are separated by spaces\"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"        + \"if skillset or team prefix appear multiple times only the values that appear after last prefix take effect\"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Parameters: INDEX... (must be a positive integer) \"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"        + \"[\" + PREFIX_SKILL + \"SKILL NAME_SKILL PROFICIENCY...]\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"        + \"[\" + PREFIX_TEAM + \"TEAM...]\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 2 3 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_SKILL + \"s/java_100 c_30\";","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"    private final List\u003cIndex\u003e indices;","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"     * @param indices              of the persons to edit in the addressbook","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"     * @param editPersonDescriptor describing how the persons\u0027 skillset will change","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"    public BatchEditCommand(List\u003cIndex\u003e indices, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"        this.editPersonDescriptor \u003d editPersonDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDisplayPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isAllIndicesValid \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"        for (Index index : indices) {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"                isAllIndicesValid \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"                continue;","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"            Person editedPerson \u003d EditCommand.createEditedPerson(personToEdit, editPersonDescriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"        // Throwing error after editing for valid indices allows the successful edit for least the valid indices.","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"        if (!isAllIndicesValid) {","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"B1LLP4RK"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX_FOR_SOME_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"B1LLP4RK"},"content":"        return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"B1LLP4RK":69}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d \"clears all data in Hack Net.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tzhan98":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"B1LLP4RK":1,"-":51,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":" * Edits the details of an existing person in HackNet.","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String RESET_ARG \u003d \"r\";","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        + \"[\" + PREFIX_GITHUB_USERNAME + \"GITHUB USERNAME] \"","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"        + \"[\" + PREFIX_TEAM + \"TEAM]\"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"        + \"[\" + PREFIX_SKILL + \"SKILL NAME_SKILL PROFICIENCY]...\\n\"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in HackNet.\";","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"    private final boolean isResetMode;","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"B1LLP4RK"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor, boolean isResetMode) {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(isResetMode);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"        this.isResetMode \u003d isResetMode;","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"B1LLP4RK"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"B1LLP4RK"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"B1LLP4RK"},"content":"    public static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor,","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"B1LLP4RK"},"content":"                                             boolean isResetMode) {","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"B1LLP4RK"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"B1LLP4RK"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"        GithubUsername updatedUsername \u003d editPersonDescriptor.getGithubUsername()","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"B1LLP4RK"},"content":"            .orElse(personToEdit.getGithubUsername());","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e updatedTeams;","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"        SkillSet updatedSkillSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"B1LLP4RK"},"content":"        if (isResetMode) {","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"B1LLP4RK"},"content":"            updatedTeams \u003d editPersonDescriptor.getTeams().orElse(personToEdit.getTeams());","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"B1LLP4RK"},"content":"            updatedSkillSet \u003d editPersonDescriptor.getSkillSet().orElse(personToEdit.getSkillSet());","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"B1LLP4RK"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"B1LLP4RK"},"content":"            Set\u003cTeam\u003e previousTeams \u003d personToEdit.getTeams();","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"B1LLP4RK"},"content":"            Optional\u003cSet\u003cTeam\u003e\u003e teamsToAdd \u003d editPersonDescriptor.getTeams();","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"B1LLP4RK"},"content":"            updatedTeams \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"B1LLP4RK"},"content":"            updatedTeams.addAll(previousTeams);","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"B1LLP4RK"},"content":"            if (teamsToAdd.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"B1LLP4RK"},"content":"                updatedTeams.addAll(teamsToAdd.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"B1LLP4RK"},"content":"            SkillSet previousSkillSet \u003d personToEdit.getSkillSet();","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"B1LLP4RK"},"content":"            updatedSkillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"B1LLP4RK"},"content":"            updatedSkillSet.addAll(previousSkillSet);","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"B1LLP4RK"},"content":"            Optional\u003cSkillSet\u003e skillSetToAdd \u003d editPersonDescriptor.getSkillSet();","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"B1LLP4RK"},"content":"            if (skillSetToAdd.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"B1LLP4RK"},"content":"                updatedSkillSet.addAll(skillSetToAdd.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"B1LLP4RK"},"content":"        // Potential teammate field to be unchanged on edit command","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isPotentialTeammate \u003d personToEdit.isPotentialTeammate();","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"B1LLP4RK"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedUsername,","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"B1LLP4RK"},"content":"            updatedTeams, updatedSkillSet, isPotentialTeammate);","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"B1LLP4RK"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor, isResetMode);","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":134,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"Jiaaa-yang"},"content":"        private GithubUsername username;","lastModifiedDate":"2022-03-01"},{"lineNumber":165,"author":{"gitId":"B1LLP4RK"},"content":"        private Set\u003cTeam\u003e teams;","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"tzhan98"},"content":"        private SkillSet skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"B1LLP4RK"},"content":"         * A defensive copy of {@code teams} is used internally.","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"Jiaaa-yang"},"content":"            setGithubUsername(toCopy.username);","lastModifiedDate":"2022-03-01"},{"lineNumber":179,"author":{"gitId":"B1LLP4RK"},"content":"            setTeams(toCopy.teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"tzhan98"},"content":"            setSkillSet(toCopy.skillSet);","lastModifiedDate":"2022-02-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"B1LLP4RK"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, username, teams, skillSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"Jiaaa-yang"},"content":"        public void setGithubUsername(GithubUsername username) {","lastModifiedDate":"2022-03-01"},{"lineNumber":215,"author":{"gitId":"Jiaaa-yang"},"content":"            this.username \u003d username;","lastModifiedDate":"2022-03-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"Jiaaa-yang"},"content":"        public Optional\u003cGithubUsername\u003e getGithubUsername() {","lastModifiedDate":"2022-03-01"},{"lineNumber":219,"author":{"gitId":"Jiaaa-yang"},"content":"            return Optional.ofNullable(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"B1LLP4RK"},"content":"         * Sets {@code teams} to this object\u0027s {@code teams}.","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"B1LLP4RK"},"content":"         * A defensive copy of {@code teams} is used internally.","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"B1LLP4RK"},"content":"        public void setTeams(Set\u003cTeam\u003e teams) {","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"B1LLP4RK"},"content":"            this.teams \u003d (teams !\u003d null) ? new HashSet\u003c\u003e(teams) : null;","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"tzhan98"},"content":"        public void setSkillSet(SkillSet skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"tzhan98"},"content":"            this.skillSet \u003d (skillSet !\u003d null) ? new SkillSet(new HashSet\u003c\u003e(skillSet.getSkillSet())) : null;","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"B1LLP4RK"},"content":"         * Returns an unmodifiable team set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"B1LLP4RK"},"content":"         * Returns {@code Optional#empty()} if {@code teams} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"B1LLP4RK"},"content":"        public Optional\u003cSet\u003cTeam\u003e\u003e getTeams() {","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"B1LLP4RK"},"content":"            return (teams !\u003d null) ? Optional.of(Collections.unmodifiableSet(teams)) : Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"tzhan98"},"content":"        public Optional\u003cSkillSet\u003e getSkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"tzhan98"},"content":"            return (this.skillSet !\u003d null \u0026\u0026 skillSet.getSkillSet() !\u003d null)","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"tzhan98"},"content":"                    ? Optional.of(new SkillSet(Collections.unmodifiableSet(skillSet.getSkillSet()))) : Optional.empty();","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"Jiaaa-yang"},"content":"                    \u0026\u0026 getGithubUsername().equals(e.getGithubUsername())","lastModifiedDate":"2022-03-01"},{"lineNumber":267,"author":{"gitId":"B1LLP4RK"},"content":"                    \u0026\u0026 getTeams().equals(e.getTeams())","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"tzhan98"},"content":"                    \u0026\u0026 getSkillSet().equals(e.getSkillSet());","lastModifiedDate":"2022-02-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tzhan98":12,"B1LLP4RK":65,"-":181,"Jiaaa-yang":14}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d \"Exit Hack Net.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tzhan98":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/FilterPastTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEAMMATES;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"public class FilterPastTeamCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"    public static final String COMMAND_WORD \u003d \"filterteam\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all past teammates\";","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_ALL_TEAMMATES);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"MelvinCZJ":20}},{"path":"src/main/java/seedu/address/logic/commands/FilterSkillCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"public class FilterSkillCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all persons whose skills contain the \"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"            + \"provided skill name (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"            + \"Parameters: SKILL\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"            + \"Example: \" + COMMAND_WORD + \" Java\";","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    private final PersonContainsSkillPredicate predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    public FilterSkillCommand(PersonContainsSkillPredicate predicate) {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getDisplayPersonList().size()));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"                || (other instanceof FilterSkillCommand // instanceof handles nulls","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"                \u0026\u0026 predicate.equals(((FilterSkillCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"alexteo98":40,"Jiaaa-yang":2}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getDisplayPersonList().size()));","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":40,"Jiaaa-yang":2}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public static final Set\u003cString\u003e AVAILABLE_HELP_TOPICS \u003d Set.of(\"add\", \"delete\", \"find\", \"filter\", \"list\", \"skill\",","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"            \"team\", \"unteam\", \"sort\", \"\", \"batchedit\", \"clear\", \"exit\");","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions. Usage: \u003cHelp\u003e \"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"            + \"to get link to user guide or \u003cHelp\u003e \u003cTopic\u003e to get help for particular topic \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"            + \"Example: \" + COMMAND_WORD + \"\\nExample: \" + COMMAND_WORD + \" list\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_ADD \u003d AddCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_DELETE \u003d DeleteCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_FIND \u003d FindCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_FILTER \u003d FilterSkillCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_LIST \u003d ListCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_SORT \u003d SortCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_TEAM \u003d MakeTeamCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_UNTEAM \u003d MakeTeamCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_BATCHEDIT \u003d BatchEditCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_CLEAR \u003d ClearCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_EXIT \u003d ExitCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_SKILL \u003d \"Skill stores a Skill Name and Skill proficiency. Usage: \"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"            + \"\u003cCommand\u003e s/\u003cSkill Name\u003e_\u003cSkill Proficiency\u003e \\nExample: edit 1 s/Java_50\\n \";","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    public final String topic;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    public HelpCommand(String topic) {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        this.topic \u003d topic;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        switch (topic) {","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        case \"add\":","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_ADD, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        case \"delete\":","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_DELETE, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"        case \"find\":","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_FIND, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        case \"filter\":","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_FILTER, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        case \"list\":","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_LIST, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        case \"skill\":","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_SKILL, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        case \"team\":","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_TEAM, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        case \"unteam\":","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_UNTEAM, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        case \"sort\":","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_SORT, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"        case \"batchedit\":","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_BATCHEDIT, false, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        case \"clear\":","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_CLEAR, false, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        case \"exit\":","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_EXIT, false, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"        default:","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        if (!(other instanceof HelpCommand)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"        HelpCommand toCompare \u003d (HelpCommand) other;","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        return toCompare.topic.equals(toCompare.topic);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tzhan98":68,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d \"use list to show all contacts. Usage: \u003clist\u003e\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tzhan98":1,"-":23,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/logic/commands/MakeTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":" * Adds/removes a person as a potential team member using its index in HackNet.","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"public class MakeTeamCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     * Actions supported by a {@code MakeTeamCommand}","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    public enum TeamAction {","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        ADD,","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        REMOVE,","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String COMMAND_WORD_ADD \u003d \"team\";","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String COMMAND_WORD_REMOVE \u003d \"unteam\";","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_ADD + \"/\" + COMMAND_WORD_REMOVE","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"            + \": Adds/removes the person as a potential teammate by the index number in the displayed person list.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"Example: \" + COMMAND_WORD_ADD + \" 1\";","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_ADD_TEAMMATE_SUCCESS \u003d \"Added person as potential teammate: %1$s\";","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_REMOVE_TEAMMATE_SUCCESS \u003d \"Remove person from potential teammate: %1$s\";","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_INVALID_TEAM_ACTION \u003d \"Invalid team action for command\";","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_REDUNDANT_ADDING \u003d \"Person is already a potential teammate!\";","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_REDUNDANT_REMOVAL \u003d \"Person is not part of your potential team!\";","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MakeTeamCommand.class);","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    private final TeamAction action;","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs a MakeTeamCommand.","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param targetIndex Index of person to execute command on.","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param action Action to perform when executing the command.","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"    public MakeTeamCommand(Index targetIndex, TeamAction action) {","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDisplayPersonList();","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        Person personToUpdate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        Person updatedPerson;","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        String successMessage;","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        switch (action) {","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        case ADD:","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"            if (personToUpdate.isPotentialTeammate()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"                // Attempting to add someone who is already a potential teammate","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"                throw new CommandException(MESSAGE_REDUNDANT_ADDING);","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"            updatedPerson \u003d createNewTeamPerson(personToUpdate, true);","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"            successMessage \u003d MESSAGE_ADD_TEAMMATE_SUCCESS;","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"        case REMOVE:","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"            if (!personToUpdate.isPotentialTeammate()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"                // Attempting to remove a non-potential teammate from team","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"                throw new CommandException(MESSAGE_REDUNDANT_REMOVAL);","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"            updatedPerson \u003d createNewTeamPerson(personToUpdate, false);","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"            successMessage \u003d MESSAGE_REMOVE_TEAMMATE_SUCCESS;","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        default:","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"            logger.warning(\"Invalid enum value: \" + action.toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new CommandException(MESSAGE_INVALID_TEAM_ACTION);","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"        return new CommandResult(String.format(successMessage, personToUpdate));","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns a new {@code Person} with the same fields, with its potential teammate field","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"     * set to the value of {@code isPotentialTeammate}.","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param person Person to edit.","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param isPotentialTeammate Boolean value to set for isPotentialTeammate field of Person.","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"    private static Person createNewTeamPerson(Person person, boolean isPotentialTeammate) {","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        assert person !\u003d null : \"Person to update should not be null\";","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        return new Person(person.getName(), person.getPhone(), person.getEmail(), person.getGithubUsername(),","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"                person.getTeams(), person.getSkillSet(), isPotentialTeammate);","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"                || (other instanceof MakeTeamCommand // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 targetIndex.equals(((MakeTeamCommand) other).targetIndex) // same index","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 action.equals(((MakeTeamCommand) other).action)); // same action","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"B1LLP4RK":1,"Jiaaa-yang":115}},{"path":"src/main/java/seedu/address/logic/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_POTENTIAL_TEAMMATES;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * Shows the list of all potential teammates in the HackNet.","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed your potential teammate(s)!\";","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_POTENTIAL_TEAMMATES);","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jiaaa-yang":23}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * Finds and lists all persons in address book with skills matching the given","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" * keyword arguments, and sorts them by a descending level of proficiency.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows a sorted list of all persons who possesses \"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"the specified skill passed as keywords (case-insensitive) \"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"Parameters: SKILL\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"Example: \" + COMMAND_WORD + \" Java\";","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_INVALID_SKILL \u003d \"Invalid skill name: %s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    private final PersonContainsSkillPredicate predicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    private final PersonBySkillProficiencyComparator comparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs a {@code SortCommand}.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param predicate Predicate to filter person list by given skill.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param comparator Comparator to compare proficiency level of persons of given skill.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    public SortCommand(PersonContainsSkillPredicate predicate, PersonBySkillProficiencyComparator comparator) {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(predicate, comparator.reversed()); // Sort by descending skill proficiency","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getDisplayPersonList().size()));","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 predicate.equals(((SortCommand) other).predicate)","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 comparator.equals(((SortCommand) other).comparator)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Jiaaa-yang":57}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GITHUB_USERNAME,","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"                    PREFIX_TEAM, PREFIX_SKILL);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GITHUB_USERNAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername username \u003d ParserUtil.parseGithubUsername(argMultimap.getValue(PREFIX_GITHUB_USERNAME).get());","lastModifiedDate":"2022-03-01"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e teamList \u003d ParserUtil.parseTeams(argMultimap.getAllValues(PREFIX_TEAM));","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        SkillSet skillSet \u003d ParserUtil.parseSkillSet(argMultimap.getAllValues(PREFIX_SKILL));","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d new Person(name, phone, email, username, teamList, skillSet, false);","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tzhan98":3,"B1LLP4RK":4,"-":51,"Jiaaa-yang":6}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.logic.commands.BatchEditCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"import seedu.address.logic.commands.FilterPastTeamCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.FilterSkillCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.MakeTeamCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        case FilterSkillCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"            return new FilterSkillCommandParser().parse(arguments);","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"        case FilterPastTeamCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"            return new FilterPastTeamCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"        case MakeTeamCommand.COMMAND_WORD_ADD:","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"            return new MakeTeamCommandParser(MakeTeamCommand.TeamAction.ADD).parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"        case MakeTeamCommand.COMMAND_WORD_REMOVE:","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"            return new MakeTeamCommandParser(MakeTeamCommand.TeamAction.REMOVE).parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"            return new ShowCommand();","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":95,"author":{"gitId":"B1LLP4RK"},"content":"        case BatchEditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"B1LLP4RK"},"content":"            return new BatchEditCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alexteo98":4,"tzhan98":1,"B1LLP4RK":3,"-":75,"MelvinCZJ":4,"Jiaaa-yang":15}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"     **/","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"     * Returns the values, when multiple arguments are passed in within one prefix.","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"     * @param prefix of the value to obtain values of","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"     * @param regex  that separates the values within the prefix","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"     * @return the array of values","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"    public List\u003cString\u003e getValuesWithRegex(Prefix prefix, String regex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"        String unseparatedArgs \u003d getValue(prefix).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"        String[] separatedArgs \u003d unseparatedArgs.split(regex, 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cString\u003e trimmedArgs \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"        for (String arg : separatedArgs) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"            trimmedArgs.add(trimmedArg);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"        return trimmedArgs;","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"B1LLP4RK":22,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/BatchEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.logic.commands.BatchEditCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"public class BatchEditCommandParser implements Parser\u003cBatchEditCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"    public BatchEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SKILL, PREFIX_TEAM);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"        LinkedList\u003cIndex\u003e indices;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"            indices \u003d ParserUtil.parseIndices(argMultimap.getPreamble(), \" \");","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BatchEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"        if (argMultimap.getValue(PREFIX_SKILL).isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"            List\u003cString\u003e separatedArgs \u003d argMultimap.getValuesWithRegex(PREFIX_SKILL, \"\\\\s?,\\\\s?\");","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"            Set\u003cSkill\u003e skillSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"            if (!(separatedArgs.size() \u003d\u003d 1 \u0026\u0026 separatedArgs.get(0).equals(\"\"))) {","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"                for (String arg : separatedArgs) {","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"                    Skill skill \u003d ParserUtil.parseSkill(arg);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"                    skillSet.add(skill);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"            SkillSet skills \u003d new SkillSet(skillSet);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"            editPersonDescriptor.setSkillSet(skills);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"        if (argMultimap.getValue(PREFIX_TEAM).isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"            List\u003cString\u003e separatedArgs \u003d argMultimap.getValuesWithRegex(PREFIX_TEAM, \"\\\\s?,\\\\s?\");","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"            Set\u003cTeam\u003e teams \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"            if (!(separatedArgs.size() \u003d\u003d 1 \u0026\u0026 separatedArgs.get(0).equals(\"\"))) {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"                for (String arg : separatedArgs) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"                    Team team \u003d ParserUtil.parseTeam(arg);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"                    teams.add(team);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"            editPersonDescriptor.setTeams(teams);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"            throw new ParseException(BatchEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"        return new BatchEditCommand(indices, editPersonDescriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"B1LLP4RK":67}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final Prefix PREFIX_GITHUB_USERNAME \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"    public static final Prefix PREFIX_TEAM \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public static final Prefix PREFIX_SKILL \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"    public static final Prefix PREFIX_COMMAND_OPTION \u003d new Prefix(\"-\");","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tzhan98":1,"B1LLP4RK":2,"-":13,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND_OPTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_COMMAND_OPTION, PREFIX_NAME,","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"            PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GITHUB_USERNAME, PREFIX_TEAM, PREFIX_SKILL);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isResetMode \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"        if (argMultimap.getValue(PREFIX_COMMAND_OPTION).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"            String option \u003d argMultimap.getValue(PREFIX_COMMAND_OPTION).get();","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"            if (option.equals(EditCommand.RESET_ARG)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"                isResetMode \u003d true;","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB_USERNAME).isPresent()) {","lastModifiedDate":"2022-03-01"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"            editPersonDescriptor.setGithubUsername(","lastModifiedDate":"2022-03-01"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"                ParserUtil.parseGithubUsername(argMultimap.getValue(PREFIX_GITHUB_USERNAME).get()));","lastModifiedDate":"2022-03-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"        parseTeamsForEdit(argMultimap.getAllValues(PREFIX_TEAM)).ifPresent(editPersonDescriptor::setTeams);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"        parseSkillSetForEdit(argMultimap.getAllValues(PREFIX_SKILL)).ifPresent(editPersonDescriptor::setSkillSet);","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"B1LLP4RK"},"content":"        return new EditCommand(index, editPersonDescriptor, isResetMode);","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses {@code Collection\u003cString\u003e teams} into a {@code Set\u003cTeam\u003e} if {@code teams} is non-empty.","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"     * If {@code teams} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"     * {@code Set\u003cTeam\u003e} containing zero teams.","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"B1LLP4RK"},"content":"    private Optional\u003cSet\u003cTeam\u003e\u003e parseTeamsForEdit(Collection\u003cString\u003e teams) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"B1LLP4RK"},"content":"        assert teams !\u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"B1LLP4RK"},"content":"        if (teams.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"B1LLP4RK"},"content":"        Collection\u003cString\u003e set \u003d teams.size() \u003d\u003d 1 \u0026\u0026 teams.contains(\"\") ? Collections.emptySet() : teams;","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"B1LLP4RK"},"content":"        return Optional.of(ParserUtil.parseTeams(set));","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"     * Parses {@code Collection\u003cString\u003e skillset} into a {@code Set\u003cSkill\u003e} if {@code skill} is non-empty.","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"     * If {@code skill} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"     * {@code Set\u003cSkill\u003e} containing zero tags.","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"    private Optional\u003cSkillSet\u003e parseSkillSetForEdit(Collection\u003cString\u003e skill) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        assert skill !\u003d null;","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"        if (skill.isEmpty()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"        Collection\u003cString\u003e skillSet \u003d skill.size() \u003d\u003d 1 \u0026\u0026 skill.contains(\"\") ? Collections.emptySet() : skill;","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"        return Optional.of(ParserUtil.parseSkillSet(skillSet));","lastModifiedDate":"2022-03-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tzhan98":11,"B1LLP4RK":24,"-":73,"Jiaaa-yang":4}},{"path":"src/main/java/seedu/address/logic/parser/FilterSkillCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.FilterSkillCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":" * Parses input arguments and creates a new FilterSkillCommand object","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"public class FilterSkillCommandParser implements Parser\u003cFilterSkillCommand\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterSkillCommand","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * and returns a FilterSkillCommand object for execution.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    public FilterSkillCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterSkillCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet(Arrays.stream(keywords)","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"                .map(Skill::new)","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"                .collect(Collectors.toSet()));","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        return new FilterSkillCommand(new PersonContainsSkillPredicate(skillSet));","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"alexteo98":40,"B1LLP4RK":1}},{"path":"src/main/java/seedu/address/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.HelpCommand.AVAILABLE_HELP_TOPICS;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"     * and returns a HelpCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public HelpCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        String sanitisedUserInput \u003d userInput.toLowerCase().trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        requireAllNonNull(userInput);","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        if (!AVAILABLE_HELP_TOPICS.contains(sanitisedUserInput)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        return new HelpCommand(sanitisedUserInput);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tzhan98":26}},{"path":"src/main/java/seedu/address/logic/parser/MakeTeamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.MakeTeamCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * Parses input arguments and creates a new MakeTeamCommand object","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"public class MakeTeamCommandParser implements Parser\u003cMakeTeamCommand\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    private final MakeTeamCommand.TeamAction action;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs a MakeTeamCommandParser.","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param action Action the {@code MakeTeamCommand} will carry out.","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    public MakeTeamCommandParser(MakeTeamCommand.TeamAction action) {","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parses the given {@code String} of arguments in the context of the MakeTeamCommand","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * and returns a MakeTeamCommand object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public MakeTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            return new MakeTeamCommand(index, action);","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MakeTeamCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jiaaa-yang":40}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses multiple {@code oneBasedIndex} in string format and returns a list of {@code Index}","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"     * @param oneBasedIndices the string representation of indices separated with the given regex","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"     * @param regex           regular expression to separate the indices in String","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"     * @return the list of indices","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"     * @throws ParseException if one of the arguments cannot be interpreted as an {@code Index}","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"    public static LinkedList\u003cIndex\u003e parseIndices(String oneBasedIndices, String regex) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"        String[] numbers \u003d oneBasedIndices.split(regex);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"        LinkedList\u003cIndex\u003e indices \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"        for (String number : numbers) {","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"            number \u003d number.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"            indices.add(parseIndex(number));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"        return indices;","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parses a {@code String username} into an {@code GithubUsername}.","lastModifiedDate":"2022-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws ParseException if the given {@code username} is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"    public static GithubUsername parseGithubUsername(String username) throws ParseException {","lastModifiedDate":"2022-03-01"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"        String trimmedUsername \u003d username.trim();","lastModifiedDate":"2022-03-01"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!GithubUsername.isValidUsername(trimmedUsername)) {","lastModifiedDate":"2022-03-01"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new ParseException(GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"        return new GithubUsername(trimmedUsername);","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses a {@code String team} into a {@code Team}.","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"B1LLP4RK"},"content":"     * @throws ParseException if the given {@code team} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"B1LLP4RK"},"content":"    public static Team parseTeam(String team) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(team);","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"B1LLP4RK"},"content":"        String trimmed \u003d team.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"B1LLP4RK"},"content":"        if (!Team.isValidTeamName(trimmed)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"B1LLP4RK"},"content":"            throw new ParseException(Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"B1LLP4RK"},"content":"        return new Team(trimmed);","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":138,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses a {@code String skill} into a {@code skill}.\u0027","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":142,"author":{"gitId":"tzhan98"},"content":"     * @throws ParseException if the given {@code skill} is invalid.","lastModifiedDate":"2022-02-28"},{"lineNumber":143,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"tzhan98"},"content":"    public static Skill parseSkill(String skill) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"tzhan98"},"content":"        requireNonNull(skill);","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"tzhan98"},"content":"        String[] trimmedSkill \u003d skill.trim().split(\"_\");","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"tzhan98"},"content":"        if (trimmedSkill.length !\u003d 2) {","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"tzhan98"},"content":"            throw new ParseException(Skill.SKILL_INPUT_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"tzhan98"},"content":"        String skillName \u003d trimmedSkill[0];","lastModifiedDate":"2022-02-28"},{"lineNumber":151,"author":{"gitId":"B1LLP4RK"},"content":"        String trimmedSkillName \u003d skillName.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"tzhan98"},"content":"        if (!Skill.isValidSkillProficiencyInteger(trimmedSkill[1])) {","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"tzhan98"},"content":"            throw new ParseException(Skill.PROFICIENCY_CONSTRAINTS_INTEGER);","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"tzhan98"},"content":"        int skillProficiency \u003d Integer.parseInt(trimmedSkill[1]);","lastModifiedDate":"2022-02-28"},{"lineNumber":156,"author":{"gitId":"B1LLP4RK"},"content":"        if (!Skill.isValidSkillName(trimmedSkillName)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"tzhan98"},"content":"            throw new ParseException(Skill.NAME_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":158,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"tzhan98"},"content":"        if (!Skill.isValidSkillProficiencyRange(skillProficiency)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"tzhan98"},"content":"            throw new ParseException(Skill.PROFICIENCY_CONSTRAINTS_RANGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":162,"author":{"gitId":"B1LLP4RK"},"content":"        return new Skill(trimmedSkillName, skillProficiency);","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":164,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses {@code Collection\u003cString\u003e teams} into a {@code Set\u003cTeam\u003e}.","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"B1LLP4RK"},"content":"    public static Set\u003cTeam\u003e parseTeams(Collection\u003cString\u003e teams) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"B1LLP4RK"},"content":"        final Set\u003cTeam\u003e teamSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"B1LLP4RK"},"content":"        for (String teamName : teams) {","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"B1LLP4RK"},"content":"            teamSet.add(parseTeam(teamName));","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"B1LLP4RK"},"content":"        return teamSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":177,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":178,"author":{"gitId":"tzhan98"},"content":"     * Parses {@code Collection\u003cString\u003e skill} into a {@code Set\u003cSkill\u003e}.","lastModifiedDate":"2022-02-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":180,"author":{"gitId":"tzhan98"},"content":"    public static SkillSet parseSkillSet(Collection\u003cString\u003e skills) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"tzhan98"},"content":"        requireNonNull(skills);","lastModifiedDate":"2022-02-28"},{"lineNumber":182,"author":{"gitId":"tzhan98"},"content":"        final SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"tzhan98"},"content":"        for (String skill : skills) {","lastModifiedDate":"2022-02-28"},{"lineNumber":184,"author":{"gitId":"tzhan98"},"content":"            skillSet.add(parseSkill(skill));","lastModifiedDate":"2022-02-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":186,"author":{"gitId":"tzhan98"},"content":"        return skillSet;","lastModifiedDate":"2022-02-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses {@code Collection\u003cString\u003e teams} into a {@code Set\u003cTeam\u003e} if {@code teams} is non-empty.","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"B1LLP4RK"},"content":"     * If {@code teams} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"B1LLP4RK"},"content":"     * {@code Set\u003cTeam\u003e} containing zero teams.","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"B1LLP4RK"},"content":"    public static Optional\u003cSet\u003cTeam\u003e\u003e parseTeamsForEdit(Collection\u003cString\u003e teams) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"B1LLP4RK"},"content":"        assert teams !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"B1LLP4RK"},"content":"        if (teams.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"B1LLP4RK"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"B1LLP4RK"},"content":"        Collection\u003cString\u003e set \u003d teams.size() \u003d\u003d 1 \u0026\u0026 teams.contains(\"\") ? Collections.emptySet() : teams;","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"B1LLP4RK"},"content":"        return Optional.of(ParserUtil.parseTeams(set));","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses {@code Collection\u003cString\u003e skillset} into a {@code Set\u003cSkill\u003e} if {@code skill} is non-empty.","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"B1LLP4RK"},"content":"     * If {@code skill} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"B1LLP4RK"},"content":"     * {@code Set\u003cSkill\u003e} containing zero tags.","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"B1LLP4RK"},"content":"    public static Optional\u003cSkillSet\u003e parseSkillSetForEdit(Collection\u003cString\u003e skill) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"B1LLP4RK"},"content":"        assert skill !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"B1LLP4RK"},"content":"        if (skill.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"B1LLP4RK"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"B1LLP4RK"},"content":"        Collection\u003cString\u003e skillSet \u003d skill.size() \u003d\u003d 1 \u0026\u0026 skill.contains(\"\") ? Collections.emptySet() : skill;","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"B1LLP4RK"},"content":"        return Optional.of(ParserUtil.parseSkillSet(skillSet));","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tzhan98":31,"B1LLP4RK":70,"-":109,"Jiaaa-yang":9}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!Skill.isValidSkillName(trimmedArgs)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new ParseException(String.format(SortCommand.MESSAGE_INVALID_SKILL, Skill.NAME_CONSTRAINTS));","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill skillToFilter \u003d new Skill(trimmedArgs);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(skillToFilter);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d new PersonContainsSkillPredicate(skillSet);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(skillToFilter);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        return new SortCommand(predicate, comparator);","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"alexteo98":4,"B1LLP4RK":1,"Jiaaa-yang":37}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    /** {@code Predicate} that evaluate to true only when","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     * teams field of person object is not-empty","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * */","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_TEAMMATES \u003d person -\u003e !person.getTeams().isEmpty();","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     * {@code Predicate} that evalutes to true if and only if the","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * person is a potential teammate.","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_POTENTIAL_TEAMMATES \u003d Person::isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Returns an unmodifiable view of the filtered and sorted person list */","lastModifiedDate":"2022-03-05"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"    ObservableList\u003cPerson\u003e getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"     * Updates the filter of the display person list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"    void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"     * Updates the sort criteria of the display person list to sort by the given {@code comparator}.","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"    void updateDisplayPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"     * Updates both the filter and the sort criteria of the","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"     * display person list to sort by the given {@code predicate and @code comparator}.","lastModifiedDate":"2022-03-05"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws NullPointerException if {@code comparator or @code predicate} is null.","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"    void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate, Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":83,"Jiaaa-yang":24,"MelvinCZJ":5}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Internal list of filtered persons, wrapped by sortedPersons */","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    /** The sorted, filtered list to be shown in the GUI. */","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    private final SortedList\u003cPerson\u003e displayPersons;","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        // A sorted list wrapping over the internal filtered list","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        displayPersons \u003d new SortedList\u003c\u003e(filteredPersons);","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"        updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered \u0026 Sorted Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"    public ObservableList\u003cPerson\u003e getDisplayPersonList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"        return displayPersons;","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"Jiaaa-yang"},"content":"    public void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":136,"author":{"gitId":"Jiaaa-yang"},"content":"        // Remove sort criteria on new filter","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"Jiaaa-yang"},"content":"        displayPersons.setComparator(null);","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":139,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":140,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"Jiaaa-yang"},"content":"    public void updateDisplayPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-05"},{"lineNumber":142,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":143,"author":{"gitId":"Jiaaa-yang"},"content":"        displayPersons.setComparator(comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"Jiaaa-yang"},"content":"    public void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate, Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"Jiaaa-yang"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"Jiaaa-yang"},"content":"        displayPersons.setComparator(comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":145,"Jiaaa-yang":28}},{"path":"src/main/java/seedu/address/model/person/GithubUsername.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" * Represents a Person\u0027s GitHub username in HackNet.","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUsername(String)}","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"public class GithubUsername {","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"GitHub usernames can only contain alphanumeric\"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"                                                    + \" and hyphen characters, and must not be blank\";","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}-]+\";","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String GITHUB_HANDLE_FORMAT \u003d \"@%s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String GITHUB_LINK_FORMAT \u003d \"https://github.com/%s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    public final String value;","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs an {@code GitHubUsername}.","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param username A valid username.","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    public GithubUsername(String username) {","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        checkArgument(isValidUsername(username), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        value \u003d username;","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns true if a given string is a valid GitHub username.","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"    public static boolean isValidUsername(String test) {","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns the GitHub handle of this username.","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getGithubHandle() {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(GITHUB_HANDLE_FORMAT, value);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns the link to the GitHub profile of this username.","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getGithubProfileLink() {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(GITHUB_LINK_FORMAT, value);","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-01"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"    public String toString() {","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        return value;","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-01"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-01"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-01"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"                || (other instanceof GithubUsername // instanceof handles nulls","lastModifiedDate":"2022-03-01"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 value.equals(((GithubUsername) other).value)); // state check","lastModifiedDate":"2022-03-01"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-01"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-01"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-01"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Jiaaa-yang":71}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    private final GithubUsername githubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    private final SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    private final boolean isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    private final Set\u003cTeam\u003e teams \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    public Person(Name name, Phone phone, Email email, GithubUsername username,","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"                  Set\u003cTeam\u003e teams, SkillSet skillSet, boolean isPotentialTeammate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"        requireAllNonNull(name, phone, email, username, teams, skillSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        this.githubUsername \u003d username;","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"        this.teams.addAll(teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        this.skillSet.addAll(skillSet);","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isPotentialTeammate \u003d isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    public GithubUsername getGithubUsername() {","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        return githubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean isPotentialTeammate() {","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"        return isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"B1LLP4RK"},"content":"     * Returns an immutable team set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"    public Set\u003cTeam\u003e getTeams() {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"        return Collections.unmodifiableSet(teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"     * Returns an immutable skill set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"    public SkillSet getSkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"        return skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"     * Returns true if the person contains the skill, false otherwise.","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"     * @param skill The skill to check if the person possess.","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"     * @return True if the person has the skill, false otherwise.","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"    public boolean hasSkill(Skill skill) {","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"        requireAllNonNull(skill);","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        return skillSet.hasSkill(skill);","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"     * Returns the skill proficiency of the person for the given skill,","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"     * or 0 if the person does not have the skill.","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"     * @param skill Skill of person to get proficiency of.","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"     * @return Skill proficiency of the person.","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"    public int getSkillProficiency(Skill skill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"        return skillSet.getSkillProficiency(skill);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":135,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 otherPerson.getGithubUsername().equals(getGithubUsername())","lastModifiedDate":"2022-03-01"},{"lineNumber":136,"author":{"gitId":"B1LLP4RK"},"content":"                \u0026\u0026 otherPerson.getTeams().equals(getTeams())","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 otherPerson.getSkillSet().equals(getSkillSet())","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 otherPerson.isPotentialTeammate \u003d\u003d isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"Jiaaa-yang"},"content":"        return Objects.hash(name, phone, email, githubUsername, isPotentialTeammate, teams, skillSet);","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"Jiaaa-yang"},"content":"                .append(\"; GitHub Username: \")","lastModifiedDate":"2022-03-01"},{"lineNumber":156,"author":{"gitId":"Jiaaa-yang"},"content":"                .append(getGithubUsername());","lastModifiedDate":"2022-03-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e teams \u003d getTeams();","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"B1LLP4RK"},"content":"        if (!teams.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"B1LLP4RK"},"content":"            builder.append(\"; Teams: \");","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"B1LLP4RK"},"content":"            teams.forEach(builder::append);","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"tzhan98"},"content":"        String skillString \u003d this.skillSet.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":165,"author":{"gitId":"tzhan98"},"content":"        return builder.toString().concat(skillString);","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alexteo98":9,"tzhan98":19,"B1LLP4RK":13,"-":107,"Jiaaa-yang":20}},{"path":"src/main/java/seedu/address/model/person/PersonBySkillProficiencyComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * Comparator to compare {@code Person}\u0027s by the proficiency level of a given {@code Skill}.","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"public class PersonBySkillProficiencyComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Skill skill;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs a {@code PersonBySkillProficiencyComparator}.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param skill Skill to compare person by.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public PersonBySkillProficiencyComparator(Skill skill) {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        this.skill \u003d skill;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    public int compare(Person person1, Person person2) {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        return Integer.compare(person1.getSkillProficiency(skill), person2.getSkillProficiency(skill));","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"                || (other instanceof PersonBySkillProficiencyComparator // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 skill.isSameSkill(((PersonBySkillProficiencyComparator) other).skill)); // check if same skill name","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"B1LLP4RK":1,"Jiaaa-yang":33}},{"path":"src/main/java/seedu/address/model/person/PersonContainsSkillPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":" * Tests that a {@code Person}\u0027s {@code Skill} matches any of the keywords given.","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"public class PersonContainsSkillPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    private final SkillSet skillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"     * @param skillSet","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    public PersonContainsSkillPredicate(SkillSet skillSet) {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"        this.skillSet \u003d skillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        return person.getSkillSet().hasSkills(this.skillSet);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"                || (other instanceof PersonContainsSkillPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"                \u0026\u0026 skillSet.hasSameSkillSet(((PersonContainsSkillPredicate) other).skillSet)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"alexteo98":33}},{"path":"src/main/java/seedu/address/model/team/Skill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":" * Represents a Skill in the address book.","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidSkillName(String)}","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"public class Skill {","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String NAME_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"        \"Skill names should be alphanumeric word(s) that can contain special characters #, +, and -\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"    //The regex below checks for skill name constraints dexcribed in NAME_CONSTRAINTS above.","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String NAME_VALIDATION_REGEX \u003d \"[\\\\w|\\\\d|\\\\s#+-]+\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    public static final String PROFICIENCY_CONSTRAINTS_RANGE \u003d \"Skill proficiency should be within range of 1-100\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public static final String PROFICIENCY_CONSTRAINTS_INTEGER \u003d \"Skill proficiency must be an integer\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    public static final String PROFICIENCY_VALIDATION_BETWEEN_0_TO_100 \u003d \"^[0-9]$|^[1-9][0-9]$|^(100)$\";","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    public static final String PROFICIENCY_VALIDATION_ONLY_INTEGERS \u003d \"^[0-9]+$\";","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    public static final String SKILL_INPUT_CONSTRAINTS \u003d \"Skill input should be: Skill Name_Skill proficiency. eg: \"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        + \"Java_50\";","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    public final String skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    public final int skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"     * Constructs a {@code Skill}.","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"     * @param skillName        A valid skill name.","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"     * @param skillProficiency A valid skill proficiency.","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    public Skill(String skillName, int skillProficiency) {","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        requireNonNull(skillName);","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        checkArgument(isValidSkillName(skillName), NAME_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        checkArgument(isValidSkillProficiencyRange(skillProficiency), PROFICIENCY_CONSTRAINTS_RANGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        this.skillName \u003d skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        this.skillProficiency \u003d skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"     * Constructs a {@code Skill}.","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"     * @param skillName A valid skill name.","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"    public Skill(String skillName) {","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        requireNonNull(skillName);","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        checkArgument(isValidSkillName(skillName), NAME_CONSTRAINTS);","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"        this.skillName \u003d skillName;","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        this.skillProficiency \u003d 0;","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"     * Returns true if a given string is a valid skill name.","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"    public static boolean isValidSkillName(String test) {","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        return test.matches(NAME_VALIDATION_REGEX);","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"     * Returns true if a given int is a valid skill proficiency level.","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"    public static boolean isValidSkillProficiencyRange(int test) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        String testInt \u003d String.valueOf(test);","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        return testInt.matches(PROFICIENCY_VALIDATION_BETWEEN_0_TO_100);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"     * Returns true if given String contains only integers","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"    public static boolean isValidSkillProficiencyInteger(String test) {","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        return test.matches(PROFICIENCY_VALIDATION_ONLY_INTEGERS);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"    public boolean isSameSkill(Skill skill) {","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        return this.skillName.equalsIgnoreCase(skill.skillName);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"            || (other instanceof Skill // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"            \u0026\u0026 skillName.equals(((Skill) other).skillName)","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"            \u0026\u0026 skillProficiency \u003d\u003d ((Skill) other).skillProficiency); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"        String combined \u003d String.format(\"%s_%d\", skillName, skillProficiency);","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"        return combined.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"[%s, %d]\", skillName, skillProficiency);","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"alexteo98":16,"tzhan98":78,"B1LLP4RK":5}},{"path":"src/main/java/seedu/address/model/team/SkillSet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":" * Encapsulates the set of skills that can be done by a particular {@code Person}.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"public class SkillSet {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    private Set\u003cSkill\u003e skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public SkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        this.skillSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"     * Construtor for SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"     * @param skillSet Set containing Skills","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    public SkillSet(Set\u003cSkill\u003e skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        requireAllNonNull(skillSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        this.skillSet \u003d skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"     * Constructor for SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"     * @param skillSet SkillSet of skills","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    public SkillSet(SkillSet skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        requireAllNonNull(skillSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        this.skillSet \u003d skillSet.getSkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"     * Returns the skill proficiency of the person for the given skill,","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"     * or 0 if the person does not have the skill.","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"     * @param skill Skill of person to get proficiency of.","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"     * @return Skill proficiency of the person.","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"    public int getSkillProficiency(Skill skill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        for (Skill s: skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"            if (s.isSameSkill(skill)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"                return s.skillProficiency;","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        return 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"     * Returns true if the person contains the skill, false otherwise.","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"     * @param skill The skill to check if the person possess.","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"     * @return True if the person has the skill, false otherwise.","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"    public boolean hasSkill(Skill skill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"        requireAllNonNull(skill);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"        for (Skill s : skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"            if (skill.isSameSkill(s)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"                return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"     * Returns true if the current SkillSet has all the skills inside the provided SkillSet.","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"     * @param skillset The SkillSet that contains all the skills that this SkillSet must possess.","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"     * @return True if this SkillSet contains all the skills, false otherwise.","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"    public boolean hasSkills(SkillSet skillset) {","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"        requireAllNonNull(skillset);","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"        return skillset.getSkillSetInStream()","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"                .allMatch((this::hasSkill));","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"     * Adds all of provided skillSet into this skillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"     * @param additionalSkill skillSet to be added","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"    public void addAll(SkillSet additionalSkill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        removeSkillSet(additionalSkill);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"        Set\u003cSkill\u003e toAdd \u003d additionalSkill.getSkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"        skillSet.addAll(toAdd);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"     * Add a skill into this skillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     * @param additionalSkill Skill to be added","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"    public void add(Skill additionalSkill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"        removeSkill(additionalSkill);","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"        skillSet.add(additionalSkill);","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"     * Remove SkillSet if present in current SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"     * @param skillSetRemove SkillSet to remove","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"    public void removeSkillSet(SkillSet skillSetRemove) {","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"        for (Skill s : skillSetRemove.getSkillSet()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"            removeSkill(s);","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"     * Remove Skill if present in current SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"     * @param skill SkillSet to remove","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"    public void removeSkill(Skill skill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"        Skill toRemove \u003d getSkill(skill);","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"        if (toRemove \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"            return;","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"        this.skillSet.remove(toRemove);","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"     * Get the skill with provided Skill in SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"tzhan98"},"content":"     * @param skillToGet skill to get from SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"tzhan98"},"content":"     * @return Skill in SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"tzhan98"},"content":"    public Skill getSkill(Skill skillToGet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"        if (!this.hasSkill(skillToGet)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"            for (Skill s : skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"tzhan98"},"content":"                if (skillToGet.isSameSkill(s)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"tzhan98"},"content":"                    return s;","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"tzhan98"},"content":"        return null;","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"tzhan98"},"content":"    public Set\u003cSkill\u003e getSkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"tzhan98"},"content":"        return skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"tzhan98"},"content":"     * Returns Skill in stream","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"tzhan98"},"content":"     * @return A stream of Skill","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"tzhan98"},"content":"    public Stream\u003cSkill\u003e getSkillSetInStream() {","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"tzhan98"},"content":"        return skillSet.stream();","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"tzhan98"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"tzhan98"},"content":"        return this.skillSet.size();","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"tzhan98"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"tzhan98"},"content":"        if (!skillSet.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"tzhan98"},"content":"            builder.append(\"; Skills: \");","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"tzhan98"},"content":"            skillSet.forEach(builder::append);","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"tzhan98"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"tzhan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"tzhan98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"tzhan98"},"content":"                || (other instanceof SkillSet // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"tzhan98"},"content":"                \u0026\u0026 this.skillSet.equals(((SkillSet) other).getSkillSet())); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"tzhan98"},"content":"     * Checks if another SkillSet has the same Skill name as the current SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"tzhan98"},"content":"     * @param other SkillSet to compare to","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"tzhan98"},"content":"     * @return true if entered SkillSet has the same Skill names as current, false otherwise","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"tzhan98"},"content":"    public boolean hasSameSkillSet(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"tzhan98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"tzhan98"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"tzhan98"},"content":"        } else if (!(other instanceof SkillSet)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"tzhan98"},"content":"        SkillSet otherSkillSet \u003d (SkillSet) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"tzhan98"},"content":"        if (otherSkillSet.getSize() !\u003d this.getSize()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"tzhan98"},"content":"        int sameSkill \u003d 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"tzhan98"},"content":"        for (Skill s : otherSkillSet.getSkillSet()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"tzhan98"},"content":"            if (this.hasSkill(s)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"tzhan98"},"content":"                sameSkill++;","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"tzhan98"},"content":"        return sameSkill \u003d\u003d this.getSize();","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"alexteo98":12,"tzhan98":181,"B1LLP4RK":3}},{"path":"src/main/java/seedu/address/model/team/Team.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":" * Represents a Team in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTeamName(String)}","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"public class Team {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"teams names should be alphanumeric word(s)\";","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"    // The REGEX below is the regex that checks for the team name constraint mentioned on MESSAGE_CONSTRAINTS","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\d|\\\\w|\\\\s]+\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"    public final String teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"     * Constructs a {@code team}.","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"     * @param teamName A valid team name.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"    public Team(String teamName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"        checkArgument(isValidTeamName(teamName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"     * Returns true if a given string is a valid team name.","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"    public static boolean isValidTeamName(String test) {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"                || (other instanceof Team // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"                \u0026\u0026 teamName.equals(((Team) other).teamName)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"        return teamName.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"        return \u0027[\u0027 + teamName + \u0027]\u0027;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"B1LLP4RK":55}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Alex Teo\"), new Phone(\"87438807\"), new Email(\"alexteo@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"alexteo98\"), getTeamSet(\"friends\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"C_50\"), false),","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Junha Park\"), new Phone(\"91031282\"), new Email(\"billpark@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"B1LLP4RK\"), getTeamSet(\"family\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"Java_70\"), true),","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Lye Jia Yang\"), new Phone(\"99272758\"), new Email(\"lyejy@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"Jiaaa-yang\"), getTeamSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"C_90\"), false),","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Melvin Chan\"), new Phone(\"93210283\"), new Email(\"mchan@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"MelvinCZJ\"), getTeamSet(\"neighbours\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"Bash_50\"), false),","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Toh Zhan Qing\"), new Phone(\"92492021\"), new Email(\"tohzq@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"tzhan98\"), getTeamSet(\"classmates\"),","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"C_50\"), false),","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"     * Returns a team set containing the list of strings given.","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"    public static Set\u003cTeam\u003e getTeamSet(String... strings) {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"                .map(Team::new)","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     * Returns a skill set containing the list of strings given.","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"    public static SkillSet getSkillSet(String... strings) {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        return new SkillSet(Arrays.stream(strings)","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"                .map(x -\u003e {","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"                    try {","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"                        return ParserUtil.parseSkill(x);","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"                        e.printStackTrace();","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"                        return null;","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"                    }","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"                })","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"                .collect(Collectors.toSet()));","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tzhan98":19,"B1LLP4RK":4,"-":37,"Jiaaa-yang":16}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String username;","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    private final boolean isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"    private final List\u003cJsonAdaptedTeam\u003e teamSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    private final List\u003cJsonAdaptedSkill\u003e skillSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"username\") String username,","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"            @JsonProperty(\"isPotentialTeammate\") boolean isPotentialTeammate,","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"            @JsonProperty(\"teams\") List\u003cJsonAdaptedTeam\u003e teamSet,","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"            @JsonProperty(\"skillSet\") List\u003cJsonAdaptedSkill\u003e skillSet) {","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"        this.username \u003d username;","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isPotentialTeammate \u003d isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"        if (teamSet !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"            this.teamSet.addAll(teamSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        if (skillSet !\u003d null) {","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"            this.skillSet.addAll(skillSet);","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        username \u003d source.getGithubUsername().value;","lastModifiedDate":"2022-03-01"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        isPotentialTeammate \u003d source.isPotentialTeammate();","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"        teamSet.addAll(source.getTeams().stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"B1LLP4RK"},"content":"                .map(JsonAdaptedTeam::new)","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        skillSet.addAll(source.getSkillSet().getSkillSetInStream()","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"                .map(JsonAdaptedSkill::new)","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"B1LLP4RK"},"content":"        final List\u003cTeam\u003e personTeams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        final List\u003cSkill\u003e personSkillSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"        for (JsonAdaptedTeam team : teamSet) {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"            personTeams.add(team.toModelType());","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"        for (JsonAdaptedSkill skill : skillSet) {","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"            personSkillSet.add(skill.toModelType());","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"        if (username \u003d\u003d null) {","lastModifiedDate":"2022-03-01"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"                    GithubUsername.class.getSimpleName()));","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!GithubUsername.isValidUsername(username)) {","lastModifiedDate":"2022-03-01"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalValueException(GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        final GithubUsername modelGithubUsername \u003d new GithubUsername(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"B1LLP4RK"},"content":"        final Set\u003cTeam\u003e modelTeams \u003d new HashSet\u003c\u003e(personTeams);","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"tzhan98"},"content":"        final Set\u003cSkill\u003e modelSkillInSet \u003d new HashSet\u003c\u003e(personSkillSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"        final SkillSet modelSkill \u003d new SkillSet(modelSkillInSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelGithubUsername,","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"                modelTeams, modelSkill, isPotentialTeammate);","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tzhan98":13,"B1LLP4RK":12,"-":91,"Jiaaa-yang":17}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSkill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":" * Jackson-friendly version of {@link Skill}.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"public class JsonAdaptedSkill {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    private final String skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    private final int skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"     * Constructs a {@code JsonAdaptedSkill} with the given {@code skillName}.","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    public JsonAdaptedSkill(String skillName, int skillProficiency) {","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        this.skillName \u003d skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        this.skillProficiency \u003d skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     * Converts a given {@code Skill} into this class for Jackson use.","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    public JsonAdaptedSkill(Skill source) {","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        skillName \u003d source.skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        skillProficiency \u003d source.skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"     * Converts a given string into this class for Jackson use.","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    @JsonCreator","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"    public JsonAdaptedSkill(String source) {","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        String[] skillInfo \u003d source.split(\"_\");","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        skillName \u003d skillInfo[0];","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"        skillProficiency \u003d Integer.parseInt(skillInfo[1]);","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    @JsonValue","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"    public String getSkillValue() {","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"%s_%d\", skillName, skillProficiency);","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"     * Converts this Jackson-friendly adapted skill object into the model\u0027s {@code Skill} object.","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted skill.","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"    public Skill toModelType() throws IllegalValueException {","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        if (!Skill.isValidSkillName(skillName)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"            throw new IllegalValueException(Skill.NAME_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        if (!Skill.isValidSkillProficiencyRange(skillProficiency)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"            throw new IllegalValueException(Skill.PROFICIENCY_CONSTRAINTS_RANGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"        return new Skill(skillName, skillProficiency);","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"tzhan98":63,"B1LLP4RK":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTeam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":" * Jackson-friendly version of {@link seedu.address.model.team.Team}.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"class JsonAdaptedTeam {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"    private final String teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"     * Constructs a {@code JsonAdaptedTeam} with the given {@code teamName}.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"    public JsonAdaptedTeam(String teamName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"     * Converts a given {@code Team} into this class for Jackson use.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"    public JsonAdaptedTeam(Team source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"        teamName \u003d source.teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"    @JsonValue","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"    public String getTeamName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"        return teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"     * Converts this Jackson-friendly adapted team object into the model\u0027s {@code Team} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted team.","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"    public Team toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"        if (!Team.isValidTeamName(teamName)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"            throw new IllegalValueException(Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"        return new Team(teamName);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"B1LLP4RK":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"        String addressBookStr \u003d \"\";","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        for (JsonAdaptedPerson person : persons) {","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            addressBookStr +\u003d person.toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        return addressBookStr;","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tzhan98":9,"-":60}},{"path":"src/main/java/seedu/address/storage/UserInputHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"public class UserInputHistory {","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"    private final List\u003cString\u003e list;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"    private int index;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"     * Creates a new TextFieldStorage.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    public UserInputHistory() {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"        this.list.add(\"\");","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"        this.index \u003d 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Adds user inputs to list.","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * @param userInput String input from the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    public void add(String userInput) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"        this.index \u003d this.list.size() - 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"        this.list.add(this.index, userInput);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"        this.index++;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns stored user input from list at current index.","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"    public String get() {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"        return this.list.get(this.index);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     * Decrements current index. Does nothing if index is at 0.","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"    public void up() {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.index \u003e 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"            this.index--;","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"     * Increments current index. Does nothing if index is at max list size - 1.","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"    public void down() {","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.index \u003c this.list.size() - 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"            this.index++;","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"MelvinCZJ":55}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"import seedu.address.storage.UserInputHistory;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    private final UserInputHistory userInputHistory;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"        // commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"        this.commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, this::handleUpAndDownArrowKeysPressed);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"        this.userInputHistory \u003d new UserInputHistory();","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"        this.userInputHistory.add(commandText);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"     * Handles the up and down arrow keys pressed event.","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"    private void handleUpAndDownArrowKeysPressed (KeyEvent event) {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"        if (event.getCode().isArrowKey()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"            case UP:","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"                this.userInputHistory.up();","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"                break;","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"            case DOWN:","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"                this.userInputHistory.down();","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"                break;","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"            default:","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"                break;","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"            commandTextField.setText(this.userInputHistory.get());","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":82,"MelvinCZJ":28}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"        personListPanel \u003d new PersonListPanel(logic.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":195,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    private VBox personCard;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    private Hyperlink githubUsername;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"    private FlowPane teams;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"    private FlowPane skillSet;","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        if (person.isPotentialTeammate()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"            // Add highlight class to potential teammates","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"            personCard.getStyleClass().add(\"highlight\");","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername username \u003d person.getGithubUsername();","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        githubUsername.setText(username.getGithubHandle());","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        HostServices hs \u003d MainApp.getHS();","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        githubUsername.setOnAction(e -\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"            hs.showDocument(username.getGithubProfileLink());","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"        });","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"        teams.getStyleClass().add(\"teamSet\");","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"B1LLP4RK"},"content":"        person.getTeams().stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"B1LLP4RK"},"content":"            .sorted(Comparator.comparing(team -\u003e team.teamName))","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"            .forEach(team -\u003e teams.getChildren().add(new Label(team.teamName)));","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        person.getSkillSet().getSkillSetInStream()","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"            .sorted(Comparator.comparing(skill -\u003e skill.skillName))","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"            .forEach(skill -\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"                Label skillLabel \u003d new Label(skill.skillName);","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"                if (skill.skillProficiency \u003e 80) {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"                    skillLabel.setStyle(\"-fx-background-color: #00ff00\");","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"                } else if (skill.skillProficiency \u003e 50) {","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"                    skillLabel.setStyle(\"-fx-background-color: #33cc33\");","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"                } else if (skill.skillProficiency \u003e 20) {","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"                    skillLabel.setStyle(\"-fx-background-color: #248f24\");","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"                } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"                    skillLabel.setStyle(\"-fx-background-color: #006622\");","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"                skillSet.getChildren().add(skillLabel);","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"            });","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tzhan98":17,"B1LLP4RK":4,"-":71,"Jiaaa-yang":22}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"Jiaaa-yang"},"content":".cell_hyperlink {","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-underline: true;","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-text-fill: #00C9FF;","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"Jiaaa-yang"},"content":".cell_hyperlink:visited {","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-text-fill: #0080FF;","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":364,"author":{"gitId":"Jiaaa-yang"},"content":".highlight {","lastModifiedDate":"2022-03-19"},{"lineNumber":365,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-background-color: #789395;","lastModifiedDate":"2022-03-19"},{"lineNumber":366,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-border-color: white;","lastModifiedDate":"2022-03-19"},{"lineNumber":367,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-19"},{"lineNumber":368,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":369,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":370,"author":{"gitId":"tzhan98"},"content":"#skillSet {","lastModifiedDate":"2022-03-18"},{"lineNumber":371,"author":{"gitId":"tzhan98"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-18"},{"lineNumber":372,"author":{"gitId":"tzhan98"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-18"},{"lineNumber":373,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-18"},{"lineNumber":374,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":375,"author":{"gitId":"tzhan98"},"content":"#skillSet .label {","lastModifiedDate":"2022-03-18"},{"lineNumber":376,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-27"},{"lineNumber":377,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-27"},{"lineNumber":378,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-27"},{"lineNumber":379,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-27"},{"lineNumber":380,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-27"},{"lineNumber":381,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":382,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"Jiaaa-yang"},"content":".teamSet {","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-padding: 2 0 2 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":386,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":387,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":388,"author":{"gitId":"Jiaaa-yang"},"content":".teamSet .label {","lastModifiedDate":"2022-03-27"},{"lineNumber":389,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-27"},{"lineNumber":390,"author":{"gitId":"tzhan98"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-18"},{"lineNumber":391,"author":{"gitId":"tzhan98"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-18"},{"lineNumber":392,"author":{"gitId":"tzhan98"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-18"},{"lineNumber":393,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-background-color: #4D96FF;","lastModifiedDate":"2022-03-27"},{"lineNumber":394,"author":{"gitId":"tzhan98"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-18"},{"lineNumber":395,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"tzhan98":11,"-":352,"Jiaaa-yang":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"         title\u003d\"HackNet\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":59,"Jiaaa-yang":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003cVBox id\u003d\"personCard\" fx:id\u003d\"personCard\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"      \u003cFlowPane fx:id\u003d\"teams\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"      \u003cFlowPane fx:id\u003d\"skillSet\" /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"      \u003cHyperlink fx:id\u003d\"githubUsername\" styleClass\u003d\"cell_hyperlink\" text\u003d\"\\$githubUsername\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tzhan98":1,"B1LLP4RK":1,"-":33,"Jiaaa-yang":3}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_FOR_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"                + USERNAME_DESC_AMY + SKILL_DESC_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTeams().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"    public void getDisplayPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getDisplayPersonList().remove(0));","lastModifiedDate":"2022-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tzhan98":2,"B1LLP4RK":3,"-":155,"Jiaaa-yang":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"Jiaaa-yang"},"content":"        public ObservableList\u003cPerson\u003e getDisplayPersonList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"Jiaaa-yang"},"content":"        public void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"Jiaaa-yang"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":153,"author":{"gitId":"Jiaaa-yang"},"content":"        public void updateDisplayPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-05"},{"lineNumber":154,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":156,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":157,"author":{"gitId":"Jiaaa-yang"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":158,"author":{"gitId":"Jiaaa-yang"},"content":"        public void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate, Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-05"},{"lineNumber":159,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":160,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":161,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":192,"Jiaaa-yang":14}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String VALID_USERNAME_AMY \u003d \"amybee-123\";","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String VALID_USERNAME_BOB \u003d \"bobbybob99\";","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALID_TEAM_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALID_TEAM_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    public static final String VALID_SKILL_C \u003d \"C_33\";","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"    public static final String VALID_SKILL_PYTHON \u003d \"python_90\";","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String USERNAME_DESC_AMY \u003d \" \" + PREFIX_GITHUB_USERNAME + VALID_USERNAME_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String USERNAME_DESC_BOB \u003d \" \" + PREFIX_GITHUB_USERNAME + VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String TEAM_DESC_FRIEND \u003d \" \" + PREFIX_TEAM + VALID_TEAM_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String TEAM_DESC_HUSBAND \u003d \" \" + PREFIX_TEAM + VALID_TEAM_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"    public static final String SKILL_DESC_C \u003d \" \" + PREFIX_SKILL + VALID_SKILL_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"    public static final String SKILL_DESC_PYTHON \u003d \" \" + PREFIX_SKILL + VALID_SKILL_PYTHON;","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String INVALID_USERNAME_DESC \u003d \" \" + PREFIX_GITHUB_USERNAME + \"amy_cho\"; // \u0027_\u0027 not allowed","lastModifiedDate":"2022-03-01"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String INVALID_TEAM_DESC \u003d \" \" + PREFIX_TEAM + \"hubby*\"; // \u0027*\u0027 not allowed in s","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    public static final String INVALID_SKILL_DESC \u003d \" \" + PREFIX_SKILL + \"Python*_1\"; // \u0027*\u0027 not allowed in skills","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withGithubUsername(VALID_USERNAME_AMY)","lastModifiedDate":"2022-03-01"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"                .withTeams(VALID_TEAM_FRIEND).withSkillSet(VALID_SKILL_C).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withGithubUsername(VALID_USERNAME_BOB)","lastModifiedDate":"2022-03-01"},{"lineNumber":75,"author":{"gitId":"B1LLP4RK"},"content":"                .withTeams(VALID_TEAM_HUSBAND, VALID_TEAM_FRIEND).withSkillSet(VALID_SKILL_PYTHON).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedFilteredList, actualModel.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getDisplayPersonList().size());","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d model.getDisplayPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(1, model.getDisplayPersonList().size());","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tzhan98":6,"B1LLP4RK":8,"-":106,"Jiaaa-yang":14}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        Person personToDelete \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getDisplayPersonList().size() + 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        Person personToDelete \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(p -\u003e false);","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(model.getDisplayPersonList().isEmpty());","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"B1LLP4RK":2,"-":102,"Jiaaa-yang":5}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isResetmode \u003d true;","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor, isResetmode);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(model.getDisplayPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getDisplayPersonList().size());","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        Person lastPerson \u003d model.getDisplayPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"                .withTeams(VALID_TEAM_HUSBAND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"                .withPhone(VALID_PHONE_BOB).withTeams(VALID_TEAM_HUSBAND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor(), true);","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"        Person editedPerson \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"        Person personInFilteredList \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"B1LLP4RK"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), true);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(model.getDisplayPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        Person firstPerson \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"B1LLP4RK"},"content":"                new EditPersonDescriptorBuilder(personInList).build(), true);","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getDisplayPersonList().size() + 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"B1LLP4RK"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), true);","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"B1LLP4RK"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"B1LLP4RK"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY, true)));","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"B1LLP4RK"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB, true)));","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"tzhan98":1,"B1LLP4RK":18,"-":146,"Jiaaa-yang":8}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withGithubUsername(VALID_USERNAME_BOB).build();","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"        // different s -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTeams(VALID_TEAM_HUSBAND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"B1LLP4RK":3,"-":53,"Jiaaa-yang":2}},{"path":"src/test/java/seedu/address/logic/commands/FilterSkillCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"class FilterSkillCommandTest {","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    public void equals() {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet1 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        skillSet1.add(new Skill(\"skill1\", 40));","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet2 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        skillSet2.add(new Skill(\"skill2\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet3 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        skillSet3.add(new Skill(\"skill1\", 90));","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"                new PersonContainsSkillPredicate(skillSet1);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"                new PersonContainsSkillPredicate(skillSet2);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"                new PersonContainsSkillPredicate(skillSet3);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand filterFirstSkillCommand \u003d new FilterSkillCommand(firstPredicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand filterSecondSkillCommand \u003d new FilterSkillCommand(secondPredicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand filterThirdSkillCommand \u003d new FilterSkillCommand(thirdPredicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        assertTrue(filterFirstSkillCommand.equals(filterFirstSkillCommand));","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand filterFirstSkillCommandCopy \u003d new FilterSkillCommand(firstPredicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        assertTrue(filterFirstSkillCommandCopy.equals(filterFirstSkillCommandCopy));","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        // same skills, different proficiency -\u003e returns true","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"        assertTrue(filterFirstSkillCommand.equals(filterThirdSkillCommand));","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        assertFalse(filterFirstSkillCommand.equals(1));","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"        assertFalse(filterFirstSkillCommand.equals(null));","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        assertFalse(filterFirstSkillCommand.equals(filterSecondSkillCommand));","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d preparePredicate(\"NONE\");","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand command \u003d new FilterSkillCommand(predicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Collections.emptyList(), model.getDisplayPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"    public void execute_singleSkill_multiplePersonsFound() {","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d preparePredicate(\"C\");","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand command \u003d new FilterSkillCommand(predicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE, GEORGE), model.getDisplayPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"     * Parses {@code userInput} into a {@code PersonContainsSkillPredicate}.","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"    private PersonContainsSkillPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(new Skill(userInput));","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"        return new PersonContainsSkillPredicate(skillSet);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alexteo98":94,"B1LLP4RK":1,"Jiaaa-yang":4}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Collections.emptyList(), model.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":79,"Jiaaa-yang":4}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        assertCommandSuccess(new HelpCommand(\"\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tzhan98":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/MakeTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":" * {@code MakeTeamCommand}.","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"public class MakeTeamCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_addValidIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MakeTeamCommand.MESSAGE_ADD_TEAMMATE_SUCCESS, person);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        Person expectedPerson \u003d new PersonBuilder(expectedModel.getDisplayPersonList().get(0))","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"                .isPotentialTeammate(true).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(person, expectedPerson);","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(makeTeamCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_removeValidIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d model.getDisplayPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_THIRD_PERSON, MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MakeTeamCommand.MESSAGE_REMOVE_TEAMMATE_SUCCESS, person);","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        Person expectedPerson \u003d new PersonBuilder(expectedModel.getDisplayPersonList().get(2))","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"                .isPotentialTeammate(false).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(person, expectedPerson);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(makeTeamCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_addPersonThatIsAlreadyPotentialTeammate_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        // Third person in TypicalPersons.java is already a potential teammate","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_THIRD_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d MakeTeamCommand.MESSAGE_REDUNDANT_ADDING;","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandFailure(makeTeamCommand, model, expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_removePersonThatIsNotPotentialTeammate_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        // Second person in TypicalPersons.java is not a potential teammate","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_SECOND_PERSON, MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d MakeTeamCommand.MESSAGE_REDUNDANT_REMOVAL;","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandFailure(makeTeamCommand, model, expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getDisplayPersonList().size() + 1);","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(outOfBoundIndex, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(makeTeamCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MakeTeamCommand.MESSAGE_ADD_TEAMMATE_SUCCESS, person);","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"        Person expectedPerson \u003d new PersonBuilder(expectedModel.getDisplayPersonList().get(0))","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"                .isPotentialTeammate(true).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(person, expectedPerson);","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(makeTeamCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(outOfBoundIndex, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(makeTeamCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand addFirstPerson \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand removeFirstPerson \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand addSecondPerson \u003d new MakeTeamCommand(INDEX_SECOND_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(addFirstPerson.equals(addFirstPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"        // same index and action -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand addFirstPersonCopy \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(addFirstPersonCopy.equals(addFirstPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand removePersonCopy \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(removeFirstPerson.equals(removePersonCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"Jiaaa-yang"},"content":"        // different action same index -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(addFirstPerson.equals(removeFirstPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"Jiaaa-yang"},"content":"        // different index same action -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(addFirstPerson.equals(addSecondPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"Jiaaa-yang"},"content":"        // different index different action -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(removeFirstPerson.equals(addSecondPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"B1LLP4RK":2,"Jiaaa-yang":138}},{"path":"src/test/java/seedu/address/logic/commands/ShowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"class ShowCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute() {","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        ShowCommand command \u003d new ShowCommand();","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d ShowCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(Model.PREDICATE_SHOW_POTENTIAL_TEAMMATES);","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL), model.getDisplayPersonList());","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Jiaaa-yang":32}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"class SortCommandTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet1 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet2 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill firstSkill \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill secondSkill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        skillSet1.add(firstSkill);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        skillSet2.add(secondSkill);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate firstPredicate \u003d new PersonContainsSkillPredicate(skillSet1);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate secondPredicate \u003d new PersonContainsSkillPredicate(skillSet2);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator firstComp \u003d new PersonBySkillProficiencyComparator(firstSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator secondComp \u003d new PersonBySkillProficiencyComparator(secondSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        SortCommand sortCommand \u003d new SortCommand(firstPredicate, firstComp);","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(sortCommand.equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(sortCommand.equals(1));","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        // same predicate and comparator -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(new SortCommand(firstPredicate, firstComp).equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        // diff predicate but same comparator -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(new SortCommand(secondPredicate, firstComp).equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        // same predicate but diff comparator -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(new SortCommand(firstPredicate, secondComp).equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        // diff predicate and diff comparator -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(new SortCommand(secondPredicate, secondComp).equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_invalidSkill_noPersonFound() {","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        SkillSet invalidSkillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill invalidSkill \u003d new Skill(\"abcdef\");","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        invalidSkillSet.add(invalidSkill);","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d new PersonContainsSkillPredicate(invalidSkillSet);","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comp \u003d new PersonBySkillProficiencyComparator(invalidSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"        SortCommand command \u003d new SortCommand(predicate, comp);","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate, comp);","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Collections.emptyList(), model.getDisplayPersonList());","lastModifiedDate":"2022-03-07"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_validSkill_filtersAndSortsDisplayPersonList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill skill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(skill);","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d new PersonContainsSkillPredicate(skillSet);","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comp \u003d new PersonBySkillProficiencyComparator(skill);","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"        SortCommand command \u003d new SortCommand(predicate, comp);","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate, comp);","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Arrays.asList(ELLE, GEORGE, ALICE), model.getDisplayPersonList());","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"alexteo98":17,"B1LLP4RK":1,"Jiaaa-yang":84}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TEAM_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_USERNAME_DESC;","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_PYTHON;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTeams(VALID_TEAM_FRIEND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_FRIEND + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_FRIEND + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_FRIEND + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_FRIEND + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_AMY","lastModifiedDate":"2022-03-01"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_FRIEND + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"        // multiple teams - all accepted","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPersonMultipleTeams \u003d new PersonBuilder(BOB).withTeams(VALID_TEAM_FRIEND, VALID_TEAM_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_HUSBAND + TEAM_DESC_FRIEND + SKILL_DESC_PYTHON, new AddCommand(expectedPersonMultipleTeams));","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"B1LLP4RK"},"content":"        // zero teams","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTeams().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"                + USERNAME_DESC_AMY + SKILL_DESC_C,","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + USERNAME_DESC_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_USERNAME_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_USERNAME_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":117,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_HUSBAND + TEAM_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":121,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_HUSBAND + TEAM_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":125,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_HUSBAND + TEAM_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_USERNAME_DESC","lastModifiedDate":"2022-03-01"},{"lineNumber":129,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_HUSBAND + TEAM_DESC_FRIEND, GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"B1LLP4RK"},"content":"        // invalid team","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":133,"author":{"gitId":"B1LLP4RK"},"content":"            + INVALID_TEAM_DESC + VALID_TEAM_FRIEND, Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_USERNAME_DESC,","lastModifiedDate":"2022-03-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"B1LLP4RK"},"content":"                + USERNAME_DESC_BOB + TEAM_DESC_HUSBAND + TEAM_DESC_FRIEND,","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tzhan98":4,"B1LLP4RK":24,"-":98,"Jiaaa-yang":18}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.MakeTeamCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseCommand_editResetMode() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" -r \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor, true), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseCommand_editDefaultMode() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor, false), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \"\") instanceof HelpCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill skill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        skillSet.add(skill);","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonContainsSkillPredicate predicate \u003d new PersonContainsSkillPredicate(skillSet);","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(skill);","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        SortCommand expectedCommand \u003d new SortCommand(predicate, comparator);","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedCommand, parser.parseCommand(SortCommand.COMMAND_WORD + \" C\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseCommand_makeTeamCommandAdd() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand command \u003d (MakeTeamCommand) parser.parseCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"                MakeTeamCommand.COMMAND_WORD_ADD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD), command);","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseCommand_makeTeamCommandRemove() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand command \u003d (MakeTeamCommand) parser.parseCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"                MakeTeamCommand.COMMAND_WORD_REMOVE + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.REMOVE), command);","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseCommand_show() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(parser.parseCommand(ShowCommand.COMMAND_WORD) instanceof ShowCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(parser.parseCommand(ShowCommand.COMMAND_WORD + \" 3\") instanceof ShowCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tzhan98":2,"B1LLP4RK":8,"-":102,"Jiaaa-yang":37}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TEAM_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_USERNAME_DESC;","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String TEAM_EMPTY \u003d \" \" + PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, \"1\" + INVALID_USERNAME_DESC,","lastModifiedDate":"2022-03-01"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"                GithubUsername.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-01"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TEAM_DESC, Team.MESSAGE_CONSTRAINTS); // invalid team","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"B1LLP4RK"},"content":"        // while parsing {@code PREFIX_TEAM} alone will reset the teams of the {@code Person} being edited,","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"B1LLP4RK"},"content":"        // parsing it together with a valid team results in error","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1\" + TEAM_DESC_FRIEND + TEAM_DESC_HUSBAND + TEAM_EMPTY, Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1\" + TEAM_DESC_FRIEND + TEAM_EMPTY + TEAM_DESC_HUSBAND, Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1\" + TEAM_EMPTY + TEAM_DESC_FRIEND + TEAM_DESC_HUSBAND, Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-01"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"                parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_USERNAME_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"B1LLP4RK"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TEAM_DESC_HUSBAND","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"B1LLP4RK"},"content":"                + EMAIL_DESC_AMY + USERNAME_DESC_AMY + NAME_DESC_AMY + TEAM_DESC_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withGithubUsername(VALID_USERNAME_AMY)","lastModifiedDate":"2022-03-01"},{"lineNumber":118,"author":{"gitId":"B1LLP4RK"},"content":"                .withTeams(VALID_TEAM_HUSBAND, VALID_TEAM_FRIEND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"Jiaaa-yang"},"content":"        userInput \u003d targetIndex.getOneBased() + USERNAME_DESC_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":159,"author":{"gitId":"Jiaaa-yang"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGithubUsername(VALID_USERNAME_AMY).build();","lastModifiedDate":"2022-03-01"},{"lineNumber":160,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"B1LLP4RK"},"content":"        // teams","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"B1LLP4RK"},"content":"        userInput \u003d targetIndex.getOneBased() + TEAM_DESC_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"B1LLP4RK"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTeams(VALID_TEAM_FRIEND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"Jiaaa-yang"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + USERNAME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-01"},{"lineNumber":174,"author":{"gitId":"B1LLP4RK"},"content":"                + TEAM_DESC_FRIEND + PHONE_DESC_AMY + USERNAME_DESC_AMY + EMAIL_DESC_AMY + TEAM_DESC_FRIEND","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"B1LLP4RK"},"content":"                + PHONE_DESC_BOB + USERNAME_DESC_BOB + EMAIL_DESC_BOB + TEAM_DESC_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"Jiaaa-yang"},"content":"                .withEmail(VALID_EMAIL_BOB).withGithubUsername(VALID_USERNAME_BOB)","lastModifiedDate":"2022-03-01"},{"lineNumber":179,"author":{"gitId":"B1LLP4RK"},"content":"                .withTeams(VALID_TEAM_FRIEND, VALID_TEAM_HUSBAND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"Jiaaa-yang"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"Jiaaa-yang"},"content":"                .withGithubUsername(VALID_USERNAME_BOB).build();","lastModifiedDate":"2022-03-01"},{"lineNumber":199,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"B1LLP4RK"},"content":"    public void parse_resetTeams_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"B1LLP4RK"},"content":"        String userInput \u003d targetIndex.getOneBased() + TEAM_EMPTY;","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTeams().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"B1LLP4RK":37,"-":159,"Jiaaa-yang":17}},{"path":"src/test/java/seedu/address/logic/parser/FilterSkillCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.FilterSkillCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"class FilterSkillCommandParserTest {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    private FilterSkillCommandParser parser \u003d new FilterSkillCommandParser();","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterSkillCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    public void parse_validArgs_returnsFilterSkillCommand() {","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(new Skill(\"C\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand expectedFilterSkillCommand \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"                new FilterSkillCommand(new PersonContainsSkillPredicate(skillSet));","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        assertParseSuccess(parser, \"C\", expectedFilterSkillCommand);","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alexteo98":33,"B1LLP4RK":1}},{"path":"src/test/java/seedu/address/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    public void parse_validArgs() throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        //Exact same input","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        assertEquals(new HelpCommand(\"add\"), parser.parse(\"add\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        //Input with spacing","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        assertEquals(new HelpCommand(\"delete\"), parser.parse(\" delete \"));","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        //Input with uppercase characters","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        assertEquals(new HelpCommand(\"sort\"), parser.parse(\"SoRT\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    public void parse_invalidArgs() {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e parser.parse(\"NotInsideHelp\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e parser.parse(\"***\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tzhan98":34}},{"path":"src/test/java/seedu/address/logic/parser/MakeTeamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.MakeTeamCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"class MakeTeamCommandParserTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    private final MakeTeamCommandParser addCommandParser \u003d new MakeTeamCommandParser(MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    private final MakeTeamCommandParser removeCommandParser \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"            new MakeTeamCommandParser(MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_makeTeamCommandAddValidArgs_success() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        String validIndex \u003d \"1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(addCommandParser, validIndex,","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"                new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD));","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_makeTeamCommandRemoveValidArgs_success() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        String validIndex \u003d \"1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(removeCommandParser, validIndex,","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"                new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.REMOVE));","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_makeTeamCommandInvalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        String emptyIndex \u003d \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        String invalidIndex \u003d \"a\";","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(addCommandParser, emptyIndex,","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MakeTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(removeCommandParser, invalidIndex,","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MakeTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Jiaaa-yang":41}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String INVALID_USERNAME \u003d \"rach_el\";","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String INVALID_TEAM \u003d \"#friend\";","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    private static final String INVALID_SKILL_PROFICIENCY_TYPE \u003d \"good\";","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    private static final String INVALID_SKILL_PROFICIENCY_RANGE \u003d \"500\";","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String VALID_USERNAME \u003d \"rachel-walker\";","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String VALID_TEAM_1 \u003d \"friend\";","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String VALID_TEAM_2 \u003d \"neighbour\";","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"    private static final String VALID_SKILL \u003d \"Python\";","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"    private static final String VALID_SKILL_PREFIX \u003d \"_\";","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    private static final String VALID_SKILL_PROFICIENCY \u003d \"5\";","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseGithubUsername_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGithubUsername((String) null));","lastModifiedDate":"2022-03-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseGithubUsername_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGithubUsername(INVALID_USERNAME));","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseGithubUsername_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-03-01"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername expectedGithubUsername \u003d new GithubUsername(VALID_USERNAME);","lastModifiedDate":"2022-03-01"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedGithubUsername, ParserUtil.parseGithubUsername(VALID_USERNAME));","lastModifiedDate":"2022-03-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseGithubUsername_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-03-01"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_USERNAME + WHITESPACE;","lastModifiedDate":"2022-03-01"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername expectedGithubUsername \u003d new GithubUsername(VALID_USERNAME);","lastModifiedDate":"2022-03-01"},{"lineNumber":131,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedGithubUsername, ParserUtil.parseGithubUsername(addressWithWhitespace));","lastModifiedDate":"2022-03-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeam_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTeam(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeam_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTeam(INVALID_TEAM));","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeam_validValueWithoutWhitespace_returnsTeam() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"B1LLP4RK"},"content":"        Team expectedTeam \u003d new Team(VALID_TEAM_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(expectedTeam, ParserUtil.parseTeam(VALID_TEAM_1));","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeam_validValueWithWhitespace_returnsTrimmedTeam() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"B1LLP4RK"},"content":"        String teamWithWhitespace \u003d WHITESPACE + VALID_TEAM_1 + WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"B1LLP4RK"},"content":"        Team expectedTeam \u003d new Team(VALID_TEAM_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(expectedTeam, ParserUtil.parseTeam(teamWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeams_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTeams(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeams_collectionWithInvalidTeams_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTeams(Arrays.asList(VALID_TEAM_1, INVALID_TEAM)));","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeams_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"B1LLP4RK"},"content":"        assertTrue(ParserUtil.parseTeams(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeams_collectionWithValidTeams_returnsTeamSet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e actualTeamSet \u003d ParserUtil.parseTeams(Arrays.asList(VALID_TEAM_1, VALID_TEAM_2));","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e expectedTeamSet \u003d new HashSet\u003cTeam\u003e(Arrays.asList(new Team(VALID_TEAM_1), new Team(VALID_TEAM_2)));","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(expectedTeamSet, actualTeamSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"tzhan98"},"content":"    public void parseSkill_throwsParseException() throws Exception {","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"tzhan98"},"content":"        String invalidProficiencyRange \u003d VALID_SKILL + VALID_SKILL_PREFIX + INVALID_SKILL_PROFICIENCY_RANGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"tzhan98"},"content":"        String invalidProficiencyType \u003d VALID_SKILL + VALID_SKILL_PREFIX + INVALID_SKILL_PROFICIENCY_TYPE;","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"tzhan98"},"content":"        String invalidSkillInput1 \u003d VALID_SKILL + VALID_SKILL_PREFIX + VALID_SKILL_PROFICIENCY","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"tzhan98"},"content":"                + VALID_SKILL_PREFIX + VALID_SKILL;","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"tzhan98"},"content":"        String invalidSkillInput2 \u003d VALID_SKILL + VALID_SKILL_PREFIX;","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"tzhan98"},"content":"        String invalidSkillInput3 \u003d VALID_SKILL;","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidProficiencyRange));","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidProficiencyType));","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidSkillInput1));","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidSkillInput2));","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidSkillInput3));","lastModifiedDate":"2022-03-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"tzhan98":18,"B1LLP4RK":25,"-":161,"Jiaaa-yang":14}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.SortCommand.MESSAGE_INVALID_SKILL;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"class SortCommandParserTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_invalidSkillInput_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        // Multiple skill name","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"C\u0026Python\", String.format(MESSAGE_INVALID_SKILL, Skill.NAME_CONSTRAINTS));","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        // Non-alphanumeric skill name","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"C;_90\", String.format(MESSAGE_INVALID_SKILL, Skill.NAME_CONSTRAINTS));","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_validArgs_returnsSortCommand() {","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill skill \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(skill);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(new PersonContainsSkillPredicate(skillSet),","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"            new PersonBySkillProficiencyComparator(skill));","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(parser, \"Java\", expectedSortCommand);","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"alexteo98":5,"B1LLP4RK":3,"Jiaaa-yang":38}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).withTeams(","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"                VALID_TEAM_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).withTeams(","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"                VALID_TEAM_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"B1LLP4RK":5,"-":98,"Jiaaa-yang":1}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getDisplayPersonList().remove(0));","lastModifiedDate":"2022-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"        modelManager.updateDisplayPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"        modelManager.updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":129,"Jiaaa-yang":3}},{"path":"src/test/java/seedu/address/model/person/GithubUsernameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"public class GithubUsernameTest {","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GithubUsername(null));","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public void constructor_invalidUsername_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        String invalidUsername \u003d \"\";","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GithubUsername(invalidUsername));","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    public void isValidGithubUsername() {","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        // null username","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(NullPointerException.class, () -\u003e GithubUsername.isValidUsername(null));","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        // invalid usernames","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(GithubUsername.isValidUsername(\"\")); // empty string","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(GithubUsername.isValidUsername(\" \")); // spaces only","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(GithubUsername.isValidUsername(\"alex_doe\")); // contains illegal character","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        // valid usernames","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(GithubUsername.isValidUsername(\"johndoe\")); // characters only","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(GithubUsername.isValidUsername(\"amy-baller-123\")); // alphanumeric with hyphen","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(GithubUsername.isValidUsername(\"12345\")); // only numbers","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public void getGithubHandle() {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername firstUsername \u003d new GithubUsername(\"johndoe\");","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(firstUsername.getGithubHandle(), \"@johndoe\");","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername secondUsername \u003d new GithubUsername(\"amy-123\");","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(secondUsername.getGithubHandle(), \"@amy-123\");","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    public void getGithubProfileLink() {","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername firstUsername \u003d new GithubUsername(\"johndoe\");","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(firstUsername.getGithubProfileLink(), \"https://github.com/johndoe\");","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername secondUsername \u003d new GithubUsername(\"amy-123\");","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(secondUsername.getGithubProfileLink(), \"https://github.com/amy-123\");","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Jiaaa-yang":56}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"                .withEmail(\"alice@email.com\").withGithubUsername(\"alice-123\").build()));","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":74,"Jiaaa-yang":1}},{"path":"src/test/java/seedu/address/model/person/PersonBySkillProficiencyComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"class PersonBySkillProficiencyComparatorTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill firstSkill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill secondSkill \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator firstComparator \u003d new PersonBySkillProficiencyComparator(firstSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator secondComparator \u003d new PersonBySkillProficiencyComparator(secondSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(firstComparator.equals(firstComparator));","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator firstComparatorCopy \u003d new PersonBySkillProficiencyComparator(firstSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        // same skill reference -\u003e return true","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(firstComparator.equals(firstComparatorCopy));","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill secondSkillCopy \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator secondComparatorCopy \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"                new PersonBySkillProficiencyComparator(secondSkillCopy);","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        // same skill name -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(secondComparator.equals(secondComparatorCopy));","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        // different skill -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(firstComparator.equals(secondComparator));","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public void compareTo_personsWithEqualSkillProficiency_returnsZero() {","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person1 \u003d new PersonBuilder().withSkillSet(\"C_50\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person2 \u003d new PersonBuilder().withSkillSet(\"C_50\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill comparedSkill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(comparedSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(comparator.compare(person1, person2), 0);","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    public void compareTo_firstPersonWithLowerProficiency_returnsNegative() {","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person1 \u003d new PersonBuilder().withSkillSet(\"Java_30\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person2 \u003d new PersonBuilder().withSkillSet(\"Java_60\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill comparedSkill \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(comparedSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(comparator.compare(person1, person2) \u003c 0);","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"    public void compareTo_secondPersonWithLowerProficiency_returnsPositive() {","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person1 \u003d new PersonBuilder().withSkillSet(\"Python_80\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person2 \u003d new PersonBuilder().withSkillSet(\"Python_10\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill comparedSkill \u003d new Skill(\"Python\");","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(comparedSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(comparator.compare(person1, person2) \u003e 0);","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"B1LLP4RK":1,"Jiaaa-yang":67}},{"path":"src/test/java/seedu/address/model/person/PersonContainsSkillPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_C_0;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_C_20;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_JAVA_40;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_JAVA_50;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_PYTHON_30;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"class PersonContainsSkillPredicateTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    void testEquals() {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet1 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"        skillSet1.add(SKILL_JAVA_50);","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        skillSet1.add(SKILL_C_0);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet2 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        skillSet2.add(SKILL_JAVA_40);","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        skillSet2.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet3 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        skillSet3.add(SKILL_JAVA_40);","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        skillSet3.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        skillSet3.add(SKILL_PYTHON_30);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate firstPredicate \u003d new PersonContainsSkillPredicate(skillSet1);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate secondPredicate \u003d new PersonContainsSkillPredicate(skillSet2);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate thirdPredicate \u003d new PersonContainsSkillPredicate(skillSet2);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate fourthPredicate \u003d new PersonContainsSkillPredicate(skillSet3);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        //same object -\u003e return true","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"        //same skillSet reference -\u003e returns true","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        assertTrue(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        //same skills in skillset with different proficiency -\u003e returns true","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        //additional skill in one skillSet -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"        assertFalse(fourthPredicate.equals(thirdPredicate));","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"    void test_personContainsSomeSkills_returnFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetPythonC \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        skillSetPythonC.add(SKILL_PYTHON_30);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        skillSetPythonC.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsPythonCPredicate \u003d new PersonContainsSkillPredicate(skillSetPythonC);","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        assertFalse(personContainsPythonCPredicate.test(BENSON));","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"    void test_personContainsAllSkills_returnFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetPythonC \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        skillSetPythonC.add(SKILL_PYTHON_30);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"        skillSetPythonC.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsPythonCPredicate \u003d new PersonContainsSkillPredicate(skillSetPythonC);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        assertTrue(personContainsPythonCPredicate.test(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"    void test_personContainsSkill_returnTrue() {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetC \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"        skillSetC.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetPython \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"        skillSetPython.add(SKILL_PYTHON_30);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsCPredicate \u003d new PersonContainsSkillPredicate(skillSetC);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsPythonPredicate \u003d new PersonContainsSkillPredicate(skillSetPython);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"        assertTrue(personContainsCPredicate.test(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"        assertTrue(personContainsPythonPredicate.test(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"        assertTrue(personContainsPythonPredicate.test(BENSON));","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"    void test_personDoesNotContainsSkill_returnFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetJava \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"        skillSetJava.add(SKILL_JAVA_40);","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsJavaPredicate \u003d new PersonContainsSkillPredicate(skillSetJava);","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"        assertFalse(personContainsJavaPredicate.test(BENSON));","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        assertFalse(personContainsJavaPredicate.test(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alexteo98":103}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTeams().remove(0));","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"                .withGithubUsername(VALID_USERNAME_BOB).withTeams(VALID_TEAM_HUSBAND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"        // different username -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).build();","lastModifiedDate":"2022-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        // different isPotentialTeammate field -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).isPotentialTeammate(true).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"B1LLP4RK"},"content":"        // different s -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"B1LLP4RK"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTeams(VALID_TEAM_HUSBAND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"B1LLP4RK":5,"-":83,"Jiaaa-yang":7}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).withTeams(","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"                VALID_TEAM_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).withTeams(","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"B1LLP4RK"},"content":"                VALID_TEAM_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"B1LLP4RK":5,"-":166,"Jiaaa-yang":1}},{"path":"src/test/java/seedu/address/model/team/SkillSetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"public class SkillSetTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    private Skill java100 \u003d new Skill(\"Java\", 100);","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    private Skill java90 \u003d new Skill(\"Java\", 90);","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    private Skill python100 \u003d new Skill(\"python\", 100);","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    private Skill c0 \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    private SkillSet skillSet1 \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    private SkillSet skillSet2 \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    private SkillSet skillSet3 \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        skillSet1.add(java90);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        skillSet2.add(python100);","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        skillSet3.add(java100);","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        SkillSet copyOfSkillSet1 \u003d new SkillSet(skillSet1);","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        assertFalse(skillSet3.equals(skillSet1));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"        assertTrue(copyOfSkillSet1.equals(skillSet1));","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        assertFalse(copyOfSkillSet1.equals(skillSet2));","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    public void addSkill() {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"        skillSet1.add(java100);","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        assertTrue(skillSet1.hasSkill(java90));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        assertTrue(skillSet1.hasSkill(java100));","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        assertFalse(skillSet1.hasSkill(python100));","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"    public void addSkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"        skillSet1.add(java100);","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"        skillSet1.add(python100);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        skillSet2.addAll(skillSet1);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        assertTrue(skillSet2.hasSkill(java100));","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"        assertTrue(skillSet2.hasSkill(python100));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        assertTrue(skillSet2.hasSkill(java90));","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        assertFalse(skillSet2.hasSkill(c0));","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    public void getSkillProficiency() {","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        skillSet1.add(java90);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        skillSet1.add(c0);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        skillSet1.add(python100);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        assertEquals(90, skillSet1.getSkillProficiency(java100));","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        assertEquals(90, skillSet1.getSkillProficiency(java90));","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        assertEquals(0, skillSet1.getSkillProficiency(c0));","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tzhan98":58}},{"path":"src/test/java/seedu/address/model/team/SkillTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"public class SkillTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    private Skill java100 \u003d new Skill(\"Java\", 100);","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    private Skill copyOfJava100 \u003d new Skill(\"Java\", 100);","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    private Skill java90 \u003d new Skill(\"Java\", 90);","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    private Skill python100 \u003d new Skill(\"python\", 100);","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    private Skill c0 \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Skill(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    public void constructor_invalidSkillArgument_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        String invalidSkillArgument \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Skill(invalidSkillArgument));","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Skill(invalidSkillArgument, 0));","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        //same skill proficiency and name -\u003e true","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        assertTrue(java100.equals(copyOfJava100));","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        //different skill proficiency -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.equals(java90));","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        //different skill name -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.equals(python100));","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        //different skill name and proficiency -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.equals(c0));","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    public void isSameSkill() {","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        //same skill name with same skill proficiency -\u003e true","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        assertTrue(java100.isSameSkill(copyOfJava100));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        //same skill name with different skill proficiency -\u003e true","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        assertTrue(java100.isSameSkill(java90));","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        //different skill name with different skill proficiency -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.isSameSkill(c0));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        //different skill name with same skill level -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.isSameSkill(python100));","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        assertEquals(java100.toString(), \"[Java, 100]\");","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        assertEquals(c0.toString(), \"[C, 0]\");","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"    public void isValidSkillName() {","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"        // null skill argument","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e Skill.isValidSkillName(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"    @Test void isValidSkillProficiency() {","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillProficiencyRange(100));","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillProficiencyRange(10));","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillProficiencyRange(0));","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Skill.isValidSkillProficiencyRange(101));","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Skill.isValidSkillProficiencyRange(-1));","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"tzhan98":82}},{"path":"src/test/java/seedu/address/model/team/TeamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"public class TeamTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Team(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"    public void constructor_invalidTeamName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Team(invalidName));","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"    public void isValidTeamName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"        // null team name","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(NullPointerException.class, () -\u003e Team.isValidTeamName(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"B1LLP4RK":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String INVALID_USERNAME \u003d \"rach_el\";","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String INVALID_TEAM \u003d \"#friend\";","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String VALID_USERNAME \u003d BENSON.getGithubUsername().toString();","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"    private static final List\u003cJsonAdaptedTeam\u003e VALID_TEAMS \u003d BENSON.getTeams().stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"            .map(JsonAdaptedTeam::new)","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    private static final List\u003cJsonAdaptedSkill\u003e VALID_SKILLSET \u003d BENSON.getSkillSet().getSkillSetInStream()","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"            .map(JsonAdaptedSkill::new)","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final boolean PLACEHOLDER_IS_TEAMMATE \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_USERNAME, PLACEHOLDER_IS_TEAMMATE,","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"                        VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_USERNAME,","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"            PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_USERNAME, PLACEHOLDER_IS_TEAMMATE,","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"                        VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_USERNAME,","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"                PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_USERNAME,","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"                        PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_USERNAME,","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"                PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"    public void toModelType_invalidGithubUsername_throwsIllegalValueException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_USERNAME, PLACEHOLDER_IS_TEAMMATE,","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"B1LLP4RK"},"content":"                    VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d GithubUsername.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"    public void toModelType_nullGithubUsername() {","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"                PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GithubUsername.class.getSimpleName());","lastModifiedDate":"2022-03-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"B1LLP4RK"},"content":"    public void toModelType_invalidTeams_throwsIllegalValueException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cJsonAdaptedTeam\u003e invalidTeams \u003d new ArrayList\u003c\u003e(VALID_TEAMS);","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"B1LLP4RK"},"content":"        invalidTeams.add(new JsonAdaptedTeam(INVALID_TEAM));","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"                VALID_EMAIL, VALID_USERNAME, PLACEHOLDER_IS_TEAMMATE, invalidTeams, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tzhan98":4,"B1LLP4RK":7,"-":87,"Jiaaa-yang":26}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * Changed assertEquals to compare strings of AddressBook","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tzhan98":3,"-":47}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        descriptor.setGithubUsername(person.getGithubUsername());","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"        descriptor.setTeams(person.getTeams());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        descriptor.setSkillSet(person.getSkillSet());","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"     * Sets the {@code GithubUsername} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"    public EditPersonDescriptorBuilder withGithubUsername(String username) {","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"        descriptor.setGithubUsername(new GithubUsername(username));","lastModifiedDate":"2022-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses the {@code teams} into a {@code Set\u003cTeam\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"    public EditPersonDescriptorBuilder withTeams(String... teams) {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e teamSet \u003d Stream.of(teams).map(Team::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"        descriptor.setTeams(teamSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"     * Parses the {@code skill} into a {@code Set\u003cskill\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     * that we are building.","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"    public EditPersonDescriptorBuilder withSkillSet(String... skill) {","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"        Set\u003cSkill\u003e skillSet \u003d Stream.of(skill).map(x -\u003e {","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"            try {","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"                return ParserUtil.parseSkill(x);","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"                return null;","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"        }).collect(Collectors.toSet());","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        skillSet.removeIf(Objects::isNull);","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"        descriptor.setSkillSet(new SkillSet(skillSet));","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tzhan98":20,"B1LLP4RK":7,"-":79,"Jiaaa-yang":5}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String DEFAULT_USERNAME \u003d \"amybee99\";","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    private GithubUsername githubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    private Set\u003cTeam\u003e teams;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    private SkillSet skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    private boolean isPotentialTeammate;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        githubUsername \u003d new GithubUsername(DEFAULT_USERNAME);","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"        teams \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        isPotentialTeammate \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        githubUsername \u003d personToCopy.getGithubUsername();","lastModifiedDate":"2022-03-01"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        isPotentialTeammate \u003d personToCopy.isPotentialTeammate();","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"        teams \u003d new HashSet\u003c\u003e(personToCopy.getTeams());","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        skillSet \u003d new SkillSet(personToCopy.getSkillSet());","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses the {@code teams} into a {@code Set\u003cTeam\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"    public PersonBuilder withTeams(String ... teams) {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"        this.teams \u003d SampleDataUtil.getTeamSet(teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"     * Parses the {@code skill} into a {@code Set\u003cSkill\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"    public PersonBuilder withSkillSet(String ... skillSet) {","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        this.skillSet \u003d SampleDataUtil.getSkillSet(skillSet);","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        return this;","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"     * Sets the {@code GithubUsername} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"    public PersonBuilder withGithubUsername(String username) {","lastModifiedDate":"2022-03-01"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        this.githubUsername \u003d new GithubUsername(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"     * Sets the {@code isPotentialTeammate} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"    public PersonBuilder isPotentialTeammate(boolean isPotentialTeammate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isPotentialTeammate \u003d isPotentialTeammate;","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"        return new Person(name, phone, email, githubUsername, teams, skillSet, isPotentialTeammate);","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tzhan98":10,"B1LLP4RK":7,"-":82,"Jiaaa-yang":20}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        sb.append(PREFIX_GITHUB_USERNAME + person.getGithubUsername().value + \" \");","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"        person.getTeams().stream().forEach(","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"            s -\u003e sb.append(PREFIX_TEAM + s.teamName + \" \")","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        person.getSkillSet().getSkillSetInStream().forEach(","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"            s -\u003e sb.append(PREFIX_SKILL + s.skillName + \"_\" + s.skillProficiency + \" \")","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        descriptor.getGithubUsername().ifPresent(address -\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"                sb.append(PREFIX_GITHUB_USERNAME).append(address.value).append(\" \"));","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"        if (descriptor.getTeams().isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"            Set\u003cTeam\u003e teams \u003d descriptor.getTeams().get();","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"            if (teams.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"                sb.append(PREFIX_TEAM).append(\" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"                teams.forEach(s -\u003e sb.append(PREFIX_TEAM).append(s.teamName).append(\" \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        if (descriptor.getSkillSet().isPresent()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"            SkillSet skillSet \u003d descriptor.getSkillSet().get();","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"            if (skillSet.getSkillSet().isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"                sb.append(PREFIX_SKILL);","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"                skillSet.getSkillSet().forEach(s -\u003e sb.append(PREFIX_SKILL).append(s.skillName).append(\"_\")","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"                        .append(s.skillProficiency).append(\" \"));","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tzhan98":10,"B1LLP4RK":9,"-":54,"Jiaaa-yang":4}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        return Index.fromOneBased(model.getDisplayPersonList().size() / 2);","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        return Index.fromOneBased(model.getDisplayPersonList().size());","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        return model.getDisplayPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":52,"Jiaaa-yang":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILL_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILL_PYTHON;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_FRIEND;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HUSBAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"            .withGithubUsername(\"alice-paul\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"            .withTeams(\"friends\")","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"            .withSkillSet(\"C_20\", \"Python_40\")","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"            .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"            .withGithubUsername(\"benson-123\")","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"            .withTeams(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"            .withSkillSet(\"python_40\")","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"            .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"            .withGithubUsername(\"kurz-carl\")","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"            .isPotentialTeammate(true)","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"            .withGithubUsername(\"meier-coding\")","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"            .withTeams(\"friends\").withSkillSet(\"Bash_90\")","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"            .isPotentialTeammate(true)","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"            .withGithubUsername(\"ellelle\")","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"            .withSkillSet(\"C_80\")","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"            .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"            .withGithubUsername(\"kunzgunz\")","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"            .withSkillSet(\"Git_59\")","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"            .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"            .withGithubUsername(\"best-coder\")","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"            .withSkillSet(\"C_30\")","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"            .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"            .withEmail(\"stefan@example.com\").withGithubUsername(\"hoonmeier\").build();","lastModifiedDate":"2022-03-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"            .withEmail(\"hans@example.com\").withGithubUsername(\"ida-ller99\").build();","lastModifiedDate":"2022-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"            .withEmail(VALID_EMAIL_AMY).withGithubUsername(VALID_USERNAME_AMY)","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"            .withTeams(VALID_TEAM_FRIEND).withSkillSet(VALID_SKILL_C).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"            .withEmail(VALID_EMAIL_BOB).withGithubUsername(VALID_USERNAME_BOB)","lastModifiedDate":"2022-03-01"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"            .withTeams(VALID_TEAM_HUSBAND, VALID_TEAM_FRIEND).withSkillSet(VALID_SKILL_PYTHON).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"alexteo98":20,"tzhan98":3,"B1LLP4RK":6,"-":53,"Jiaaa-yang":27}},{"path":"src/test/java/seedu/address/testutil/TypicalSkills.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":" * A utility class containing a list of {@code Skill} objects to be used in tests.","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"public class TypicalSkills {","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_JAVA_50 \u003d new Skill(\"Java\", 50);","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_JAVA_40 \u003d new Skill(\"Java\", 40);","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_C_20 \u003d new Skill(\"C\", 20);","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_C_0 \u003d new Skill(\"C\", 0);","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_PYTHON_30 \u003d new Skill(\"PYTHON\", 30);","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alexteo98":14}}]
