[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"# HackNet","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W13-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-W13-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"## Introduction","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"**HackNet** is a desktop application that helps users manage details of potential teammates for technical projects. It is designed to be used via a Command Line Interface (CLI) which takes in text commands.","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"## Quickstart","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"To try out **HackNet**, check out the instructions at our [User Guide](https://ay2122s2-cs2103t-w13-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"## For developers","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"To take a deeper look at our design architecture and implementation logic, check out our [Developer Guide](https://ay2122s2-cs2103t-w13-3.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"## Acknowledgements","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"Jiaaa-yang":18,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"run {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"Jiaaa-yang":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"### Toh Zhan Qing","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"\u003cimg src\u003d\"images/tzhan98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"[[github](http://github.com/tzhan98)][[portfolio](team/tzhan98.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"### Alex Teo","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"\u003cimg src\u003d\"images/alexteo98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"[[github](http://github.com/alexteo98)][[portfolio](team/alexteo98.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"### Lye Jia Yang","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"\u003cimg src\u003d\"images/jiaaa-yang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"[[github](http://github.com/jiaaa-yang)][[portfolio](team/jiaaa-yang.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"### Melvin Chan Zijun","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"\u003cimg src\u003d\"images/melvinczj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"[[github](https://https://github.com/MelvinCZJ)][[portfolio](team/melvinczj.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"* Responsibilities: Functionality","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"### Junha Park","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"\u003cimg src\u003d\"images/b1llp4rk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"[[github](http://github.com/B1LLP4RK)]","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"[[portfolio](team/b1llp4rk.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"alexteo98":3,"tzhan98":3,"B1LLP4RK":4,"-":37,"Jiaaa-yang":4,"MelvinCZJ":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"* This project would not have been possible without the help of [Ivan](https://github.com/wpinrui), and [prof Damith](https://github.com/damithc)","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"B1LLP4RK"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"add n/junha p/12341234 g/B1LL e/bill@exmple.com\")` API call. The input string is abbreviated to [ADD].","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"B1LLP4RK"},"content":"![Interactions Inside the Logic Component for the `add 1` Command](images/AddSequenceDiagram.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"B1LLP4RK"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"650\" /\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"B1LLP4RK"},"content":"* stores the address book data abstracted as a `AddressBook` object. i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-04-09"},{"lineNumber":129,"author":{"gitId":"B1LLP4RK"},"content":"* `VersionedAddressBook` is a child class of `AddressBook` that stores the change of the `AddressBook` whenever data is changed, for `undo` and `redo` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"B1LLP4RK"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Team` and `Skill` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one object per unique `Team` and `Skill`, instead of each `Person` needing their own `Team` or `Skill` objects.\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"B1LLP4RK"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"tzhan98"},"content":"### SkillSet class","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"tzhan98"},"content":"The \u0027SkillSet\u0027 class,","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"tzhan98"},"content":"* stores a Set of `Skill`","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"tzhan98"},"content":"* is used to manipulate `Skill` objects","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"tzhan98"},"content":"### Skill class","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"tzhan98"},"content":"The `Skill` class,","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"tzhan98"},"content":"* can store an alphanumeric skill name value and an integer ranging from 1 to 100 for skill proficiency value","lastModifiedDate":"2022-04-05"},{"lineNumber":165,"author":{"gitId":"tzhan98"},"content":"* is a field of the `Person` class","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"tzhan98"},"content":"* is used for sorting by `Skill` proficiency level","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"tzhan98"},"content":"![skillClassDiagram](images/SkillDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"tzhan98"},"content":"Given below is an example of how `SkillSet` interacts with the `Skill` class when the `Person` class calls the method","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"tzhan98"},"content":"`getSkillProficency(Skill)`","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"tzhan98"},"content":"![skillSequenceDiagram](images/SkillSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"B1LLP4RK"},"content":"### Edit feature","lastModifiedDate":"2022-04-09"},{"lineNumber":181,"author":{"gitId":"B1LLP4RK"},"content":"#### Implementation","lastModifiedDate":"2022-04-09"},{"lineNumber":182,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":183,"author":{"gitId":"B1LLP4RK"},"content":"`EditCommand` is responsible for the `edit` command. `EditCommandParser` provides necessary information to `EditCommand` when creating it through parse method. The information includes `isResetMode`, `EditPersonDescriptor`, and `indices`. `indices` is the reference to the list of `index` in the displayed list in GUI, of the person(s) to be edited. `EditPersonDescriptor` encapsulates how the person(s) should be edited, such as which field(e.g. name) should be changed to what(a new name). `isResetMode` is true if the user declared `-r` to activate reset mode in command, and false otherwise.","lastModifiedDate":"2022-04-09"},{"lineNumber":184,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":185,"author":{"gitId":"B1LLP4RK"},"content":"![EditCommandClassDiagram](images/EditCommandClassDiagram.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"Jiaaa-yang"},"content":"### Team forming feature","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"Jiaaa-yang"},"content":"#### Implementation","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"Jiaaa-yang"},"content":"`MakeTeamCommand` which supports this feature is a command which is responsible for two distinct command words: `team` and `unteam`.","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"Jiaaa-yang"},"content":"With most commands implemented in **HackNet** being responsible for one and only one command word, the `MakeTeamCommand` is an exception due to the similarity between the 2 actions.","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"Jiaaa-yang"},"content":"![MakeTeamCommand](images/MakeTeamCommandClassDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"Jiaaa-yang"},"content":"We have decided that it is preferable to use an enumeration to distinguish the two actions the command can perform, rather than having 2 distinct classes, due to their overlapping implementations.","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"Jiaaa-yang"},"content":"It is recommended that such a design is used for two commands with similar implementations that perform opposite actions.","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"Jiaaa-yang"},"content":"#### Execution","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"Jiaaa-yang"},"content":"Below is a sequence diagram showing the execution path for this command","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"Jiaaa-yang"},"content":"![MakeTeamCommand](images/MakeTeamSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"Jiaaa-yang"},"content":"By making use of the enumeration `TeamAction`, this command decides its execution path to either add or remove someone from the list of potential teammates.","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"Jiaaa-yang"},"content":"Similar logic required by the command after (e.g. `model#setPerson`) regardless of the path taken will hence have a single implementation, reducing the risks of have 2 out-of-sync commands.","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"alexteo98"},"content":"### Filtering feature","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"alexteo98"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"alexteo98"},"content":"`FilterSkillCommand` is a command which is responsible for one command word: `filter`.","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"alexteo98"},"content":"This command is used to display a list of people who has the skill specified in the command argument.","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"alexteo98"},"content":"![FilterSkillCommand](images/FilterSkillCommandClassDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"alexteo98"},"content":"#### Execution","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"alexteo98"},"content":"Below is a sequence diagram showing the execution path when this command is entered.","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"alexteo98"},"content":"![FilterSkillCommand](images/FilterSkillSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"alexteo98"},"content":"### Undo/redo feature","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"alexteo98"},"content":"#### Implementation","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"B1LLP4RK"},"content":"* NUS Computing student looking for teammates to do team projects with","lastModifiedDate":"2022-03-01"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"B1LLP4RK"},"content":"**Value proposition**: Provide ability for users to sort contacts by technical skills and find teammates with specific technical skills.","lastModifiedDate":"2022-03-01"},{"lineNumber":319,"author":{"gitId":"B1LLP4RK"},"content":"Hacknet functions as an addressbook to store all relevant details of potential teammates, as well as all the relevant information required to search and filter to form teams for the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"B1LLP4RK"},"content":"Priorities: High (must have) - A, Medium (nice to have) - B, Low (unlikely to have) - C","lastModifiedDate":"2022-03-01"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"| Priority | As a …​                                             | I want to …​                                                          | So that I can…​                                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"Jiaaa-yang"},"content":"|----------|-----------------------------------------------------|-----------------------------------------------------------------------|---------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-22"},{"lineNumber":328,"author":{"gitId":"B1LLP4RK"},"content":"| A        | Beginner user                                       | Save contacts even after HackNet is closed                            | Access those contacts again without having to keep HackNet running the whole time     |","lastModifiedDate":"2022-03-01"},{"lineNumber":329,"author":{"gitId":"B1LLP4RK"},"content":"| A        | User familiar with CLI                              | Make use of HackNet through the use of CLI                            | I do not have to take a long time getting used to HackNet                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":330,"author":{"gitId":"B1LLP4RK"},"content":"| A        | Beginner user                                       | Manually add a new contact                                            | I am able to have his details                                                         |","lastModifiedDate":"2022-03-01"},{"lineNumber":331,"author":{"gitId":"B1LLP4RK"},"content":"| A        | Beginner user                                       | Delete a contact                                                      | Remove a contact from my address book                                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":332,"author":{"gitId":"B1LLP4RK"},"content":"| A        | Beginner user                                       | I can view my added contacts                                          | So that I can see the contacts I have saved                                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":333,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Sort my contacts by relevant details                                  | I can find potential teammates faster                                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":334,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | create my custom teams to label teammates by                          | I can search for relevant teammates faster                                            |","lastModifiedDate":"2022-03-15"},{"lineNumber":335,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Look at the github profile of a potential teammate                    | I can further scrutinize the person’s past experience/project                         |","lastModifiedDate":"2022-03-01"},{"lineNumber":336,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Filter out people based on certain skills i.e. proficient in java     | I can easily look for the teammate that complements my skill                          |","lastModifiedDate":"2022-03-01"},{"lineNumber":337,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Add people into my ‘basket’.                                          | I can simulate possible team-ups for the project                                      |","lastModifiedDate":"2022-03-01"},{"lineNumber":338,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Potential user                                      | Get help on the features available                                    | I can try those features out                                                          |","lastModifiedDate":"2022-03-01"},{"lineNumber":339,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Share my profile with others                                          | Other people will be able contact me if they think that i fit their team              |","lastModifiedDate":"2022-03-01"},{"lineNumber":340,"author":{"gitId":"B1LLP4RK"},"content":"| B        | New user urgently searching for project members     | Download HackNet and share contacts with an avid user                 | I can have a large selection of project members to choose from                        |","lastModifiedDate":"2022-03-01"},{"lineNumber":341,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Users who prefer typing to mouse interaction        | Use HackNet with minimal mouse interaction                            | User HackNet to add contacts faster                                                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":342,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Create my profile and populate it with my details                     | I can share it with others                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":343,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Beginner user                                       | Undo my last command                                                  | I can rectify my mistakes                                                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":344,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Someone who wants to upskill in a less focused area | Check my contacts and see which skills are not well focused on        | I can know which skill are less popular                                               |","lastModifiedDate":"2022-03-01"},{"lineNumber":345,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Visual person                                       | Use different colors to differentiate my contacts by technical skills | I can classify my contacts at a glance                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":346,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Tweak settings such as shortcuts and preferences                      | I can be more productive with HackNet                                                 |","lastModifiedDate":"2022-03-01"},{"lineNumber":347,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Person with a friend also using HackNet             | Add him to my team and share contacts                                 | We can share contacts with a team                                                     |","lastModifiedDate":"2022-03-01"},{"lineNumber":348,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Use batch actions                                                     | Add teams to multiple people in a single action                                       |","lastModifiedDate":"2022-03-15"},{"lineNumber":349,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | View past teammates                                                   | Keep track of who i worked with before                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":350,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Request/suggest a feature to the developer                            | Future experience with the app gets faster and more user friendly                     |","lastModifiedDate":"2022-03-01"},{"lineNumber":351,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Choose specific formats to display info in                            | Formats are more natural(date formats and name formats etc)                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":352,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Expert user                                         | Enter multiple commands at one time                                   | I can perform tedious tasks more quickly                                              |","lastModifiedDate":"2022-03-01"},{"lineNumber":353,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Beginner user                                       | Follow a interactive tutorial                                         | Get to know the basic features without looking at the documentation                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":354,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Intermediate user                                   | Export a save data of the contacts                                    | To work with the same data in a different/new pc                                      |","lastModifiedDate":"2022-03-01"},{"lineNumber":355,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Users who can type fast                             | Enter commands quickly on HackNet                                     | Navigate through HackNet faster                                                       |","lastModifiedDate":"2022-03-01"},{"lineNumber":356,"author":{"gitId":"B1LLP4RK"},"content":"| B        | Users with need to manage large number of contacts  | Manage large number of contacts effortlessly                          | Search for contacts through the use of different search options easily / add contacts |","lastModifiedDate":"2022-03-01"},{"lineNumber":357,"author":{"gitId":"B1LLP4RK"},"content":"| B        | User who value my privacy                           | Make my contact private so others cannot share it                     | Only users that directly share contacts with me will have my contact                  |","lastModifiedDate":"2022-03-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"Jiaaa-yang"},"content":"(For all use cases below, the **System** is `HackNet` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-04-07"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"Jiaaa-yang"},"content":"**Use case: UC01 - Add contact**","lastModifiedDate":"2022-04-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"Jiaaa-yang"},"content":"1. User adds a contact specifying personal details and technical skills.","lastModifiedDate":"2022-04-07"},{"lineNumber":368,"author":{"gitId":"Jiaaa-yang"},"content":"2. HackNet displays list of persons with new contact added.","lastModifiedDate":"2022-04-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"Jiaaa-yang"},"content":"   Use case ends.","lastModifiedDate":"2022-04-07"},{"lineNumber":371,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":372,"author":{"gitId":"Jiaaa-yang"},"content":"**Extensions**","lastModifiedDate":"2022-04-07"},{"lineNumber":373,"author":{"gitId":"Jiaaa-yang"},"content":"* 1a. Data entered is invalid.","lastModifiedDate":"2022-04-07"},{"lineNumber":374,"author":{"gitId":"Jiaaa-yang"},"content":"    * 1a1. HackNet shows an error message.","lastModifiedDate":"2022-04-07"},{"lineNumber":375,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":376,"author":{"gitId":"Jiaaa-yang"},"content":"      Use case ends.","lastModifiedDate":"2022-04-07"},{"lineNumber":377,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":378,"author":{"gitId":"Jiaaa-yang"},"content":"**Use case: UC02 - View contact\u0027s portfolio**","lastModifiedDate":"2022-04-07"},{"lineNumber":379,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":380,"author":{"gitId":"Jiaaa-yang"},"content":"**MSS**","lastModifiedDate":"2022-04-07"},{"lineNumber":381,"author":{"gitId":"Jiaaa-yang"},"content":"1. User \u003cins\u003eadds a contact (UC01)\u003c/ins\u003e with a specific GitHub username.","lastModifiedDate":"2022-04-07"},{"lineNumber":382,"author":{"gitId":"Jiaaa-yang"},"content":"2. User requests to view the GitHub portfolio of contact.","lastModifiedDate":"2022-04-07"},{"lineNumber":383,"author":{"gitId":"Jiaaa-yang"},"content":"3. HackNet shows the GitHub profile associated with stored username.","lastModifiedDate":"2022-04-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"Jiaaa-yang"},"content":"* 3a. GitHub username does not exist.","lastModifiedDate":"2022-04-07"},{"lineNumber":389,"author":{"gitId":"Jiaaa-yang"},"content":"  * 3a1. HackNet shows an error page.","lastModifiedDate":"2022-04-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"Jiaaa-yang"},"content":"    Use case ends.","lastModifiedDate":"2022-04-07"},{"lineNumber":392,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":393,"author":{"gitId":"Jiaaa-yang"},"content":"**Use case: UC03 - Form potential team**","lastModifiedDate":"2022-04-07"},{"lineNumber":394,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":395,"author":{"gitId":"Jiaaa-yang"},"content":"**MSS**","lastModifiedDate":"2022-04-07"},{"lineNumber":396,"author":{"gitId":"Jiaaa-yang"},"content":"1. User requests to see list of persons with a specific technical skill.","lastModifiedDate":"2022-04-07"},{"lineNumber":397,"author":{"gitId":"Jiaaa-yang"},"content":"2. HackNet shows a list of persons with the specified skill.","lastModifiedDate":"2022-04-07"},{"lineNumber":398,"author":{"gitId":"Jiaaa-yang"},"content":"3. User chooses specified person to be potential teammate.","lastModifiedDate":"2022-04-07"},{"lineNumber":399,"author":{"gitId":"Jiaaa-yang"},"content":"4. HackNet marks chosen person as potential teammate.","lastModifiedDate":"2022-04-07"},{"lineNumber":400,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":401,"author":{"gitId":"Jiaaa-yang"},"content":"    Steps 1 - 4 are repeated until user has chosen all potential teammates to form his team.","lastModifiedDate":"2022-04-07"},{"lineNumber":402,"author":{"gitId":"Jiaaa-yang"},"content":"5. User requests to see list of potential teammates.","lastModifiedDate":"2022-04-07"},{"lineNumber":403,"author":{"gitId":"Jiaaa-yang"},"content":"6. HackNet shows the list of all persons marked as potential teammates.","lastModifiedDate":"2022-04-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"Jiaaa-yang"},"content":"**Extensions**","lastModifiedDate":"2022-04-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"Jiaaa-yang"},"content":"* 3a. The person is already marked as potential teammate previously.","lastModifiedDate":"2022-04-07"},{"lineNumber":410,"author":{"gitId":"B1LLP4RK"},"content":"  * 3a1. HackNet shows an error message.","lastModifiedDate":"2022-03-01"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"Jiaaa-yang"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2022-04-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"Jiaaa-yang"},"content":"**Use case: UC04 - See past teammates**","lastModifiedDate":"2022-04-07"},{"lineNumber":415,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":416,"author":{"gitId":"Jiaaa-yang"},"content":"**MSS**","lastModifiedDate":"2022-04-07"},{"lineNumber":417,"author":{"gitId":"Jiaaa-yang"},"content":"1. User tags specified person to a past project team.","lastModifiedDate":"2022-04-07"},{"lineNumber":418,"author":{"gitId":"Jiaaa-yang"},"content":"2. HackNet links person to the specified project team.","lastModifiedDate":"2022-04-07"},{"lineNumber":419,"author":{"gitId":"Jiaaa-yang"},"content":"3. User requests to show a list of persons tagged to his past project team.","lastModifiedDate":"2022-04-07"},{"lineNumber":420,"author":{"gitId":"Jiaaa-yang"},"content":"4. HackNet shows the list of all persons linked with a past project team.","lastModifiedDate":"2022-04-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"Jiaaa-yang"},"content":"**Use case: UC05 - Edit a person**","lastModifiedDate":"2022-04-08"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":424,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":426,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2022-04-08"},{"lineNumber":427,"author":{"gitId":"tzhan98"},"content":"2.  HackNet shows a list of persons","lastModifiedDate":"2022-04-08"},{"lineNumber":428,"author":{"gitId":"Jiaaa-yang"},"content":"3.  User requests to edit a specific person in the list","lastModifiedDate":"2022-04-08"},{"lineNumber":429,"author":{"gitId":"Jiaaa-yang"},"content":"4.  HackNet edits the person","lastModifiedDate":"2022-04-08"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":433,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-04-08"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":437,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":439,"author":{"gitId":"Jiaaa-yang"},"content":"* 3a. The given index is invalid or execution of command will result in person with duplicate email, Github username or phone number field.","lastModifiedDate":"2022-04-08"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":441,"author":{"gitId":"tzhan98"},"content":"    * 3a1. HackNet shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":443,"author":{"gitId":"tzhan98"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-04-08"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":445,"author":{"gitId":"Jiaaa-yang"},"content":"**Use case: UC06 - Find a person by skill**","lastModifiedDate":"2022-04-08"},{"lineNumber":446,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":447,"author":{"gitId":"tzhan98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":448,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":449,"author":{"gitId":"tzhan98"},"content":"1. User filters contacts by skill name","lastModifiedDate":"2022-04-08"},{"lineNumber":450,"author":{"gitId":"tzhan98"},"content":"2. HackNet displays list of person(s) with matching skill name","lastModifiedDate":"2022-04-08"},{"lineNumber":451,"author":{"gitId":"tzhan98"},"content":"3. User sorts contacts by skill name","lastModifiedDate":"2022-04-08"},{"lineNumber":452,"author":{"gitId":"tzhan98"},"content":"4. HackNet displays list of person(s) with matching skill name in descending order","lastModifiedDate":"2022-04-08"},{"lineNumber":453,"author":{"gitId":"tzhan98"},"content":"5. User found person","lastModifiedDate":"2022-04-08"},{"lineNumber":454,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":455,"author":{"gitId":"tzhan98"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":456,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":457,"author":{"gitId":"tzhan98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":458,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":459,"author":{"gitId":"tzhan98"},"content":"* 1a. The list is empty.","lastModifiedDate":"2022-04-08"},{"lineNumber":460,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":461,"author":{"gitId":"tzhan98"},"content":"  Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":462,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":463,"author":{"gitId":"tzhan98"},"content":"* *a. At any time user found person","lastModifiedDate":"2022-04-08"},{"lineNumber":464,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":465,"author":{"gitId":"tzhan98"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"B1LLP4RK"},"content":"4. The program should not have functionalities sharing data with others.","lastModifiedDate":"2022-03-01"},{"lineNumber":473,"author":{"gitId":"tzhan98"},"content":"5. Raw data stored must be human-readable and easy to edit for power users to edit. (at their own risk)","lastModifiedDate":"2022-04-08"},{"lineNumber":474,"author":{"gitId":"tzhan98"},"content":"6. Product should be able to work without internet connection.","lastModifiedDate":"2022-04-08"},{"lineNumber":475,"author":{"gitId":"tzhan98"},"content":"7. User commands must be easy to understand and use.","lastModifiedDate":"2022-04-08"},{"lineNumber":476,"author":{"gitId":"tzhan98"},"content":"8. HackNet must respond to all user inputs under 3s.","lastModifiedDate":"2022-04-08"},{"lineNumber":477,"author":{"gitId":"tzhan98"},"content":"9. HackNet must be free of charge and open sourced.","lastModifiedDate":"2022-04-08"},{"lineNumber":478,"author":{"gitId":"tzhan98"},"content":"10. HackNet must be able to run after downloading and not require installation.","lastModifiedDate":"2022-04-08"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"tzhan98"},"content":"* **Team**: A group of potential teammates that user wants to work with for their project","lastModifiedDate":"2022-04-08"},{"lineNumber":487,"author":{"gitId":"tzhan98"},"content":"* **Contact**: An entry in HackNet","lastModifiedDate":"2022-04-08"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"alexteo98":16,"tzhan98":51,"B1LLP4RK":51,"-":353,"Jiaaa-yang":69}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"Welcome to the User Guide for **HackNet**, where we will guide you through all you need to know to get started!","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"**HackNet** is a desktop application that can help you manage contact details of potential team members to work on a technical project or participate in a Hackathon with. It has a simple Graphical User Interface (GUI) which displays details of your potential teammates, and works mainly via a Command Line Interface (CLI) through text commands.","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"## Table of Contents","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"* [Overview](#overview)","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"* [Features](#features)","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    * [Viewing help: help](#viewing-help-help)","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    * [Contact Management](#contact-management)","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Adding a person: add](#adding-a-person-add)","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Editing details for existing contact: edit](#editing-any-number-of-persons-edit)","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Add/remove person as potential teammate: team/unteam](#markunmark-contact-as-potential-teammates-teamunteam)","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Deleting a person: delete](#deleting-a-person-delete)","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Remove all contacts: clear](#clearing-all-entries-clear)","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    * [Team Forming](#team-forming)","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"      * [List all contacts: list](#listing-all-persons-list)","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Find person by name: find](#locating-persons-by-name-find)","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Filter person by technical skills: filter](#filter-for-past-teammates-filterteam)","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Sort person by technical skill: sort](#sorting-persons-by-skill-proficiency-sort)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Show past teammates: filterteam](#filter-for-past-teammates-filterteam)","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Show potential teammates: show](#show-all-potential-teammates-show)","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    * [Utility](#utility)","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"      * [Undo](#undo-last-command-undo)","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"      * [Redo](#redo-last-command-redo)","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"      * [Navigating User Input History](#navigating-user-input-history--)","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"    * [Exiting HackNet](#exiting-the-program-exit)","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"* [Data](#data)","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"* [FAQ](#faq)","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"2. Download the latest `HackNet.jar` from [here](https://github.com/AY2122S2-CS2103T-W13-3/tp/releases).","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for HackNet.","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"    **:information_source: If double-clicking doesn\u0027t work:**\u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"    This could be a problem with the Windows OS. You can alternatively start **HackNet** by:","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"    * Starting a terminal session on your computer","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"    * Change the directory to the folder containing the file using `cd path/to/HackNet_home_folder`","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"    * Start HackNet using `java -jar HackNet.jar`","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com g/johndoe123` : Adds a contact named `John Doe` to HackNet.","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * **`delete`**` 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"## Overview","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"**HackNet** is a small desktop application, and contains simple components working together to form a powerful product.","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"![Ui](images/UI-annotated.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"* Input field: This is where you enter your commands to **HackNet**.","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"* Result box: This is where **HackNet** tells you whether your command succeeded, or to provide guidance on why your command failed.","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"* Personal details: This contains all the details of your contacts:","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"  * Past teams: These are tags you can add onto your contacts, whom have worked with you on technical projects in the past","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"  * Technical skills: These are skill labels to help you keep track of technical proficiency of your contacts. It is color coded such that a brighter green tag indicates a higher proficiency in that skill","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"  * GitHub username: This is the [GitHub](https://github.com) username of your contact. It is also a hyperlink that will open up the GitHub profile of that contact in your browser","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"* Potential teammates: These are contacts you marked as potential teammates, which are part of the dream team you are forming for the next Hackathon. **HackNet** highlights such contacts to make them stand out.","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"    * e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"    * e.g. `n/NAME [t/TEAM]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"B1LLP4RK"},"content":"* Items with `…`​ after them can have multiple values including 0.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"B1LLP4RK"},"content":"    * e.g. `[t/TEAM…]​` can be used as ` ` (i.e. 0 times), `t/`, `t/friend, family` etc.","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"    * e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"    * e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list`, `undo`, `redo`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"    * e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2022-04-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"* For the team field, maximum length of a team name is 20 characters.","lastModifiedDate":"2022-04-08"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"* For skill field, Skill name have to be followed by an underscore `_` and Skill proficiency level that ranges from 0 to 100 with 0 being the lowest proficiency level. Maximum length of a skill name is 10 characters.","lastModifiedDate":"2022-04-08"},{"lineNumber":119,"author":{"gitId":"B1LLP4RK"},"content":"    * e.g. `[s/SKILLNAME_SKILLPROFICENCY…]​` as `s/Java_90`","lastModifiedDate":"2022-04-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"tzhan98"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"B1LLP4RK"},"content":"Format: `help [TOPIC]`","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"tzhan98"},"content":"Simply calling `help` will bring up a prompt linking to the user guide.","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"B1LLP4RK"},"content":"Passing in a relevant keyword as the `TOPIC` parameter such as `add` will bring up a brief description and usage","lastModifiedDate":"2022-04-06"},{"lineNumber":135,"author":{"gitId":"tzhan98"},"content":"of the topic.","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"tzhan98"},"content":"![help add message](images/helpAdd.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"Jiaaa-yang"},"content":"## Contact Management","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"Jiaaa-yang"},"content":"This section contains commands that can help you manage the details of your contacts within **HackNet**.","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Jiaaa-yang"},"content":"Adds a person to HackNet.","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"B1LLP4RK"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL g/GITHUB_USERNAME [t/TEAM…]​ [s/SKILLNAME_SKILLPROFICENCY…]​`","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"tzhan98"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"tzhan98"},"content":"**:information_source: Notes regarding adding a person:**\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":152,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":153,"author":{"gitId":"tzhan98"},"content":"* A person can have any number of teams or skills(including 0)\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":154,"author":{"gitId":"tzhan98"},"content":"* teams and skills in `[t/TEAM…]` and `[s/SKILLNAME_SKILLPROFICENCY…]` must be separated by a comma. The comma can be preceded or followed by any number of whitespaces, which will be ignored. Any excess commas after the last valid value will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":155,"author":{"gitId":"tzhan98"},"content":"* `t/      ` and `s/        ` is treated as `t/` and `s/` as HackNet ignores whitespaces. Therefore, a name of a team cannot be consisting solely of whitespaces.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":156,"author":{"gitId":"tzhan98"},"content":"* HackNet can store multiple contacts with the same `Name` but will reject inputs that contain any `Email`, `Github Username` or `Phone Number` fields that already exists in HackNet.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":157,"author":{"gitId":"tzhan98"},"content":"* Consecutive white spaces right after `t/` and `s/` are ignored.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":158,"author":{"gitId":"tzhan98"},"content":"* A name of a team or skill cannot be consisting solely of whitespaces.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":159,"author":{"gitId":"tzhan98"},"content":"* Please check that you have correctly entered the skill proficiency level. There is currently no way of viewing the exact number that you entered. You may use the `edit` function to change it if it is wrong. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":160,"author":{"gitId":"tzhan98"},"content":"* The skill proficiency will only be a visual guide in a shade of green (bright green for high proficiency and dark green for low proficiency).\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":161,"author":{"gitId":"tzhan98"},"content":"* If multiple duplicate skill names are entered, HackNet will only take the skill with the highest proficiency. ","lastModifiedDate":"2022-04-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"Jiaaa-yang"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com g/johndoe123`","lastModifiedDate":"2022-02-28"},{"lineNumber":166,"author":{"gitId":"B1LLP4RK"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com g/betsycoder p/1234567 t/gmail plugin, Sublime Text dev s/`","lastModifiedDate":"2022-04-06"},{"lineNumber":167,"author":{"gitId":"tzhan98"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com g/johndoe123 s/C_90, C_2, C_22` will result in `C_90` as it has the highest value.","lastModifiedDate":"2022-04-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"B1LLP4RK"},"content":"### Editing any number of person(s): `edit`","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"B1LLP4RK"},"content":"Edits any number of existing person(s) in HackNet.","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"B1LLP4RK"},"content":"Format: `edit INDEX [INDEX…] [-r] [n/NAME] [p/PHONE] [e/EMAIL] [g/GITHUB_USERNAME] [t/TEAM…]​ [s/SKILLNAME_SKILLPROFICENCY…]​`","lastModifiedDate":"2022-04-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"B1LLP4RK"},"content":"* Edits the person(s) at the specified `INDEX [INDEX…]`. The index refers to the index number shown in the displayed person list. Indices must be separated by a whitespace as opposed to teams and skills. All index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-06"},{"lineNumber":176,"author":{"gitId":"B1LLP4RK"},"content":"* At least one of the optional fields must be provided besides `[-r]`.","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"B1LLP4RK"},"content":"* team and skill values in `[t/TEAM…]` and `[s/SKILLNAME_SKILLPROFICENCY…]` must be separated by a comma. The comma can be preceded or followed by any number of whitespaces, which will be ignored. Any excess commas after the last valid value will be ignored.","lastModifiedDate":"2022-04-06"},{"lineNumber":178,"author":{"gitId":"B1LLP4RK"},"content":"* Consecutive white spaces right after `t/` and `s/` are ignored.","lastModifiedDate":"2022-04-06"},{"lineNumber":179,"author":{"gitId":"B1LLP4RK"},"content":"* A name of a team or skill cannot be consisting solely of whitespaces.","lastModifiedDate":"2022-04-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"B1LLP4RK"},"content":"* In default mode, editing teams appends the new team to the person.","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"B1LLP4RK"},"content":"* `-r` option activates reset mode.","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"B1LLP4RK"},"content":"* In reset mode, editing teams edits the teams of a person from scratch. i.e adding of teams is not cumulative. You can remove all the person’s teams by typing `t/` without","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"B1LLP4RK"},"content":"  specifying any teams after it.","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"B1LLP4RK"},"content":"* The concept of default and reset mode applies with skills as well.","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"B1LLP4RK"},"content":"* when editing multiple persons, only `[t/TEAM…]` and `[s/SKILLNAME_SKILLPROFICENCY…]` will take effect. Other arguments such as `Name` and `Phone` will be silently ignored.","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"tzhan98"},"content":"* HackNet can store multiple contacts with the same `Name` but will reject inputs that contain any `Email`, `Github Username` or `Phone Number` fields that already exists in HackNet.","lastModifiedDate":"2022-04-06"},{"lineNumber":188,"author":{"gitId":"B1LLP4RK"},"content":"* When editing multiple persons, only `[t/TEAM…]` and `[s/SKILLNAME_SKILLPROFICENCY…]` will take effect. Other arguments such as `NAME` and `PHONE` will be silently ignored.","lastModifiedDate":"2022-04-06"},{"lineNumber":189,"author":{"gitId":"B1LLP4RK"},"content":"* When at least one of the indices provided are invalid for batch edit, HackNet informs that there was an error in the indices, but still delivers the modification for the indices that are valid.","lastModifiedDate":"2022-04-06"},{"lineNumber":190,"author":{"gitId":"B1LLP4RK"},"content":"* In the unlikely case that same index is present multiple times for `INDEX [INDEX…]`, HackNet will still successfully execute the edit command as long as the index is valid.","lastModifiedDate":"2022-04-06"},{"lineNumber":191,"author":{"gitId":"tzhan98"},"content":"* If multiple duplicate skill names are entered, HackNet will only take the skill with the highest proficiency.","lastModifiedDate":"2022-04-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"B1LLP4RK"},"content":"* `edit 2 -r n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing teams.","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"B1LLP4RK"},"content":"* `edit 2 t/HackNet s/` Appends the team `Hacknet` to the 2nd person and keep the current skills.","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"B1LLP4RK"},"content":"* `edit 2 3 s/ t/GoogleProject, Hackathon2022` Does not change the skills of 2nd and 3rd person in the list, and appends`GoogleProject` and `Hackathon2022` to the list of teams they belong to.","lastModifiedDate":"2022-04-06"},{"lineNumber":198,"author":{"gitId":"B1LLP4RK"},"content":"* `edit 1 2 3 -r s/Java_100, Python_80, t/` Edits the skills of the 1st, 2nd and 3rd person to be `java` and `python` only with proficiency of 100 and 80. The exiting teams are cleared as well.","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"tzhan98"},"content":"* `edit 1 s/C_90, C_2, C_11` will result in the 1st person in the list having skill `C` with proficiency `90` as it is the highest value.","lastModifiedDate":"2022-04-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Deleting a person: `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"Jiaaa-yang"},"content":"Deletes the specified person from HackNet.","lastModifiedDate":"2022-02-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"Jiaaa-yang"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"Jiaaa-yang"},"content":"Clears all existing contacts from HackNet.","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"Jiaaa-yang"},"content":"Format: `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"Jiaaa-yang"},"content":"## Team Forming","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"tzhan98"},"content":"This section contains commands that will aid you to find people with the technical skills you need to form your dream team.","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"Jiaaa-yang"},"content":"### Listing all persons: `list`","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"Jiaaa-yang"},"content":"Shows a list of all persons in HackNet.","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"Jiaaa-yang"},"content":"Format: `list`","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"Jiaaa-yang"},"content":"Finds persons whose *names* contain any of the given keywords.","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"Jiaaa-yang"},"content":"* `find alex melvin` returns `Alex Teo`, `Melvin Chan`\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"Jiaaa-yang"},"content":"  ![result for \u0027find alex melvin\u0027](images/findAlexMelvinResult.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"alexteo98"},"content":"### Locating persons by skills: `filter`","lastModifiedDate":"2022-03-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":251,"author":{"gitId":"alexteo98"},"content":"Finds persons that have the specified skills.","lastModifiedDate":"2022-03-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":253,"author":{"gitId":"alexteo98"},"content":"Format: `filter KEYWORD`","lastModifiedDate":"2022-03-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":255,"author":{"gitId":"alexteo98"},"content":"* The search is case-insensitive. e.g `java` will match `Java`","lastModifiedDate":"2022-03-07"},{"lineNumber":256,"author":{"gitId":"alexteo98"},"content":"* Only full words will be matched e.g. `C` will not match `C#`","lastModifiedDate":"2022-03-07"},{"lineNumber":257,"author":{"gitId":"alexteo98"},"content":"* This command accepts multiple skills to be filtered,","lastModifiedDate":"2022-04-04"},{"lineNumber":258,"author":{"gitId":"alexteo98"},"content":"e.g. `filter c java` will filter all those with `C` \u003cb\u003e\u003cu\u003eAND\u003c/u\u003e\u003c/b\u003e `Java`.","lastModifiedDate":"2022-04-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-07"},{"lineNumber":261,"author":{"gitId":"Jiaaa-yang"},"content":"* `filter C` returns `Alex Teo`, `Lye Jia Yang` and `Toh Zhan Qing`","lastModifiedDate":"2022-03-31"},{"lineNumber":262,"author":{"gitId":"Jiaaa-yang"},"content":"* `filter java` returns `Junha Park`\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":263,"author":{"gitId":"alexteo98"},"content":"  ![result for \u0027filter C\u0027](images/filterCResult.png)","lastModifiedDate":"2022-03-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":265,"author":{"gitId":"Jiaaa-yang"},"content":"### Sorting persons by skill proficiency: `sort`","lastModifiedDate":"2022-03-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":267,"author":{"gitId":"Jiaaa-yang"},"content":"Sort persons in descending level of proficiency of specified skill.","lastModifiedDate":"2022-03-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":269,"author":{"gitId":"Jiaaa-yang"},"content":"Format: `sort SKILL`","lastModifiedDate":"2022-03-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":271,"author":{"gitId":"Jiaaa-yang"},"content":"* Only persons with the specified `SKILL` will be listed","lastModifiedDate":"2022-03-11"},{"lineNumber":272,"author":{"gitId":"Jiaaa-yang"},"content":"* The search is case-insensitive. e.g `java` will match `Java`","lastModifiedDate":"2022-03-11"},{"lineNumber":273,"author":{"gitId":"Jiaaa-yang"},"content":"* Only full words will be matched e.g. `C` will not match `C#`","lastModifiedDate":"2022-03-11"},{"lineNumber":274,"author":{"gitId":"Jiaaa-yang"},"content":"* The list will be shown in descending level of skill proficiency","lastModifiedDate":"2022-03-11"},{"lineNumber":275,"author":{"gitId":"alexteo98"},"content":"* This command only accepts \u003cb\u003e\u003cu\u003eONE\u003c/u\u003e\u003c/b\u003e skill as the sorting criteria.","lastModifiedDate":"2022-04-04"},{"lineNumber":276,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":277,"author":{"gitId":"Jiaaa-yang"},"content":"Examples:","lastModifiedDate":"2022-03-11"},{"lineNumber":278,"author":{"gitId":"Jiaaa-yang"},"content":"* `sort Python` shows persons with `Python` as a skill in descending order of proficiency","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":280,"author":{"gitId":"Jiaaa-yang"},"content":"### Mark/unmark contact as potential teammates: `team/unteam`","lastModifiedDate":"2022-03-29"},{"lineNumber":281,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"Jiaaa-yang"},"content":"Mark/unmark contacts as potential teammates for the team you are currently forming. A marked contact will be highlighted for clarity.","lastModifiedDate":"2022-04-09"},{"lineNumber":283,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":284,"author":{"gitId":"Jiaaa-yang"},"content":"Format:","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"Jiaaa-yang"},"content":"* `team INDEX`","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"Jiaaa-yang"},"content":"* `unteam INDEX`","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"Jiaaa-yang"},"content":"    * Marks/unmarks the person at `INDEX`as potential teammate","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"Jiaaa-yang"},"content":"    * The index refers to the index number shown in the displayed person list","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"Jiaaa-yang"},"content":"    * The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"Jiaaa-yang"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"Jiaaa-yang"},"content":"* `team 1` marks the first person as a potential teammate","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"Jiaaa-yang"},"content":"![result for \u0027team 1\u0027](images/teamCommandResultBefore.png)","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"Jiaaa-yang"},"content":"![result for \u0027team 1\u0027](images/teamCommandResultAfter.png)","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"Jiaaa-yang"},"content":"### Filter for past teammates: `filterteam`","lastModifiedDate":"2022-03-24"},{"lineNumber":299,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":300,"author":{"gitId":"MelvinCZJ"},"content":"Shows a list of past teammates that have been tagged with /t in HackNet.","lastModifiedDate":"2022-04-08"},{"lineNumber":301,"author":{"gitId":"MelvinCZJ"},"content":"E.g. `edit INDEX [t/TEAM]` command or `add n/NAME p/PHONE_NUMBER e/EMAIL g/GITHUB_USERNAME [t/TEAM]` command.","lastModifiedDate":"2022-04-08"},{"lineNumber":302,"author":{"gitId":"MelvinCZJ"},"content":"Potential teammates marked using the `team` command will **NOT** be shown using the `filterteam` command.","lastModifiedDate":"2022-04-07"},{"lineNumber":303,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":304,"author":{"gitId":"MelvinCZJ"},"content":"Format: `filterteam`","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":306,"author":{"gitId":"Jiaaa-yang"},"content":"### Show all potential teammates: `show`","lastModifiedDate":"2022-03-22"},{"lineNumber":307,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":308,"author":{"gitId":"Jiaaa-yang"},"content":"Shows the list of all persons marked as potential teammates","lastModifiedDate":"2022-03-22"},{"lineNumber":309,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":310,"author":{"gitId":"Jiaaa-yang"},"content":"Format: `show`","lastModifiedDate":"2022-03-22"},{"lineNumber":311,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":312,"author":{"gitId":"Jiaaa-yang"},"content":"## Utility","lastModifiedDate":"2022-03-31"},{"lineNumber":313,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":314,"author":{"gitId":"Jiaaa-yang"},"content":"This section contains some commands/shortcuts that can improve your work efficiency in using **HackNet**.","lastModifiedDate":"2022-03-31"},{"lineNumber":315,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":316,"author":{"gitId":"alexteo98"},"content":"### Undo last command: `undo`","lastModifiedDate":"2022-03-30"},{"lineNumber":317,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":318,"author":{"gitId":"alexteo98"},"content":"Undo the last command that changes HackNet. \u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":319,"author":{"gitId":"alexteo98"},"content":"Only these commands that changed HackNet can be undone:","lastModifiedDate":"2022-03-30"},{"lineNumber":320,"author":{"gitId":"alexteo98"},"content":"* Add","lastModifiedDate":"2022-03-30"},{"lineNumber":321,"author":{"gitId":"alexteo98"},"content":"* Delete","lastModifiedDate":"2022-03-30"},{"lineNumber":322,"author":{"gitId":"alexteo98"},"content":"* Edit","lastModifiedDate":"2022-03-30"},{"lineNumber":323,"author":{"gitId":"alexteo98"},"content":"* Team","lastModifiedDate":"2022-03-30"},{"lineNumber":324,"author":{"gitId":"alexteo98"},"content":"* Unteam","lastModifiedDate":"2022-03-30"},{"lineNumber":325,"author":{"gitId":"alexteo98"},"content":"* Clear","lastModifiedDate":"2022-03-30"},{"lineNumber":326,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":327,"author":{"gitId":"alexteo98"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":328,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":329,"author":{"gitId":"alexteo98"},"content":"**:information_source: Notes about the undo command:**\u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":330,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":331,"author":{"gitId":"alexteo98"},"content":"* The commands executed will be stored in history, please use the `undo` command to restore them.","lastModifiedDate":"2022-04-03"},{"lineNumber":332,"author":{"gitId":"alexteo98"},"content":"* Only the commands as listed above can be undone.","lastModifiedDate":"2022-04-03"},{"lineNumber":333,"author":{"gitId":"alexteo98"},"content":"* If a different command is executed after a command is undone,","lastModifiedDate":"2022-04-03"},{"lineNumber":334,"author":{"gitId":"B1LLP4RK"},"content":"the undone command will be removed from history and can no longer be redone.","lastModifiedDate":"2022-04-06"},{"lineNumber":335,"author":{"gitId":"alexteo98"},"content":"* e.g `Add person 1 -\u003e Add person 2 -\u003e undo -\u003e Add person 3` will have the same persons and history as","lastModifiedDate":"2022-04-03"},{"lineNumber":336,"author":{"gitId":"alexteo98"},"content":"  `Add person 1 -\u003e  Add person 3`","lastModifiedDate":"2022-04-03"},{"lineNumber":337,"author":{"gitId":"alexteo98"},"content":"* \u003cb\u003eIMPORTANT!\u003c/b\u003e All commands in history will be removed when the application exits.","lastModifiedDate":"2022-04-03"},{"lineNumber":338,"author":{"gitId":"alexteo98"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":339,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":340,"author":{"gitId":"alexteo98"},"content":"### Redo last command: `redo`","lastModifiedDate":"2022-03-30"},{"lineNumber":341,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":342,"author":{"gitId":"alexteo98"},"content":"Redo the command that was previously undone.","lastModifiedDate":"2022-03-30"},{"lineNumber":343,"author":{"gitId":"alexteo98"},"content":"Only these commands that changes HackNet can be redone:","lastModifiedDate":"2022-04-05"},{"lineNumber":344,"author":{"gitId":"alexteo98"},"content":"* Add","lastModifiedDate":"2022-04-03"},{"lineNumber":345,"author":{"gitId":"alexteo98"},"content":"* Delete","lastModifiedDate":"2022-04-03"},{"lineNumber":346,"author":{"gitId":"alexteo98"},"content":"* Edit","lastModifiedDate":"2022-04-03"},{"lineNumber":347,"author":{"gitId":"alexteo98"},"content":"* Team","lastModifiedDate":"2022-04-03"},{"lineNumber":348,"author":{"gitId":"alexteo98"},"content":"* Unteam","lastModifiedDate":"2022-04-03"},{"lineNumber":349,"author":{"gitId":"alexteo98"},"content":"* Clear","lastModifiedDate":"2022-04-03"},{"lineNumber":350,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":351,"author":{"gitId":"alexteo98"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":352,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":353,"author":{"gitId":"alexteo98"},"content":"**:information_source: Notes about the redo command:**\u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":354,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":355,"author":{"gitId":"alexteo98"},"content":"* This command will revert HackNet back to the state before the last command is executed.","lastModifiedDate":"2022-04-03"},{"lineNumber":356,"author":{"gitId":"alexteo98"},"content":"* Only the commands specified above can be redone.","lastModifiedDate":"2022-04-03"},{"lineNumber":357,"author":{"gitId":"alexteo98"},"content":"* If a command is executed and there are commands in the history,","lastModifiedDate":"2022-04-03"},{"lineNumber":358,"author":{"gitId":"alexteo98"},"content":"those commands that are not redone will be removed from history.","lastModifiedDate":"2022-04-03"},{"lineNumber":359,"author":{"gitId":"alexteo98"},"content":"* \u003cb\u003eIMPORTANT!\u003c/b\u003e All commands in history will be removed when the application exits.","lastModifiedDate":"2022-04-03"},{"lineNumber":360,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":361,"author":{"gitId":"alexteo98"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":362,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":363,"author":{"gitId":"MelvinCZJ"},"content":"### Navigating User Input History: `↑`, `↓`","lastModifiedDate":"2022-03-25"},{"lineNumber":364,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":365,"author":{"gitId":"MelvinCZJ"},"content":"Allows user to quickly retrieve their previous inputs from current session by using the up and down arrow keys.","lastModifiedDate":"2022-03-25"},{"lineNumber":366,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":367,"author":{"gitId":"MelvinCZJ"},"content":"Format: `↑`, `↓`","lastModifiedDate":"2022-03-25"},{"lineNumber":368,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"Jiaaa-yang"},"content":"## Data","lastModifiedDate":"2022-03-24"},{"lineNumber":376,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"Jiaaa-yang"},"content":"This section contains information about how we save your data across sessions.","lastModifiedDate":"2022-03-29"},{"lineNumber":378,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"Jiaaa-yang"},"content":"HackNet data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":385,"author":{"gitId":"Jiaaa-yang"},"content":"HackNet data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-02-28"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":387,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":388,"author":{"gitId":"Jiaaa-yang"},"content":"If your changes to the data file makes its format invalid, HackNet will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-02-28"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":391,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"Jiaaa-yang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous HackNet home folder.","lastModifiedDate":"2022-02-28"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"MelvinCZJ"},"content":"**Q**: Why does HackNet not show the proficiency of individual\u0027s skills?\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":403,"author":{"gitId":"MelvinCZJ"},"content":"**A**: This is because how everyone perceives their own skill proficiency is only a rough gauge and the numbers may not accurately reflect in real life. Therefore, to reduce bias, HackNet distinguishes between different level of skill proficiencies with different hues of green, with brighter green as more proficient in that particular skill.","lastModifiedDate":"2022-04-08"},{"lineNumber":404,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":405,"author":{"gitId":"MelvinCZJ"},"content":"**Q**: I am colour blind and cannot differentiate between skill proficiency colours. What should I do?\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":406,"author":{"gitId":"MelvinCZJ"},"content":"**A**: You can use the feature `sort` to list out contacts with that particular skill in descending order. (eg. `sort Java`)","lastModifiedDate":"2022-04-08"},{"lineNumber":407,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":408,"author":{"gitId":"Jiaaa-yang"},"content":"**Q**: What is the difference between **past teammates** and **potential teammates**?\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":409,"author":{"gitId":"Jiaaa-yang"},"content":"**A**: Past teammates are contacts that you have worked on a project together with, and appear as a _blue_ tag in **HackNet**. Potential teammates are contacts you want to work with, whom you mark in **HackNet** with a highlighted _turquoise_ colour.","lastModifiedDate":"2022-04-09"},{"lineNumber":410,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":411,"author":{"gitId":"MelvinCZJ"},"content":"**Q**: What is the difference between `list`, `show` and `filterteam`?\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":412,"author":{"gitId":"MelvinCZJ"},"content":"**A**: `list` displays _all_ of your contacts while `show` will only display contacts that you have marked with `team`. Lastly, `filterteam` will display those contacts that you have marked with `/t` (the blue tags)","lastModifiedDate":"2022-04-08"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"B1LLP4RK"},"content":"**Help** | `help [TOPIC]`","lastModifiedDate":"2022-04-06"},{"lineNumber":421,"author":{"gitId":"B1LLP4RK"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL g/GITHUB_USERNAME [t/TEAM…]​ [s/SKILLNAME_SKILLPROFICENCY…]​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com g/jameshooo t/hackathon2021, hackathon2022 s/java_70`","lastModifiedDate":"2022-04-06"},{"lineNumber":422,"author":{"gitId":"B1LLP4RK"},"content":"**Edit** | `edit INDEX [INDEX…] [-r] [n/NAME] [p/PHONE] [e/EMAIL] [g/GITHUB_USERNAME] [t/TEAM…]​ [s/SKILLNAME_SKILLPROFICENCY…]​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-04-06"},{"lineNumber":423,"author":{"gitId":"Jiaaa-yang"},"content":"**Mark/unmark contacts** | `team`, `unteam` \u003cbr\u003e e.g., `team 1`","lastModifiedDate":"2022-04-03"},{"lineNumber":424,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2022-03-24"},{"lineNumber":425,"author":{"gitId":"Jiaaa-yang"},"content":"**Clear** | `clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":426,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2022-03-24"},{"lineNumber":427,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"alexteo98"},"content":"**Filter** | `filter SKILL`\u003cbr\u003e e.g. `filter c`","lastModifiedDate":"2022-03-13"},{"lineNumber":429,"author":{"gitId":"Jiaaa-yang"},"content":"**Sort** | `sort SKILL`\u003cbr\u003e e.g., `sort Python`","lastModifiedDate":"2022-03-11"},{"lineNumber":430,"author":{"gitId":"Jiaaa-yang"},"content":"**Filter Past Teammates** | `filterteam`","lastModifiedDate":"2022-03-24"},{"lineNumber":431,"author":{"gitId":"Jiaaa-yang"},"content":"**Show potential teammates** | `show`","lastModifiedDate":"2022-03-22"},{"lineNumber":432,"author":{"gitId":"Jiaaa-yang"},"content":"**Exit HackNet** | `exit`","lastModifiedDate":"2022-03-24"},{"lineNumber":433,"author":{"gitId":"MelvinCZJ"},"content":"**Navigate User Input History** | `↑`, `↓`","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"alexteo98":62,"tzhan98":31,"B1LLP4RK":32,"-":148,"Jiaaa-yang":141,"MelvinCZJ":19}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"@startuml","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"!include style.puml","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"end box","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"end box","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"[-\u003e LogicManager : execute([ADD])","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"activate LogicManager","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"LogicManager -\u003e AddressBookParser : parseCommand([ADD])","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"create AddCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"activate AddCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"AddressBookParser -\u003e AddCommandParser : parse([ADD])","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"activate AddCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"create Person","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"AddCommandParser -\u003e Person","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"activate Person","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"Person --\u003e AddCommandParser : p","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"deactivate Person","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"create AddCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"AddCommandParser -\u003e AddCommand : p","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"activate AddCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"deactivate AddCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"destroy AddCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"activate AddCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"AddCommand -\u003e Model : hasPerson(p)","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"activate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"deactivate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"B1LLP4RK"},"content":"AddCommand -\u003e Model : addPerson(p)","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"B1LLP4RK"},"content":"activate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"B1LLP4RK"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"deactivate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"AddCommand -\u003e Model : commitAddressBook()","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"B1LLP4RK"},"content":"activate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"B1LLP4RK"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"B1LLP4RK"},"content":"deactivate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"create CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"B1LLP4RK"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"B1LLP4RK"},"content":"activate CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"B1LLP4RK"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"B1LLP4RK"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"deactivate AddCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":87,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"B1LLP4RK"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-09"},{"lineNumber":90,"author":{"gitId":"B1LLP4RK"},"content":"@enduml","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"B1LLP4RK":90}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"AddressBook *-right-\u003e \"1\" UniqueTeamList","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"AddressBook *-right-\u003e \"1\" UniqueSkillList","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"UniqueSkillList -[hidden]down- UniqueTeamList","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"UniqueTeamList -[hidden]down- UniquePersonList","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"UniqueSkillList *-right-\u003e \"*\" Skill","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"UniqueTeamList *-right-\u003e \"*\" Team","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"Skill -[hidden]down- Team","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"Person -up-\u003e \"*\" Team","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"Person -up-\u003e \"*\" Skill","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"Person *--\u003e GithubUsername","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"B1LLP4RK":10,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"DeleteCommand -\u003e Model : commitAddressBook()","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"activate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"deactivate Model","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"B1LLP4RK":6,"-":69}},{"path":"docs/diagrams/EditCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"@startuml","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"!include style.puml","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"package core{","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"    class Index LOGIC_COLOR_T2","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"package Logic{","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"    class EditCommandParser {","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"        +\u003ccolor:white\u003eparse(String userInput): EditCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"    class EditPersonDescriptor{","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"        -\u003ccolor:white\u003eName name;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"        -\u003ccolor:white\u003ePhone phone;","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"        -\u003ccolor:white\u003e Email email;","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"        -\u003ccolor:white\u003e GithubUsername username;","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"        -\u003ccolor:white\u003e Set\u003cTeam\u003e teams;","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"        -\u003ccolor:white\u003e SkillSet skillSet;","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"    class EditCommand{","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"        -\u003ccolor:white\u003eisResetMode:boolean","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"        +\u003ccolor:white\u003eexecute(Model model):CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"        -\u003ccolor:white\u003eexecuteSingleEdit(Model model):CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"        -\u003ccolor:white\u003eexecuteBatchEdit(Model model):CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"EditCommandParser .down.\u003e EditCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"EditCommandParser .down.\u003e Index","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"EditCommandParser .down.\u003e EditPersonDescriptor","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"EditCommand --\u003e  \"1\" EditPersonDescriptor","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"EditCommand -down-\u003e \"1.. indices\" Index","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"EditPersonDescriptor .[hidden].\u003e Index","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"show EditCommandParser members","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"show EditPersonDescriptor members","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"show EditCommand members","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"@enduml","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"B1LLP4RK":44}},{"path":"docs/diagrams/FilterSkillCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"class Skill{","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"skillName : String","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"skillProficiency : int","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"isSameSkill(skill : Skill) : boolean","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"class \"\u003c\u003cInterface\u003e\u003e\\nPredicate\" {","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    \u003ccolor:white\u003etest(Person)\u003c/color\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"class PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"class FilterSkillCommand{","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    \u003ccolor:white\u003eexecute(Model model)","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"class FilterSkillCommandParser{","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    \u003ccolor:white\u003eparse(String args)","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"show \"FilterSkillCommand\" members","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"show \"FilterSkillCommandParser\" members","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"show \"\u003c\u003cInterface\u003e\u003e\\nPredicate\" members","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nPredicate\" ..\u003e PersonContainsSkillPredicate","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser --\u003e \"1    \" FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser --\u003e Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"PersonContainsSkillPredicate --\u003e \"1 \" Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand  --\u003e \"1 \" PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alexteo98":34}},{"path":"docs/diagrams/FilterSkilllSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"participant \":FilterSkillCommandParser\" as FilterSkillCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"participant \"f:FilterSkillCommand\" as FilterSkillCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"participant \":PersonContainsSkillPredicate\" as PersonContainsSkillPredicate MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"participant \":Skill\" as Skill MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"participant \":SkillSet\" as SkillSet MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"[-\u003e LogicManager : execute(\"filter java\")","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter java\")","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"create FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"AddressBookParser -\u003e FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"activate FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"deactivate FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"AddressBookParser -\u003e FilterSkillCommandParser : parse(\"java\")","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"activate FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"create Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser -\u003e Skill : new Skill(\"java\")","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"activate Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"Skill -\u003e FilterSkillCommandParser : s","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"deactivate Skill","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"create SkillSet","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser -\u003e SkillSet : new SkillSet(s)","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"activate SkillSet","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"SkillSet -\u003e FilterSkillCommandParser : skillSet","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"deactivate SkillSet","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"create PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser -\u003e PersonContainsSkillPredicate : new PersonContainsSkillPredicate(skillSet)","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"activate PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"PersonContainsSkillPredicate -\u003e FilterSkillCommandParser : p","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"deactivate PersonContainsSkillPredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"create FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser -\u003e FilterSkillCommand : new FilterSkillCommand(p)","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"activate FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand --\u003e FilterSkillCommandParser : f","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"deactivate FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"deactivate FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"destroy FilterSkillCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"LogicManager -\u003e FilterSkillCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"activate FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand -\u003e Model : updateDisplayPersonList(p)","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"Model --\u003e FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"CommandResult --\u003e FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"FilterSkillCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"deactivate FilterSkillCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alexteo98":90}},{"path":"docs/diagrams/MakeTeamCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"class MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"class MakeTeamCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"class \"\u003c\u003cenumeration\u003e\u003e\\nTeamAction\" {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003ccolor:white\u003eADD\u003c/color\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003ccolor:white\u003eREMOVE\u003c/color\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"show \"\u003c\u003cenumeration\u003e\u003e\\nTeamAction\" members","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"MakeTeamCommandParser ..\u003e MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"MakeTeamCommandParser --\u003e \"\u003c\u003cenumeration\u003e\u003e\\nTeamAction\"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"MakeTeamCommand -right-\u003e \"\u003c\u003cenumeration\u003e\u003e\\nTeamAction\"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Jiaaa-yang":18}},{"path":"docs/diagrams/MakeTeamSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"participant \":MakeTeamCommand\" as MakeTeamCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"[-\u003e MakeTeamCommand : execute(model)","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"activate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"alt TeamAction.ADD","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    MakeTeamCommand -\u003e MakeTeamCommand: createNewTeamPerson(true)","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    activate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    create Person","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    MakeTeamCommand -\u003e Person","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    activate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    Person --\u003e MakeTeamCommand: updatedPerson","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    deactivate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    deactivate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"else TeamAction.REMOVE","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    MakeTeamCommand -\u003e MakeTeamCommand: createNewTeamPerson(false)","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    activate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    create Person","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    MakeTeamCommand -\u003e Person","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    activate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    Person --\u003e MakeTeamCommand: updatedPerson","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    deactivate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    deactivate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"MakeTeamCommand -\u003e Model: setPerson(updatedPerson)","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"Model --\u003e MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"[\u003c--MakeTeamCommand: CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"deactivate MakeTeamCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Jiaaa-yang":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"Class VersionedAddressBook","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"Class GithubUserName","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"Class Team","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"Class SkillSet","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"Class Skill","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"VersionedAddressBook -right-|\u003e AddressBook","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"Person *--\u003e GithubUserName","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"Person *--\u003e \"*\" Team","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"Person *--\u003e \"1\" SkillSet","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"SkillSet --\u003e \"*\" Skill","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"Phone -[hidden]right-\u003e GithubUserName","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"GithubUserName -[hidden]right-\u003e Email","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"B1LLP4RK":12,"-":44}},{"path":"docs/diagrams/SkillClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"class Person {","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003eemail","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003egithubUsername","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003ephone","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003eskillSet","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003eteam","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"class Skill {","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003eskillName : String","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003eskillProficiency : int","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003eisSameSkill(skill : Skill) : boolean","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"class SkillSet {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003eskillset : Set\u003cSkill\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003ehasSkill(skill : Skill) : boolean","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003eaddAll(SkillSeq : SkillSet)","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003eadd(skill : Skill)","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"\u003ccolor:white\u003egetSkillProficiency(skill : Skill) : int","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"show \"Person\" members","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"show \"Skill\" members","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"show \"SkillSet\" members","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"Person \"1\" -- \"1\" SkillSet : \u003e have","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"SkillSet \"1\" *-- \"0..*\"Skill : \u003e contains","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"alexteo98":20,"tzhan98":16}},{"path":"docs/diagrams/SkillSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"Person -\u003e SkillSet : getSkillProficiency(skill)","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"loop for every skill in SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"    SkillSet -\u003e Skill : isSameSkill(skill)","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"    SkillSet \u003c-- Skill","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"Person \u003c-- SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tzhan98":11}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UndoCommand -\u003e Model : undoAddressBook()","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model -\u003e VersionedAddressBook : undo()","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"activate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"VersionedAddressBook -\u003e VersionedAddressBook :undo()","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"VersionedAddressBook -\u003e VersionedAddressBook :setPersons()","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"VersionedAddressBook --\u003e Model :","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"alexteo98":2,"-":52}},{"path":"docs/images/skillClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"class Skill {","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"skillName","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"skillProficiency","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"\u0027class SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"Person \"1\" -- \"0..*\" Skill : \u003e have","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tzhan98":14}},{"path":"docs/team/alexteo98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"title: Alex Teo\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"HackNet helps computing students find teammates to do projects with. It allows users to add and find contacts by technical skills, providing them a platform to find the right teammates for each project.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    * [Sort persons by Skills](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/31)","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"      * \u003cb\u003eWhat it does: \u003c/b\u003e This new feature allows for the user to filter out persons in HackNet who do not possess the specified skills.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"      * \u003cb\u003eJustification: \u003c/b\u003e This new feature is one of the features built on top of the Skills feature. It allows the user to easily find persons who are a good fit for his team that requires a certain skill.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"      * \u003cb\u003eHighlights: \u003c/b\u003e This feature was initially implemented to only accept one skill as its argument, but was updated to accept more than one skill as its argument after the bug was found.","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    * [Undo/Redo Command](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/76)","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"      * \u003cb\u003eWhat it does: \u003c/b\u003e This new feature allows for the user to undo and redo his/her past commands so that they are not required to delete and add a person again in the event that they made a mistake.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"      * \u003cb\u003eJustification: \u003c/b\u003e This new feature is one of the features implemented to improve the Quality-of-Life of the user. Previously, if a mistake was made, the user had to either edit the person or to delete and add the person again.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"This feature allows the user to easily undo their mistake, and redo them if necessary. Together with the command history feature, it allows its users to quickly undo and restore their past command and making the correct changes.","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"      * \u003cb\u003eHighlights: \u003c/b\u003e This feature was especially difficult to implement as a new version of AddressBook with versioning support had to created.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"Deep understanding of the internal working of the model was required. Tests with regards to Model, AddressBook and all commands","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"had to be updated and new tests had to be created for the new class and commands.","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dalexteo98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    * Set up Team Repo","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    * Set up milestones (v1.1)","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"* **Enhancements to existing features / Bug fixes**:","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"    * [Fix AssertFailure bug in `JsonSerializableAddressBookTest.java`](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/35)","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"      * Identified previously closed issue regarding test routines, due to missing update on test data files.","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"    * [Fix bug on Filter feature on multiple skill inputs](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/62)","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"      * Fixed bug on Filter feature doing nothing when multiple skills are entered as filter criteria. Improved upon the feature to accept multiple skills afterwards.","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        * Add  documentation for `filter`, `undo` and `redo` features.","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        * Add warning notes on limitations of features.","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        * Class Diagrams for FilterSkillCommandClass","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"        * Sequence Diagrams for FilterSkillCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        * Sequence Diagrams for UndoCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    * PR reviewed:","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"[#32](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/32),","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"[#38](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/38),","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"[#57](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/57),","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"[#63](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/63),","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"[#154](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/154),","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"[#164](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/164)","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"alexteo98":54}},{"path":"docs/team/b1llp4rk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"title: B1LLP4RK\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"HackNet - HackNet is a desktop address book application used for finding teammates to do team projects with. It interacts the user using a CLI, and has a GUI created with JavaFX. It is a product of brownfield project of turning [AB3](https://se-education.org/addressbook-level3/) into an addressbook program targeted to computer science students trying to form a project team.","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003db1llp4rk\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"    * Enable editing multiple persons with `edit` command","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"        * **What it does:** This feature allows user to edit multiple persons in HackNet at once, for teams and skills fields.","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"        * **Justification:** A student who uses HackNet might need to edit multiple persons. For example, the student might have learned about a team project that 5 of his friends are working on. After adding friends that were not present in the HackNet data, the student would prefer one command to `edit` the team info for all five of them, instead of having to type the `edit` command five times for each persons.","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"        * **Highlights:** [`batchedit`](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/79) command was created initially to enable editing multiple persons. However later the command and its features were [assimilated to `edit` command](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/84). The decision was made as an attempt to minimize the types of commands that user has to learn.","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"    * Establish reset and [default mode](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/82)","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"        * **What it does:** Either reset or default mode can be chosen by the user when using the `edit` command. In the reset mode, the teams and skills values that the user provides as parameter of `edit` completely replaces the previous values for teams and skills of the person(s) that the user is editing. In default mode, the teams and skills values that the user provides gets appended to the pre-existing teams and skills of the person(s) being edited.","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"        * **Justification:** Before establishing the two modes, the only behaviour of `edit` was equal to the reset mode. Assume a case where a user has a person in the HackNet data that has multiple skills, and wants to add one more skill to the person. In that case, the user has to type all the skills that the person data had in HackNet again, only to add just one more skill. Establishing another behaviour defined to be default mode now allows user to pass in only the new skill as the parameter for `edit`.","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"        * **Highlights:** Reset mode is activated only when the user deliberately indicates `r` option. Otherwise `edit` command operates in default mode. This design decision was based on the ideas that default mode would be used more often to add a new skill or team of a person, and often used feature must be short to type. The two modes exist both when editing multiple persons and only one person.","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"    * Enable comma separation of multiple values for teams and skills","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"        * **What it does:** The user can use a comma to separate multiple values of teams or skills, for `add` and `edit` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"        * **Justification:** The previous design of passing in multiple values of teams and skills required user to prefix each value with `t/` or `s/`. Using a comma is easier, especially when passing a large number of teams or skills. This feature was first implemented on [`edit`](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/79) command, and was later added to [`add`](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/87) command.","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"        * **Highlights:** Consecutive whitespaces before and after the commas are ignored. This is an attempt to take into account that normal use of comma is followed by a space, and to be generous towards mistakes where multiple spaces are used.","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"* **Bug Fixes**","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    * [Fixed `edit`](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/143) to ignore fields other than teams and skills when editing multiple persons in batch, as UserGuide states. This prevents such case when the user tries to edit multiple persons in HackNet to have the same phone number, which is likely to be invalid.","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"    * Inability to redo some edit commands was discovered while [reinforcing integration test of edit command](https://github.com/AY2122S2-CS2103T-W13-3/tp/issues/156), and was fixed.","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"        * Commands that alter the data of HackNet have to commit the changed data, and this step was omitted for `edit` commands that modify multiple persons at once.","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"    * Updated section of `edit` command on how to edit multiple persons, and using the reset and default mode.","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"    * Updated sections of `edit` and `add` command on the use of commas to separate multiple values.","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"    * Class diagram for EditCommand and Sequence diagram for `edit` command.","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"    * Updated AB3 diagrams including \u0027delete\u0027 sequence diagram and `Model` component\u0027s class diagrams.","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"* **Contributions to the team-based tasks**:","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"    * Took demo screenshots of v1.2 features","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"    * Polished the UserGuide and converting to pdf in v1.2","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"    * [Adapted user guide of AB3](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/37), the software that HackNet diverged off, to suite HackNet","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"    * [Adapted developer guide of](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/27) AB3 to suit HackNet","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"    * PRs reviewed [Add team forming functionality](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/55), [Branch feature undo redo](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/76)","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"    * Created [spreadsheet](https://docs.google.com/spreadsheets/d/1o6p2SsmEs_IymRg4lEkOU_lBn1cOKKRQ4SA5hR088cA/edit#gid\u003d0) to manage even spread of PR review work within teammates.","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"    * Posted a [tip](https://github.com/nus-cs2103-AY2122S2/forum/issues/129) on customizing Intellij to follow common git convention on the forum.","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"B1LLP4RK":52}},{"path":"docs/team/jiaaa-yang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"title: Lye Jia Yang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"HackNet helps computing students find teammates to do projects with. It allows users to add and find contacts by technical skills, providing them a platform to find the right teammates for each project.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"  * Sort function","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    * Added support for sorting command, which allows users to view their contacts in order of decreasing proficiency of a specified skill.","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    * To make the function extensible, I also implemented a custom Comparator class `PersonBySkillProficiencyComparator`, so only changes to this class is required for future changes, such as sorting by multiple skills.","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"  * Mark/unmark function:","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    * Added support to mark and unmark contacts, providing users a way to simulate possible team ups.","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    * This also included a suitable change to the GUI of the JavaFX application, which highlights marked contacts for ease of use for users.","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"  * Address to GitHub username:","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    * Changed the fields of address from AB3 to a GitHub username field to better suit our target users.","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    * I also made the field a clickable hyperlink in the application, which opens up the GitHub profile webpage of the contact.","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"  * Add support for sorted list:","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    * Upgraded the original `FilteredList` in AB3 to support sorting by wrapping it with a `SortedList`, while supplying APIs to filter or sort, or do both operations on the list to display in the application.","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003djiaaa-yang\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    * Added steps to show alternative way to start application when double-clicking doesn\u0027t work","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    * Grouped functionality into sections (Contact Management, Team Forming, Utility) for better navigation","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"    * Add explanations for `sort`, `team`, `unteam`, and `show` commands, with relevant graphic aids","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"    * Documented my implementation on the team forming feature:","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"      * Added a class diagram for `MakeTeamCommand`","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"      * Added a sequence diagram for the execution of a `MakeTeamCommand`","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"    * Added main use cases (UC01 - UC04)","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"* **Team Based tasks**:","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"  * Added target user and brief summary for User Guide","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"  * Created multiple milestones (v1.1, v1.2)","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"  * Authored JAR file releases (v1.2, v1.3, v1.3.1)","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"  * Added demo screenshots for v1.3","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"* **Review/Mentoring**:","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"  * Identified bug in team member\u0027s pull request before merging ([Navigate user input history](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/69))","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"  * Suggested changes to maintain code quality ([Rename tags to teams](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/48))","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"  * Caught logical errors and unwanted changes before merging ([Edit to batchedit](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/84))","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"* **Beyond the Team**:","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"  * Identified feature flaw in other team\u0027s product during PED ([Schedule conflict](https://github.com/AY2122S2-CS2103-F09-1/tp/issues/211))","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"  * Identified bug in other team\u0027s product during PED ([View function bug](https://github.com/AY2122S2-CS2103-F09-1/tp/issues/215))","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"Jiaaa-yang":59}},{"path":"docs/team/melvinczj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"title: Melvin Chan Zijun\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"HackNet helps computing students find teammates to do projects with. It allows users to add and find contacts by technical skills, providing them a platform to find the right teammates for each project.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"  * [Filter contacts for past teammates: `filterteam`](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/52)","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    * **What it does**: This new feature allows user to filter the contacts in HackNet that the user has tagged as a","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"      teammate before, through the use of the `add` or `edit` commands.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"    * **Justification**: This feature allows user to easily find teammates that they have worked with before. This is","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"      helpful when the user wishes to look up someone they have previously worked with before.","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    * **Highlights**: This feature was built off the original `list` command from AB3. The name of the command was","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"      thought to be unintuitive and too long, the name was left as it is in the end to prevent confusion.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dmelvinczj\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtzhan98\u0026tabRepo\u003dAY2122S2-CS2103T-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"  * Enhanced the user input experience by allowing users to navigate their input history for the","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    current session using the `↑` and `↓` keys.","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"  * User Guide:","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"    * Added documentation for [`filterteam`](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/52) and [feature to navigate user input history](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/69)","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"* **Community**:","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"  * PR reviewed: [#77](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/77)","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"MelvinCZJ":36}},{"path":"docs/team/tzhan98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"title: Toh Zhan Qing\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"### Project: HackNet","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"HackNet helps computing students find teammates to do projects with. It allows users to add and find contacts by technical skills, providing them a platform to find the right teammates for each project.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"* **New Feature**: Skill feature","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"  * _What it does_: Stores a skill name together with a proficiency value which indicates how competent the individual is with the particular skill.","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"  * _Justification_: This feature is one of the unique selling point of HackNet and most of the other functions build on top of this feature. It allows the user to keep track of the expertise of individuals.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"  * _Highlights_: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands. To improve abstraction, I had to implement the class `SkillSet` to store multiple `Skill`s and a `JsonAdaptedSkill` to store the information in Json format.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"* **New Feature**: Skill to display as different colors to indicate proficiency","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"  * _What it does_: differentiate different level of skill proficiency with different hues of green with brighter green indicating a higher level of proficiency","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"  * _Justification_: How everyone perceives their own skill proficiency is only a rough gauge, and they may have different standards of judging their skill levels. Therefore, the numbers may not accurately reflect in real life. To reduce bias, we have decided on using a range of colors to indicate proficiency instead.","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtzhan98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtzhan98\u0026tabRepo\u003dAY2122S2-CS2103T-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"  * Set up milestones","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"  * manage release `v1.2.1` Trial release of HackNet","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"  * Account for bugs in trial PE and submit bug progress report","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"  * Enhanced `Help` Command to search for a topic to get help in.","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    * This allows for users to easily check for information of commands without constantly referring to the user guide","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"* **Bug fixes**:","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"  * Fix input validation of regex to exclude values from `Skill proficiency` [#136](https://github.com/AY2122S2-CS2103T-W13-3/tp/issues/136)","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"  * Fix bug that causes duplicates in `Skill`s tag and hence `Sort` feature to have unexpected output [#130](https://github.com/AY2122S2-CS2103T-W13-3/tp/issues/130)","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"  * Add more topics that `help` is able to search for such as `filterteam` [#107](https://github.com/AY2122S2-CS2103T-W13-3/tp/issues/107)","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"  * Add input validation for `Github username` such that it complies with actual Github username rules [#147](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/147)","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"  * Change HackNet to allow for duplicate `name` fields but reject any command that try to add/edit a duplicate or existing `Github username`, `phone number` or `email` [#154](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/154)","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"  * Add length checks for `email`, `team` and `skill` [#167](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/167)","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"  * Fix duplicate `Skill` tags during **multiple** `Skill` entry inputs (Separate issue from [#130](https://github.com/AY2122S2-CS2103T-W13-3/tp/issues/130))  [#181](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/181)","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    * Add documentation for [Help feature](https://github.com/AY2122S2-CS2103T-W13-3/tp/blob/master/docs/UserGuide.md#viewing-help-help)","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"    * Add documentation for [Skills feature](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/39/files)","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"    * [Fix UG errors](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/140)","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    * [Update UG and Add Q\u0026A](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/164)","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"    * [Update DG to include sequence diagrams and class diagrams of skills](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/59)","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    * [Add use cases, NFR and glossary](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/164)","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"  * PR reviewed with non-trivial comments [#62](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/62), [#73](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/73), [#79](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/79), [#141](https://github.com/AY2122S2-CS2103T-W13-3/tp/pull/141)","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"tzhan98":54}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    private static HostServices hostServices \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        hostServices \u003d getHostServices();","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns HostServices for current application instance,","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"Jiaaa-yang"},"content":"     * and is guaranteed to be non-null.","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"Jiaaa-yang"},"content":"    public static HostServices getHS() {","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(hostServices);","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"Jiaaa-yang"},"content":"        return hostServices;","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":183,"Jiaaa-yang":16}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_INVALID_INDEX_FOR_PERSON \u003d \"The person index provided is invalid\";","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_INVALID_INDEX_FOR_SOME_PERSON \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"        \"Not all of the person indices provided is valid\";","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alexteo98":1,"B1LLP4RK":3,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Returns an unmodifiable view of the filtered and sorted list of persons */","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    ObservableList\u003cPerson\u003e getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":48,"Jiaaa-yang":2}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"    public ObservableList\u003cPerson\u003e getDisplayPersonList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        return model.getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":79,"Jiaaa-yang":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":" * Adds a person to HackNet.","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to HackNet. \"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Multiple teams or skills should be separated by a comma.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        + PREFIX_GITHUB_USERNAME + \"GITHUB USERNAME \"","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"        + \"[\" + PREFIX_TEAM + \"TEAM...]\"","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"        + \"[\" + PREFIX_SKILL + \"SKILLNAME_SKILLPROFICENCY...]\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Example1: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        + PREFIX_GITHUB_USERNAME + \"johndoe-123 \"","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_TEAM + \"HackNet, WhiteHackers\"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_SKILL + \"Java_90\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Example2: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_NAME + \"Joe King \"","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_EMAIL + \"joking@example.com \"","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_GITHUB_USERNAME + \"joking-123 \"","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_TEAM + \"Google Serach Engine, Vim plugin\";","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in HackNet.\";","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"            String duplicatedField \u003d model.getDuplicateField(toAdd);","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            throw new CommandException(\"Error: Operation would result in persons with same \" + duplicatedField + \".\");","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alexteo98":1,"tzhan98":4,"B1LLP4RK":13,"-":55,"Jiaaa-yang":6}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.VersionedAddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d \"clears all data in Hack Net.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"        model.setAddressBook(new VersionedAddressBook());","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alexteo98":3,"tzhan98":1,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alexteo98":1,"B1LLP4RK":1,"-":51,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":" * Edits the details of an existing person in HackNet.","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String RESET_ARG \u003d \"r\";","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_USAGE_OPTIONS \u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"        \"The symbol \u0027-\u0027 is used to declare options for edit command, and can be declared only once in the command.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"            + \"The only available option is \u0027r\u0027, which makes the edit command execute in reset mode.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person(s) identified \"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"        + \"by the index number(s) used in the displayed person list.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Index numbers should be separated by a white space,\"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"        + \"as opposed to other teams and skill values that should be separated by a comma.\"","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"        + \"\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"        + \"By default, Teams will be appended.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"        + \"However in reset mode, editing Teams will purge all previous data.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"        + \"This means declaring t/ with no values in reset mode deletes all teams from the person(s) in reset mode.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"        + \"The concept of reset mode applies the same to Skills.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Only Teams and Skills will be changed when editing multiple persons in batch.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Other changes such as Name and Email will be silently ignored, if provided.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Parameters: INDEX [INDEX...] (must be a positive integer) \"","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"        + \"[-r](activates reset mode)\"","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        + \"[\" + PREFIX_GITHUB_USERNAME + \"GITHUB USERNAME] \"","lastModifiedDate":"2022-03-01"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"        + \"[\" + PREFIX_TEAM + \"TEAM...]\"","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"        + \"[\" + PREFIX_SKILL + \"SKILL NAME_SKILL PROFICIENCY...]\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Example 1: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\" + \"\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"B1LLP4RK"},"content":"        + \"Example 2: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_TEAM + \"System Maintenance, Python \"","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"B1LLP4RK"},"content":"        + PREFIX_SKILL;","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_EDIT_SINGLE_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String MESSAGE_EDIT_MULTIPLE_PERSON_SUCCESS \u003d \"Edited Persons: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in HackNet.\";","lastModifiedDate":"2022-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"B1LLP4RK"},"content":"    private final List\u003cIndex\u003e indicesToEdit;","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"    private final boolean isResetMode;","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor, boolean isResetMode) {","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"B1LLP4RK"},"content":"        this.indicesToEdit \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"        indicesToEdit.add(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"B1LLP4RK"},"content":"        this.isResetMode \u003d isResetMode;","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"B1LLP4RK"},"content":"     * Constructs EditCommand that edits multiple Persons in batch.","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"B1LLP4RK"},"content":"     * @param indices              List of indices of Persons to be edited in the displayed list","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"B1LLP4RK"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"B1LLP4RK"},"content":"     * @param isResetMode          of the person in the filtered person list to edit","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"B1LLP4RK"},"content":"    public EditCommand(List\u003cIndex\u003e indices, EditPersonDescriptor editPersonDescriptor, boolean isResetMode) {","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(indices);","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"B1LLP4RK"},"content":"        this.indicesToEdit \u003d indices;","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"B1LLP4RK"},"content":"        this.isResetMode \u003d isResetMode;","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"B1LLP4RK"},"content":"    public static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor,","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"B1LLP4RK"},"content":"                                            boolean isResetMode) {","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"B1LLP4RK"},"content":"        GithubUsername updatedUsername \u003d editPersonDescriptor.getGithubUsername()","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"B1LLP4RK"},"content":"            .orElse(personToEdit.getGithubUsername());","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e updatedTeams;","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"B1LLP4RK"},"content":"        SkillSet updatedSkillSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"B1LLP4RK"},"content":"        if (isResetMode) {","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"B1LLP4RK"},"content":"            updatedTeams \u003d editPersonDescriptor.getTeams().orElse(personToEdit.getTeams());","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"B1LLP4RK"},"content":"            updatedSkillSet \u003d editPersonDescriptor.getSkillSet().orElse(personToEdit.getSkillSet());","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"B1LLP4RK"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"B1LLP4RK"},"content":"            Set\u003cTeam\u003e previousTeams \u003d personToEdit.getTeams();","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"B1LLP4RK"},"content":"            Optional\u003cSet\u003cTeam\u003e\u003e teamsToAdd \u003d editPersonDescriptor.getTeams();","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"B1LLP4RK"},"content":"            updatedTeams \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"B1LLP4RK"},"content":"            updatedTeams.addAll(previousTeams);","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"B1LLP4RK"},"content":"            if (teamsToAdd.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"B1LLP4RK"},"content":"                updatedTeams.addAll(teamsToAdd.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"B1LLP4RK"},"content":"            SkillSet previousSkillSet \u003d personToEdit.getSkillSet();","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"B1LLP4RK"},"content":"            updatedSkillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"B1LLP4RK"},"content":"            updatedSkillSet.addAll(previousSkillSet);","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"B1LLP4RK"},"content":"            Optional\u003cSkillSet\u003e skillSetToAdd \u003d editPersonDescriptor.getSkillSet();","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"B1LLP4RK"},"content":"            if (skillSetToAdd.isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"B1LLP4RK"},"content":"                updatedSkillSet.addAll(skillSetToAdd.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"B1LLP4RK"},"content":"        // Potential teammate field to be unchanged on edit command","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isPotentialTeammate \u003d personToEdit.isPotentialTeammate();","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"B1LLP4RK"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedUsername,","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"B1LLP4RK"},"content":"            updatedTeams, updatedSkillSet, isPotentialTeammate);","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":156,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isSingleEdit \u003d this.indicesToEdit.size() \u003d\u003d 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"B1LLP4RK"},"content":"        CommandResult commandResult;","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"B1LLP4RK"},"content":"        if (isSingleEdit) {","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"B1LLP4RK"},"content":"            commandResult \u003d executeSingleEdit(model, lastShownList);","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"B1LLP4RK"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"B1LLP4RK"},"content":"            commandResult \u003d executeBatchEdit(model, lastShownList);","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"B1LLP4RK"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"B1LLP4RK"},"content":"        return commandResult;","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"B1LLP4RK"},"content":"        return indicesToEdit.equals(e.indicesToEdit)","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"B1LLP4RK"},"content":"            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"B1LLP4RK"},"content":"    private CommandResult executeSingleEdit(Model model, List\u003cPerson\u003e lastShownList) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"B1LLP4RK"},"content":"        Index index \u003d indicesToEdit.get(0);","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"B1LLP4RK"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":192,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor, isResetMode);","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"tzhan98"},"content":"        Model modelToCheckAgainst \u003d new ModelManager(model.getAddressBook(), model.getUserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":194,"author":{"gitId":"tzhan98"},"content":"        boolean isSuccessfullyRemoved \u003d modelToCheckAgainst.safeDeletePerson(personToEdit);","lastModifiedDate":"2022-04-07"},{"lineNumber":195,"author":{"gitId":"tzhan98"},"content":"        if (!isSuccessfullyRemoved) {","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"tzhan98"},"content":"            throw new CommandException(\"Error: Unable to edit; please contact the developers\");","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"tzhan98"},"content":"        if (modelToCheckAgainst.hasPerson(editedPerson)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":199,"author":{"gitId":"tzhan98"},"content":"            String duplicatedField \u003d modelToCheckAgainst.getDuplicateField(editedPerson);","lastModifiedDate":"2022-04-06"},{"lineNumber":200,"author":{"gitId":"tzhan98"},"content":"            throw new CommandException(\"Error: Operation would result in persons with same \" + duplicatedField + \".\");","lastModifiedDate":"2022-04-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":204,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-05"},{"lineNumber":205,"author":{"gitId":"B1LLP4RK"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SINGLE_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2022-03-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"B1LLP4RK"},"content":"    private EditPersonDescriptor extractOnlyTeamsAndSkillSet(EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-04-06"},{"lineNumber":209,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor editOnlyTeamsAndSkills \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-04-06"},{"lineNumber":210,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":211,"author":{"gitId":"B1LLP4RK"},"content":"        if (editPersonDescriptor.getTeams().isPresent()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":212,"author":{"gitId":"B1LLP4RK"},"content":"            editOnlyTeamsAndSkills.setTeams(editPersonDescriptor.getTeams().get());","lastModifiedDate":"2022-04-06"},{"lineNumber":213,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":214,"author":{"gitId":"B1LLP4RK"},"content":"        if (editPersonDescriptor.getSkillSet().isPresent()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":215,"author":{"gitId":"B1LLP4RK"},"content":"            editOnlyTeamsAndSkills.setSkillSet(editPersonDescriptor.getSkillSet().get());","lastModifiedDate":"2022-04-06"},{"lineNumber":216,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":217,"author":{"gitId":"B1LLP4RK"},"content":"        return editOnlyTeamsAndSkills;","lastModifiedDate":"2022-04-06"},{"lineNumber":218,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":219,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":220,"author":{"gitId":"B1LLP4RK"},"content":"    private CommandResult executeBatchEdit(Model model, List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2022-04-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":222,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isAllIndicesValid \u003d true;","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cName\u003e editedNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":224,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor onlyTeamAndSkillsetDescriptor \u003d extractOnlyTeamsAndSkillSet(editPersonDescriptor);","lastModifiedDate":"2022-04-06"},{"lineNumber":225,"author":{"gitId":"B1LLP4RK"},"content":"        for (Index index : indicesToEdit) {","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"B1LLP4RK"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"B1LLP4RK"},"content":"                isAllIndicesValid \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"B1LLP4RK"},"content":"                continue;","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-08"},{"lineNumber":230,"author":{"gitId":"B1LLP4RK"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"B1LLP4RK"},"content":"            Person editedPerson \u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":232,"author":{"gitId":"B1LLP4RK"},"content":"                EditCommand.createEditedPerson(personToEdit, onlyTeamAndSkillsetDescriptor, isResetMode);","lastModifiedDate":"2022-04-06"},{"lineNumber":233,"author":{"gitId":"B1LLP4RK"},"content":"            editedNames.add(personToEdit.getName());","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"B1LLP4RK"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"B1LLP4RK"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":238,"author":{"gitId":"B1LLP4RK"},"content":"        // Throwing error after editing for valid indices allows the successful edit for least the valid indices.","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"B1LLP4RK"},"content":"        if (!isAllIndicesValid) {","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"B1LLP4RK"},"content":"            return new CommandResult(","lastModifiedDate":"2022-04-06"},{"lineNumber":241,"author":{"gitId":"B1LLP4RK"},"content":"                String.format(","lastModifiedDate":"2022-04-06"},{"lineNumber":242,"author":{"gitId":"B1LLP4RK"},"content":"                    Messages.MESSAGE_INVALID_INDEX_FOR_SOME_PERSON","lastModifiedDate":"2022-04-06"},{"lineNumber":243,"author":{"gitId":"B1LLP4RK"},"content":"                        + \"\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":244,"author":{"gitId":"B1LLP4RK"},"content":"                        + MESSAGE_EDIT_MULTIPLE_PERSON_SUCCESS,","lastModifiedDate":"2022-04-06"},{"lineNumber":245,"author":{"gitId":"B1LLP4RK"},"content":"                    editedNames));","lastModifiedDate":"2022-04-06"},{"lineNumber":246,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"B1LLP4RK"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MULTIPLE_PERSON_SUCCESS, editedNames));","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"Jiaaa-yang"},"content":"        private GithubUsername username;","lastModifiedDate":"2022-03-01"},{"lineNumber":259,"author":{"gitId":"B1LLP4RK"},"content":"        private Set\u003cTeam\u003e teams;","lastModifiedDate":"2022-03-15"},{"lineNumber":260,"author":{"gitId":"tzhan98"},"content":"        private SkillSet skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"B1LLP4RK"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":267,"author":{"gitId":"B1LLP4RK"},"content":"         * A defensive copy of {@code teams} is used internally.","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":273,"author":{"gitId":"Jiaaa-yang"},"content":"            setGithubUsername(toCopy.username);","lastModifiedDate":"2022-03-01"},{"lineNumber":274,"author":{"gitId":"B1LLP4RK"},"content":"            setTeams(toCopy.teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"tzhan98"},"content":"            setSkillSet(toCopy.skillSet);","lastModifiedDate":"2022-02-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":282,"author":{"gitId":"B1LLP4RK"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, username, teams, skillSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"B1LLP4RK"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-30"},{"lineNumber":290,"author":{"gitId":"B1LLP4RK"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-30"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":297,"author":{"gitId":"B1LLP4RK"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-30"},{"lineNumber":298,"author":{"gitId":"B1LLP4RK"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":305,"author":{"gitId":"B1LLP4RK"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-03-30"},{"lineNumber":306,"author":{"gitId":"B1LLP4RK"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-03-30"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":309,"author":{"gitId":"Jiaaa-yang"},"content":"        public Optional\u003cGithubUsername\u003e getGithubUsername() {","lastModifiedDate":"2022-03-01"},{"lineNumber":310,"author":{"gitId":"Jiaaa-yang"},"content":"            return Optional.ofNullable(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":313,"author":{"gitId":"B1LLP4RK"},"content":"        public void setGithubUsername(GithubUsername username) {","lastModifiedDate":"2022-03-30"},{"lineNumber":314,"author":{"gitId":"B1LLP4RK"},"content":"            this.username \u003d username;","lastModifiedDate":"2022-03-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":318,"author":{"gitId":"B1LLP4RK"},"content":"         * Returns an unmodifiable team set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":320,"author":{"gitId":"B1LLP4RK"},"content":"         * Returns {@code Optional#empty()} if {@code teams} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":322,"author":{"gitId":"B1LLP4RK"},"content":"        public Optional\u003cSet\u003cTeam\u003e\u003e getTeams() {","lastModifiedDate":"2022-03-15"},{"lineNumber":323,"author":{"gitId":"B1LLP4RK"},"content":"            return (teams !\u003d null) ? Optional.of(Collections.unmodifiableSet(teams)) : Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-03-30"},{"lineNumber":327,"author":{"gitId":"B1LLP4RK"},"content":"         * Sets {@code teams} to this object\u0027s {@code teams}.","lastModifiedDate":"2022-03-30"},{"lineNumber":328,"author":{"gitId":"B1LLP4RK"},"content":"         * A defensive copy of {@code teams} is used internally.","lastModifiedDate":"2022-03-30"},{"lineNumber":329,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-03-30"},{"lineNumber":330,"author":{"gitId":"B1LLP4RK"},"content":"        public void setTeams(Set\u003cTeam\u003e teams) {","lastModifiedDate":"2022-03-30"},{"lineNumber":331,"author":{"gitId":"B1LLP4RK"},"content":"            this.teams \u003d (teams !\u003d null) ? new HashSet\u003c\u003e(teams) : null;","lastModifiedDate":"2022-03-30"},{"lineNumber":332,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":333,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":334,"author":{"gitId":"tzhan98"},"content":"        public Optional\u003cSkillSet\u003e getSkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":335,"author":{"gitId":"tzhan98"},"content":"            return (this.skillSet !\u003d null \u0026\u0026 skillSet.getSkillSet() !\u003d null)","lastModifiedDate":"2022-03-22"},{"lineNumber":336,"author":{"gitId":"tzhan98"},"content":"                ? Optional.of(new SkillSet(Collections.unmodifiableSet(skillSet.getSkillSet()))) : Optional.empty();","lastModifiedDate":"2022-03-22"},{"lineNumber":337,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":338,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":339,"author":{"gitId":"B1LLP4RK"},"content":"        public void setSkillSet(SkillSet skillSet) {","lastModifiedDate":"2022-03-30"},{"lineNumber":340,"author":{"gitId":"B1LLP4RK"},"content":"            this.skillSet \u003d (skillSet !\u003d null) ? new SkillSet(new HashSet\u003c\u003e(skillSet.getSkillSet())) : null;","lastModifiedDate":"2022-03-30"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":361,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 getGithubUsername().equals(e.getGithubUsername())","lastModifiedDate":"2022-03-01"},{"lineNumber":362,"author":{"gitId":"B1LLP4RK"},"content":"                \u0026\u0026 getTeams().equals(e.getTeams())","lastModifiedDate":"2022-03-15"},{"lineNumber":363,"author":{"gitId":"tzhan98"},"content":"                \u0026\u0026 getSkillSet().equals(e.getSkillSet());","lastModifiedDate":"2022-02-28"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":365,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tzhan98":20,"B1LLP4RK":159,"-":176,"Jiaaa-yang":12}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d \"Exit Hack Net.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tzhan98":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/FilterPastTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEAMMATES;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"public class FilterPastTeamCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"    public static final String COMMAND_WORD \u003d \"filterteam\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all past teammates\";","lastModifiedDate":"2022-04-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all past teammates\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_ALL_TEAMMATES);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tzhan98":1,"MelvinCZJ":20}},{"path":"src/main/java/seedu/address/logic/commands/FilterSkillCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"public class FilterSkillCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all persons whose skills contain the \"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"            + \"provided skill name (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"            + \"Parameters: SKILL\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"            + \"Example: \" + COMMAND_WORD + \" Java\";","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    private final PersonContainsSkillPredicate predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    public FilterSkillCommand(PersonContainsSkillPredicate predicate) {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getDisplayPersonList().size()));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"                || (other instanceof FilterSkillCommand // instanceof handles nulls","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"                \u0026\u0026 predicate.equals(((FilterSkillCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"alexteo98":40,"Jiaaa-yang":2}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getDisplayPersonList().size()));","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":40,"Jiaaa-yang":2}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public static final Set\u003cString\u003e AVAILABLE_HELP_TOPICS \u003d Set.of(\"add\", \"delete\", \"find\", \"filter\", \"list\", \"skill\",","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"            \"team\", \"unteam\", \"sort\", \"\", \"batchedit\", \"clear\", \"exit\", \"edit\", \"redo\", \"undo\", \"filterteam\");","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions. Usage: \u003cHelp\u003e \"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"            + \"to get link to user guide or \u003cHelp\u003e \u003cTopic\u003e to get help for particular topic \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"            + \"Example: \" + COMMAND_WORD + \"\\nExample: \" + COMMAND_WORD + \" list\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_ADD \u003d AddCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_DELETE \u003d DeleteCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_FIND \u003d FindCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_FILTER \u003d FilterSkillCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_LIST \u003d ListCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_SORT \u003d SortCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_TEAM \u003d MakeTeamCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_UNTEAM \u003d MakeTeamCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_CLEAR \u003d ClearCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_EXIT \u003d ExitCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_EDIT \u003d EditCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_REDO \u003d RedoCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_UNDO \u003d UndoCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_SHOW \u003d ShowCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_FILTERTEAM \u003d FilterPastTeamCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"    public static final String HELP_MESSAGE_SKILL \u003d Skill.MESSAGE_USAGE;","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"    public final String topic;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    public HelpCommand(String topic) {","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"        this.topic \u003d topic;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        switch (topic) {","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"        case \"add\":","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_ADD, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        case \"delete\":","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_DELETE, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        case \"find\":","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_FIND, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        case \"filter\":","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_FILTER, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        case \"list\":","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_LIST, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        case \"skill\":","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_SKILL, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        case \"team\":","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_TEAM, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"        case \"unteam\":","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_UNTEAM, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        case \"sort\":","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_SORT, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        case \"clear\":","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_CLEAR, false, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"        case \"exit\":","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_EXIT, false, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"        case \"edit\":","lastModifiedDate":"2022-04-03"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_EDIT, false, false);","lastModifiedDate":"2022-04-03"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        case \"undo\":","lastModifiedDate":"2022-04-03"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_UNDO, false, false);","lastModifiedDate":"2022-04-03"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"        case \"redo\":","lastModifiedDate":"2022-04-03"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_REDO, false, false);","lastModifiedDate":"2022-04-03"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"        case \"show\":","lastModifiedDate":"2022-04-03"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_SHOW, false, false);","lastModifiedDate":"2022-04-03"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"        case \"filterteam\":","lastModifiedDate":"2022-04-03"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"            return new CommandResult(HELP_MESSAGE_FILTERTEAM, false, false);","lastModifiedDate":"2022-04-03"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        default:","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"        if (!(other instanceof HelpCommand)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"        HelpCommand toCompare \u003d (HelpCommand) other;","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"        return toCompare.topic.equals(toCompare.topic);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tzhan98":79,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d \"use list to show all contacts. Usage: \u003clist\u003e\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tzhan98":1,"-":23,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/logic/commands/MakeTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":" * Adds/removes a person as a potential team member using its index in HackNet.","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"public class MakeTeamCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     * Actions supported by a {@code MakeTeamCommand}","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    public enum TeamAction {","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        ADD,","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        REMOVE,","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String COMMAND_WORD_ADD \u003d \"team\";","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String COMMAND_WORD_REMOVE \u003d \"unteam\";","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_ADD + \"/\" + COMMAND_WORD_REMOVE","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"            + \": Adds/removes the person as a potential teammate by the index number in the displayed person list.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"Example: \" + COMMAND_WORD_ADD + \" 1\";","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_ADD_TEAMMATE_SUCCESS \u003d \"Added person as potential teammate: %1$s\";","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_REMOVE_TEAMMATE_SUCCESS \u003d \"Remove person from potential teammate: %1$s\";","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_INVALID_TEAM_ACTION \u003d \"Invalid team action for command\";","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_REDUNDANT_ADDING \u003d \"Person is already a potential teammate!\";","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_REDUNDANT_REMOVAL \u003d \"Person is not part of your potential team!\";","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MakeTeamCommand.class);","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    private final TeamAction action;","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs a MakeTeamCommand.","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param targetIndex Index of person to execute command on.","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param action Action to perform when executing the command.","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"    public MakeTeamCommand(Index targetIndex, TeamAction action) {","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDisplayPersonList();","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        Person personToUpdate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        Person updatedPerson;","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        String successMessage;","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        switch (action) {","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        case ADD:","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"            if (personToUpdate.isPotentialTeammate()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"                // Attempting to add someone who is already a potential teammate","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"                throw new CommandException(MESSAGE_REDUNDANT_ADDING);","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"            updatedPerson \u003d createNewTeamPerson(personToUpdate, true);","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"            successMessage \u003d MESSAGE_ADD_TEAMMATE_SUCCESS;","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"        case REMOVE:","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"            if (!personToUpdate.isPotentialTeammate()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"                // Attempting to remove a non-potential teammate from team","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"                throw new CommandException(MESSAGE_REDUNDANT_REMOVAL);","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"            updatedPerson \u003d createNewTeamPerson(personToUpdate, false);","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"            successMessage \u003d MESSAGE_REMOVE_TEAMMATE_SUCCESS;","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"            break;","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        default:","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"            logger.warning(\"Invalid enum value: \" + action.toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new CommandException(MESSAGE_INVALID_TEAM_ACTION);","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"        return new CommandResult(String.format(successMessage, personToUpdate));","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns a new {@code Person} with the same fields, with its potential teammate field","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"     * set to the value of {@code isPotentialTeammate}.","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param person Person to edit.","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param isPotentialTeammate Boolean value to set for isPotentialTeammate field of Person.","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"    private static Person createNewTeamPerson(Person person, boolean isPotentialTeammate) {","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"        assert person !\u003d null : \"Person to update should not be null\";","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"        return new Person(person.getName(), person.getPhone(), person.getEmail(), person.getGithubUsername(),","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"                person.getTeams(), person.getSkillSet(), isPotentialTeammate);","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"                || (other instanceof MakeTeamCommand // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 targetIndex.equals(((MakeTeamCommand) other).targetIndex) // same index","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 action.equals(((MakeTeamCommand) other).action)); // same action","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"alexteo98":1,"B1LLP4RK":1,"Jiaaa-yang":115}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":" * Redo the last undone command and restores that version of AddressBook.","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"            + \": Redo the last command that changed HackNet.\\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    public static final String MESSAGE_REDO_SUCCESS \u003d \"Last Command restored!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    public static final String MESSAGE_REDO_FAILED \u003d \"No more commands left to redo!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(RedoCommand.class);","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    public RedoCommand() {}","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"            logger.info(\"Redo command attempted and failed.\");","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"            throw new CommandException(MESSAGE_REDO_FAILED);","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        model.redoAddressBook();","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        logger.info(\"HackNet successfully redid last command.\");","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        return new CommandResult(MESSAGE_REDO_SUCCESS);","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"                || (other instanceof RedoCommand); // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"alexteo98":48}},{"path":"src/main/java/seedu/address/logic/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_POTENTIAL_TEAMMATES;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" * Shows the list of all potential teammates in the HackNet.","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List all potential teammates.\";","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed your potential teammate(s)!\";","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(PREDICATE_SHOW_POTENTIAL_TEAMMATES);","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"tzhan98":1,"Jiaaa-yang":23}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" * Finds and lists all persons in address book with skills matching the given","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":" * keyword arguments, and sorts them by a descending level of proficiency.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows a sorted list of all persons who possesses \"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"the specified skill passed as keywords (case-insensitive) \"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"Parameters: SKILL\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"            + \"Example: \" + COMMAND_WORD + \" Java\";","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_INVALID_SKILL \u003d \"Invalid skill name: %s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    private final PersonContainsSkillPredicate predicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    private final PersonBySkillProficiencyComparator comparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs a {@code SortCommand}.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param predicate Predicate to filter person list by given skill.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param comparator Comparator to compare proficiency level of persons of given skill.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    public SortCommand(PersonContainsSkillPredicate predicate, PersonBySkillProficiencyComparator comparator) {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(predicate, comparator.reversed()); // Sort by descending skill proficiency","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getDisplayPersonList().size()));","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 predicate.equals(((SortCommand) other).predicate)","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 comparator.equals(((SortCommand) other).comparator)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Jiaaa-yang":57}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":" * Undo the last command entered and restores that version of AddressBook.","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"            + \": Undoes the last command and revert to previous version of HackNet.\\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Last Command undone\";","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    public static final String MESSAGE_UNDO_FAILED \u003d \"Already at last command, no commands left to undo!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UndoCommand.class);","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    public UndoCommand() {}","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"            logger.info(\"Undo command attempted and failed.\");","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"            throw new CommandException(MESSAGE_UNDO_FAILED);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        logger.info(\"HackNet successfully undone last command.\");","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        return new CommandResult(MESSAGE_UNDO_SUCCESS);","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"                || (other instanceof UndoCommand); // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"alexteo98":49}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String separator \u003d \"\\\\s?,\\\\s?\";","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GITHUB_USERNAME,","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"                PREFIX_TEAM, PREFIX_SKILL);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GITHUB_USERNAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername username \u003d ParserUtil.parseGithubUsername(argMultimap.getValue(PREFIX_GITHUB_USERNAME).get());","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e teamList \u003d ParserUtil.parseTeamsWithRegex(argMultimap.getValue(PREFIX_TEAM), separator);","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"        SkillSet skillSet \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"            new SkillSet(ParserUtil.parseSkillsWithRegex(argMultimap.getValue(PREFIX_SKILL), separator));","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d new Person(name, phone, email, username, teamList, skillSet, false);","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tzhan98":2,"B1LLP4RK":16,"-":43,"Jiaaa-yang":6}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"import seedu.address.logic.commands.FilterPastTeamCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.FilterSkillCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.MakeTeamCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"        case FilterSkillCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"            return new FilterSkillCommandParser().parse(arguments);","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"        case FilterPastTeamCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"            return new FilterPastTeamCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"        case MakeTeamCommand.COMMAND_WORD_ADD:","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"            return new MakeTeamCommandParser(MakeTeamCommand.TeamAction.ADD).parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"        case MakeTeamCommand.COMMAND_WORD_REMOVE:","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"            return new MakeTeamCommandParser(MakeTeamCommand.TeamAction.REMOVE).parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"            return new ShowCommand();","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"            return new RedoCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"alexteo98":12,"tzhan98":1,"-":75,"MelvinCZJ":4,"Jiaaa-yang":15}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"     **/","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"     * Returns the values, when multiple arguments are passed in within one prefix.","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"     * @param prefix of the value to obtain values of","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"     * @param regex  that separates the values within the prefix","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"     * @return the array of values","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"    public List\u003cString\u003e getValuesWithRegex(Prefix prefix, String regex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"        String unseparatedArgs \u003d getValue(prefix).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"        String[] separatedArgs \u003d unseparatedArgs.split(regex, 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cString\u003e trimmedArgs \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"        for (String arg : separatedArgs) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"            trimmedArgs.add(trimmedArg);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"        return trimmedArgs;","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"B1LLP4RK":22,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final Prefix PREFIX_GITHUB_USERNAME \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"    public static final Prefix PREFIX_TEAM \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    public static final Prefix PREFIX_SKILL \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"    public static final Prefix PREFIX_COMMAND_OPTION \u003d new Prefix(\"-\");","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tzhan98":1,"B1LLP4RK":2,"-":13,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND_OPTION;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String separator \u003d \"\\\\s?,\\\\s?\";","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"        String indexDelimeter \u003d \"\\\\s+\";","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_COMMAND_OPTION, PREFIX_NAME,","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"            PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GITHUB_USERNAME, PREFIX_TEAM, PREFIX_SKILL);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"        LinkedList\u003cIndex\u003e indices;","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isBatchEdit \u003d isMultipleArgs(argMultimap.getPreamble(), indexDelimeter);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"        if (isBatchEdit) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"                indices \u003d ParserUtil.parseIndices(argMultimap.getPreamble(), indexDelimeter);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"        // check mode","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isResetMode \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"        if (argMultimap.getValue(PREFIX_COMMAND_OPTION).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"            int optionDeclarationNumber \u003d argMultimap.getAllValues(PREFIX_COMMAND_OPTION).size();","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"            // if there are multiple \u0027-\u0027 present","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"            if (optionDeclarationNumber !\u003d 1) {","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"                throw new ParseException(","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"B1LLP4RK"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_OPTIONS));","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"B1LLP4RK"},"content":"            String option \u003d argMultimap.getValue(PREFIX_COMMAND_OPTION).get();","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"            // if there is any other option declared other than the one and only currently supported option, \u0027r\u0027","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"B1LLP4RK"},"content":"            if (!option.equals(EditCommand.RESET_ARG)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"                throw new ParseException(","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_OPTIONS));","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"B1LLP4RK"},"content":"            isResetMode \u003d option.equals(EditCommand.RESET_ARG);","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB_USERNAME).isPresent()) {","lastModifiedDate":"2022-03-01"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"            editPersonDescriptor.setGithubUsername(","lastModifiedDate":"2022-03-01"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"                ParserUtil.parseGithubUsername(argMultimap.getValue(PREFIX_GITHUB_USERNAME).get()));","lastModifiedDate":"2022-03-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"B1LLP4RK"},"content":"        if (argMultimap.getValue(PREFIX_SKILL).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"B1LLP4RK"},"content":"            SkillSet skillSet \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"B1LLP4RK"},"content":"                new SkillSet(ParserUtil.parseSkillsWithRegex(argMultimap.getValue(PREFIX_SKILL), separator));","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"B1LLP4RK"},"content":"            editPersonDescriptor.setSkillSet(skillSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"B1LLP4RK"},"content":"        if (argMultimap.getValue(PREFIX_TEAM).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"B1LLP4RK"},"content":"            Set\u003cTeam\u003e teamList \u003d ParserUtil.parseTeamsWithRegex(argMultimap.getValue(PREFIX_TEAM), separator);","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"B1LLP4RK"},"content":"            editPersonDescriptor.setTeams(teamList);","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"B1LLP4RK"},"content":"        if (isBatchEdit) {","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"B1LLP4RK"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"B1LLP4RK"},"content":"                indices \u003d ParserUtil.parseIndices(argMultimap.getPreamble(), indexDelimeter);","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"B1LLP4RK"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"B1LLP4RK"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"B1LLP4RK"},"content":"            editCommand \u003d new EditCommand(indices, editPersonDescriptor, isResetMode);","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"B1LLP4RK"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"B1LLP4RK"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"B1LLP4RK"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"B1LLP4RK"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"B1LLP4RK"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"B1LLP4RK"},"content":"            editCommand \u003d new EditCommand(index, editPersonDescriptor, isResetMode);","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"B1LLP4RK"},"content":"        return editCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":130,"author":{"gitId":"B1LLP4RK"},"content":"    private boolean isMultipleArgs(String argsWithDelimiter, String regex) {","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"B1LLP4RK"},"content":"        String[] args \u003d argsWithDelimiter.split(regex, 0);","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"B1LLP4RK"},"content":"        return args.length \u003e 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tzhan98":2,"B1LLP4RK":72,"-":57,"Jiaaa-yang":4}},{"path":"src/main/java/seedu/address/logic/parser/FilterSkillCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.FilterSkillCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":" * Parses input arguments and creates a new FilterSkillCommand object","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"public class FilterSkillCommandParser implements Parser\u003cFilterSkillCommand\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterSkillCommand","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"     * and returns a FilterSkillCommand object for execution.","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    public FilterSkillCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterSkillCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet(Arrays.stream(keywords)","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"                .map(Skill::new)","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"                .collect(Collectors.toSet()));","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        return new FilterSkillCommand(new PersonContainsSkillPredicate(skillSet));","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"alexteo98":40,"B1LLP4RK":1}},{"path":"src/main/java/seedu/address/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.HelpCommand.AVAILABLE_HELP_TOPICS;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"     * and returns a HelpCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public HelpCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        String sanitisedUserInput \u003d userInput.toLowerCase().trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        requireAllNonNull(userInput);","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        if (!AVAILABLE_HELP_TOPICS.contains(sanitisedUserInput)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        return new HelpCommand(sanitisedUserInput);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tzhan98":26}},{"path":"src/main/java/seedu/address/logic/parser/MakeTeamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.MakeTeamCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":" * Parses input arguments and creates a new MakeTeamCommand object","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"public class MakeTeamCommandParser implements Parser\u003cMakeTeamCommand\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    private final MakeTeamCommand.TeamAction action;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs a MakeTeamCommandParser.","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param action Action the {@code MakeTeamCommand} will carry out.","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    public MakeTeamCommandParser(MakeTeamCommand.TeamAction action) {","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parses the given {@code String} of arguments in the context of the MakeTeamCommand","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * and returns a MakeTeamCommand object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    public MakeTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            return new MakeTeamCommand(index, action);","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MakeTeamCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Jiaaa-yang":40}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses multiple {@code oneBasedIndex} in string format and returns a list of {@code Index}","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"     * @param oneBasedIndices the string representation of indices separated with the given regex","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"     * @param regex           regular expression to separate the indices in String","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"     * @return the list of indices","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"     * @throws ParseException if one of the arguments cannot be interpreted as an {@code Index}","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"    public static LinkedList\u003cIndex\u003e parseIndices(String oneBasedIndices, String regex) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"        String[] numbers \u003d oneBasedIndices.split(regex);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"        LinkedList\u003cIndex\u003e indices \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"        for (String number : numbers) {","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"            number \u003d number.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"            Index indexToAdd \u003d parseIndex(number);","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"            // ignore duplicate indexes","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"            if (indices.contains(indexToAdd)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"                continue;","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"            indices.add(indexToAdd);","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"        return indices;","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parses a {@code String username} into an {@code GithubUsername}.","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws ParseException if the given {@code username} is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"    public static GithubUsername parseGithubUsername(String username) throws ParseException {","lastModifiedDate":"2022-03-01"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        String trimmedUsername \u003d username.trim();","lastModifiedDate":"2022-03-01"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!GithubUsername.isValidUsername(trimmedUsername)) {","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new ParseException(GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"        return new GithubUsername(trimmedUsername);","lastModifiedDate":"2022-03-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses a {@code String team} into a {@code Team}.","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"B1LLP4RK"},"content":"     * @throws ParseException if the given {@code team} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"B1LLP4RK"},"content":"    public static Team parseTeam(String team) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(team);","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"B1LLP4RK"},"content":"        String trimmed \u003d team.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"B1LLP4RK"},"content":"        if (!Team.isValidTeamName(trimmed)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"B1LLP4RK"},"content":"            throw new ParseException(Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"B1LLP4RK"},"content":"        return new Team(trimmed);","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":141,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses a {@code String skill} into a {@code skill}.\u0027","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"B1LLP4RK"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"tzhan98"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-28"},{"lineNumber":144,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":145,"author":{"gitId":"tzhan98"},"content":"     * @throws ParseException if the given {@code skill} is invalid.","lastModifiedDate":"2022-02-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":147,"author":{"gitId":"tzhan98"},"content":"    public static Skill parseSkill(String skill) throws ParseException {","lastModifiedDate":"2022-02-28"},{"lineNumber":148,"author":{"gitId":"tzhan98"},"content":"        requireNonNull(skill);","lastModifiedDate":"2022-02-28"},{"lineNumber":149,"author":{"gitId":"tzhan98"},"content":"        String[] trimmedSkill \u003d skill.trim().split(\"_\");","lastModifiedDate":"2022-02-28"},{"lineNumber":150,"author":{"gitId":"tzhan98"},"content":"        if (trimmedSkill.length !\u003d 2) {","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"tzhan98"},"content":"            throw new ParseException(Skill.SKILL_INPUT_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"tzhan98"},"content":"        String skillName \u003d trimmedSkill[0];","lastModifiedDate":"2022-02-28"},{"lineNumber":154,"author":{"gitId":"B1LLP4RK"},"content":"        String trimmedSkillName \u003d skillName.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"tzhan98"},"content":"        if (!Skill.isValidSkillProficiencyInteger(trimmedSkill[1])) {","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"tzhan98"},"content":"            throw new ParseException(Skill.PROFICIENCY_CONSTRAINTS_INTEGER);","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":159,"author":{"gitId":"alexteo98"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedSkill[1])) {","lastModifiedDate":"2022-04-09"},{"lineNumber":160,"author":{"gitId":"alexteo98"},"content":"            throw new ParseException(Skill.PROFICIENCY_CONSTRAINTS_INTEGER);","lastModifiedDate":"2022-04-09"},{"lineNumber":161,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":162,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":163,"author":{"gitId":"alexteo98"},"content":"        int skillProficiency \u003d Integer.parseInt(trimmedSkill[1]);","lastModifiedDate":"2022-04-09"},{"lineNumber":164,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":165,"author":{"gitId":"B1LLP4RK"},"content":"        if (!Skill.isValidSkillName(trimmedSkillName)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"tzhan98"},"content":"            throw new ParseException(Skill.NAME_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":167,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":168,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":169,"author":{"gitId":"alexteo98"},"content":"        if (!Skill.isValidSkillProficiencyRange(skillProficiency)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":170,"author":{"gitId":"alexteo98"},"content":"            throw new ParseException(Skill.PROFICIENCY_CONSTRAINTS_RANGE);","lastModifiedDate":"2022-04-09"},{"lineNumber":171,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":172,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":173,"author":{"gitId":"B1LLP4RK"},"content":"        return new Skill(trimmedSkillName, skillProficiency);","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":175,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses {@code Collection\u003cString\u003e teams} into a {@code Set\u003cTeam\u003e}.","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"B1LLP4RK"},"content":"    public static Set\u003cTeam\u003e parseTeams(Collection\u003cString\u003e teams) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"B1LLP4RK"},"content":"        final Set\u003cTeam\u003e teamSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"B1LLP4RK"},"content":"        for (String teamName : teams) {","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"B1LLP4RK"},"content":"            teamSet.add(parseTeam(teamName));","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"B1LLP4RK"},"content":"        return teamSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":187,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":188,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"B1LLP4RK"},"content":"     * Converts userInput of team arguments to {@code Set} of {@code Team}s.","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"B1LLP4RK"},"content":"     * @param optionalTeamNames The userInput provided. Is empty if the user did not provide any team argument.","lastModifiedDate":"2022-03-31"},{"lineNumber":193,"author":{"gitId":"B1LLP4RK"},"content":"     * @param separator         The Regex used to parse multiple teamNames.","lastModifiedDate":"2022-03-31"},{"lineNumber":194,"author":{"gitId":"B1LLP4RK"},"content":"     * @return Set of teams.","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"B1LLP4RK"},"content":"     * @throws ParseException If a teamName cannot be parsed.","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":197,"author":{"gitId":"B1LLP4RK"},"content":"    public static Set\u003cTeam\u003e parseTeamsWithRegex(Optional\u003cString\u003e optionalTeamNames, String separator)","lastModifiedDate":"2022-03-31"},{"lineNumber":198,"author":{"gitId":"B1LLP4RK"},"content":"        throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":199,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e teamSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":200,"author":{"gitId":"B1LLP4RK"},"content":"        if (!optionalTeamNames.isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"B1LLP4RK"},"content":"            return teamSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"B1LLP4RK"},"content":"        String teamNames \u003d optionalTeamNames.get();","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"B1LLP4RK"},"content":"        String[] separatedTeamNames \u003d teamNames.split(separator, 0);","lastModifiedDate":"2022-03-31"},{"lineNumber":205,"author":{"gitId":"B1LLP4RK"},"content":"        if (!(separatedTeamNames.length \u003d\u003d 1 \u0026\u0026 separatedTeamNames[0].equals(\"\"))) {","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"B1LLP4RK"},"content":"            for (String teamName : separatedTeamNames) {","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"B1LLP4RK"},"content":"                Team team \u003d ParserUtil.parseTeam(teamName);","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"B1LLP4RK"},"content":"                teamSet.add(team);","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":210,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":211,"author":{"gitId":"B1LLP4RK"},"content":"        return teamSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"B1LLP4RK"},"content":"     * Converts userInput of skills to {@code Set} of {@code Skill}s","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":217,"author":{"gitId":"B1LLP4RK"},"content":"     * @param optionalSkillNamesWithLvl UserInput of the skills.","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"B1LLP4RK"},"content":"     * @param separator Regex to split the userInput and identify each skill.","lastModifiedDate":"2022-03-31"},{"lineNumber":219,"author":{"gitId":"B1LLP4RK"},"content":"     * @return The {@code Set} of {@code Skill} identified from UserInput.","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"B1LLP4RK"},"content":"     * @throws ParseException If the skill with level specified cannot be parsed.","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":222,"author":{"gitId":"B1LLP4RK"},"content":"    public static Set\u003cSkill\u003e parseSkillsWithRegex(Optional\u003cString\u003e optionalSkillNamesWithLvl, String separator)","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"B1LLP4RK"},"content":"        throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cSkill\u003e skillSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"B1LLP4RK"},"content":"        if (!optionalSkillNamesWithLvl.isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":226,"author":{"gitId":"B1LLP4RK"},"content":"            return skillSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"B1LLP4RK"},"content":"        String skillNamesWithLvl \u003d optionalSkillNamesWithLvl.get();","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"B1LLP4RK"},"content":"        String[] separatedSkillNameWithLvl \u003d skillNamesWithLvl.split(separator, 0);","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"B1LLP4RK"},"content":"        if (!(separatedSkillNameWithLvl.length \u003d\u003d 1 \u0026\u0026 separatedSkillNameWithLvl[0].equals(\"\"))) {","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"B1LLP4RK"},"content":"            for (String skillNameWithLvl : separatedSkillNameWithLvl) {","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"B1LLP4RK"},"content":"                Skill skill \u003d ParserUtil.parseSkill(skillNameWithLvl);","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"B1LLP4RK"},"content":"                skillSet.add(skill);","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"B1LLP4RK"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"B1LLP4RK"},"content":"        return skillSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":237,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"alexteo98":12,"tzhan98":16,"B1LLP4RK":99,"-":103,"Jiaaa-yang":9}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!Skill.isValidSkillName(trimmedArgs)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new ParseException(String.format(SortCommand.MESSAGE_INVALID_SKILL, Skill.NAME_CONSTRAINTS));","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill skillToFilter \u003d new Skill(trimmedArgs);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(skillToFilter);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d new PersonContainsSkillPredicate(skillSet);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(skillToFilter);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        return new SortCommand(predicate, comparator);","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"alexteo98":4,"B1LLP4RK":1,"Jiaaa-yang":37}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    protected final UniquePersonList persons;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"     * Removes person from this {@code AddressBook}.","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"     * Checks for person with the same user name, email or phone number in the address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"     * Reruns true if successfully removed person","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"    public boolean safeRemovePerson(Person person) {","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"        assert persons.contains(person) : \"person should be inside address book\";","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        return persons.safeRemove(person);","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"tzhan98"},"content":"    public String getDuplicateField(Person person) {","lastModifiedDate":"2022-04-06"},{"lineNumber":131,"author":{"gitId":"tzhan98"},"content":"        return persons.getDuplicateField(person);","lastModifiedDate":"2022-04-06"},{"lineNumber":132,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alexteo98":1,"tzhan98":14,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    /** {@code Predicate} that evaluate to true only when","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     * teams field of person object is not-empty","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * */","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_TEAMMATES \u003d person -\u003e !person.getTeams().isEmpty();","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"     * {@code Predicate} that evalutes to true if and only if the","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * person is a potential teammate.","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_POTENTIAL_TEAMMATES \u003d Person::isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"     * Returns duplicate field that given {@code person} have as another {@code person} inside the address book.","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"    String getDuplicateField(Person person);","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"     * Deletes the given person by comparing person::equals","lastModifiedDate":"2022-04-06"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"     * Returns true if successfully removed person, else return false","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    boolean safeDeletePerson(Person target);","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Returns an unmodifiable view of the filtered and sorted person list */","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"    ObservableList\u003cPerson\u003e getDisplayPersonList();","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"     * Updates the filter of the display person list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"    void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"     * Updates the sort criteria of the display person list to sort by the given {@code comparator}.","lastModifiedDate":"2022-03-05"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2022-03-05"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"    void updateDisplayPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"     * Updates both the filter and the sort criteria of the","lastModifiedDate":"2022-03-05"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"     * display person list to sort by the given {@code predicate and @code comparator}.","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"     * @throws NullPointerException if {@code comparator or @code predicate} is null.","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"    void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate, Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"    /** Returns whether the AddressBook has commands that can be undone. */","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"    /** Un-do the last command that modified the AddressBook, provided that the AddressBook supports it. */","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"    void undoAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"    /** Returns whether the AddressBook has commands that can be redone. */","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"    /** Re-do the last command that modified the AddressBook, provided that the AddressBook supports it. */","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"    void redoAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"    /** Commits a version of the current AddressBook into its history, provided that the AddressBook supports it. */","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"alexteo98"},"content":"    void commitAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"alexteo98":15,"tzhan98":11,"-":83,"Jiaaa-yang":24,"MelvinCZJ":5}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    /** Internal list of filtered persons, wrapped by sortedPersons */","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    /** The sorted, filtered list to be shown in the GUI. */","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    private final SortedList\u003cPerson\u003e displayPersons;","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        this.addressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        // A sorted list wrapping over the internal filtered list","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        displayPersons \u003d new SortedList\u003c\u003e(filteredPersons);","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        this(new VersionedAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"    public boolean safeDeletePerson(Person target) {","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"        return addressBook.safeRemovePerson(target);","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"        updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"    public String getDuplicateField(Person person) {","lastModifiedDate":"2022-04-06"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"        return addressBook.getDuplicateField(person);","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"     * Returns whether the underlying {@code AddressBook} can be undone,","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"     * and if there are any commands that can be undone.","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"     * @return True if the {@code AddressBook} can be undone,","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"     * False if the underlying AddressBook does not support undoing,","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"     * or there  are no commands left to be undone.","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"alexteo98"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"alexteo98"},"content":"        if (this.addressBook instanceof VersionedAddressBook) {","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"alexteo98"},"content":"            VersionedAddressBook versionedAddressBook \u003d (VersionedAddressBook) this.addressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"alexteo98"},"content":"            return versionedAddressBook.canUndo();","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"alexteo98"},"content":"        return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"alexteo98"},"content":"     * Undo the last command that edited {@code AddressBook}. If the AddressBook does not support undoing commands,","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"alexteo98"},"content":"     * or there are no commands left to undo, this method does nothing.","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"alexteo98"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"alexteo98"},"content":"        if (this.addressBook instanceof VersionedAddressBook) {","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"alexteo98"},"content":"            VersionedAddressBook versionedAddressBook \u003d (VersionedAddressBook) this.addressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"alexteo98"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"alexteo98"},"content":"     * Returns whether the underlying {@code AddressBook} can be redone,","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"alexteo98"},"content":"     * and if there are any commands that can be redone.","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"alexteo98"},"content":"     * @return True if the {@code AddressBook} can be redone,","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"alexteo98"},"content":"     * False if the underlying AddressBook does not support redoing,","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"alexteo98"},"content":"     * or there  are no commands left to be redone.","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"alexteo98"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"alexteo98"},"content":"        if (this.addressBook instanceof VersionedAddressBook) {","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"alexteo98"},"content":"            VersionedAddressBook versionedAddressBook \u003d (VersionedAddressBook) this.addressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"alexteo98"},"content":"            return versionedAddressBook.canRedo();","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"alexteo98"},"content":"        return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"alexteo98"},"content":"     * Redo the last command that edited {@code AddressBook}. If the AddressBook does not support redoing commands,","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"alexteo98"},"content":"     * or there are no commands left to redo, this method does nothing.","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"alexteo98"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"alexteo98"},"content":"        if (this.addressBook instanceof VersionedAddressBook) {","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"alexteo98"},"content":"            VersionedAddressBook versionedAddressBook \u003d (VersionedAddressBook) this.addressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"alexteo98"},"content":"            versionedAddressBook.redo();","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"alexteo98"},"content":"     * Saves the current state of the AddressBook in its history, if it supports it.","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"alexteo98"},"content":"     * If the underlying AddressBook does not support a history, this method does nothing.","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"alexteo98"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"alexteo98"},"content":"        if (this.addressBook instanceof VersionedAddressBook) {","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"alexteo98"},"content":"            VersionedAddressBook versionedAddressBook \u003d (VersionedAddressBook) this.addressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"alexteo98"},"content":"            versionedAddressBook.commit();","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"Jiaaa-yang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered \u0026 Sorted Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":203,"author":{"gitId":"Jiaaa-yang"},"content":"    public ObservableList\u003cPerson\u003e getDisplayPersonList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":204,"author":{"gitId":"Jiaaa-yang"},"content":"        return displayPersons;","lastModifiedDate":"2022-03-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":208,"author":{"gitId":"Jiaaa-yang"},"content":"    public void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":211,"author":{"gitId":"Jiaaa-yang"},"content":"        // Remove sort criteria on new filter","lastModifiedDate":"2022-03-05"},{"lineNumber":212,"author":{"gitId":"Jiaaa-yang"},"content":"        displayPersons.setComparator(null);","lastModifiedDate":"2022-03-05"},{"lineNumber":213,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":214,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":215,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":216,"author":{"gitId":"Jiaaa-yang"},"content":"    public void updateDisplayPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-05"},{"lineNumber":217,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":218,"author":{"gitId":"Jiaaa-yang"},"content":"        displayPersons.setComparator(comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":222,"author":{"gitId":"Jiaaa-yang"},"content":"    public void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate, Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":224,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":226,"author":{"gitId":"Jiaaa-yang"},"content":"        displayPersons.setComparator(comparator);","lastModifiedDate":"2022-03-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"alexteo98":69,"tzhan98":8,"-":149,"Jiaaa-yang":22}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"    private LinkedList\u003cUniquePersonList\u003e addressBookStateList \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"    private int currentState \u003d -1;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    public VersionedAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"        super();","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    /** Initializes an instance of VersionedAddressBook with the given AddressBook. */","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"        this();","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"        commit();","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"        this.currentState \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    /** Saves the current state of the AddressBook into its history. */","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    public void commit() {","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        while (addressBookStateList.size() \u003e currentState + 1) {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"            // Clears all history in front of this commit","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"            addressBookStateList.removeLast();","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        UniquePersonList history \u003d new UniquePersonList();","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        history.setPersons(this.persons);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        this.addressBookStateList.add(history);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        currentState++;","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"     * Undoes the last command that changed the AddressBook.","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"     * Does nothing if there are no commands in history to undo.","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"    public void undo() {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        if (canUndo()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"            currentState--;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"            assert (currentState \u003e\u003d 0 \u0026\u0026 currentState \u003c this.addressBookStateList.size());","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"            this.persons.setPersons(this.addressBookStateList.get(currentState));","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"     * Redo the last command that was undone.","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"     * Does nothing if there are no commands in history to redo.","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"    public void redo() {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        if (canRedo()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"            currentState++;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"            assert (currentState \u003e\u003d 0 \u0026\u0026 currentState \u003c this.addressBookStateList.size());","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"            this.persons.setPersons(this.addressBookStateList.get(currentState));","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"     * Returns whether there are any commands in history that can be undone.","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"     * @return True if there are commands that can be undone, False otherwise.","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"    public boolean canUndo() {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"        return this.currentState \u003e\u003d 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"     * Returns whether there are any commands in history that can be redone.","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"     * @return True if there are commands that can be redone, False otherwise.","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"    public boolean canRedo() {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        return this.addressBookStateList.size() - 1 \u003e currentState;","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"                || (other instanceof VersionedAddressBook // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"                \u0026\u0026 persons.equals(((VersionedAddressBook) other).persons) // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"                \u0026\u0026 addressBookStateList.equals(((VersionedAddressBook) other).addressBookStateList)","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"                \u0026\u0026 currentState \u003d\u003d ((VersionedAddressBook) other).currentState);","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"        return persons.hashCode();","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"alexteo98":90}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    private static final int MAX_LENGTH_OF_EMAIL \u003d 150;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    private static final int MIN_LENGTH_OF_EMAIL \u003d 4;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\\n\"","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"            + \"3. The total length of email should have between \" + MIN_LENGTH_OF_EMAIL + \" to \" + MAX_LENGTH_OF_EMAIL","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"            + \" characters. (inclusive)\\n\";","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isValidLength(test);","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"     * Returns if given string has a valid email length.","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    public static boolean isValidLength(String test) {","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"        int len \u003d test.length();","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        return len \u003e\u003d MIN_LENGTH_OF_EMAIL \u0026\u0026 len \u003c\u003d MAX_LENGTH_OF_EMAIL;","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tzhan98":14,"-":69}},{"path":"src/main/java/seedu/address/model/person/GithubUsername.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":" * Represents a Person\u0027s GitHub username in HackNet.","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUsername(String)}","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"public class GithubUsername {","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"GitHub usernames can only contain alphanumeric\"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"            + \" and hyphen characters, and must not be blank.\\nUsername must be lesser than 40 characters and also not \"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"            + \"have consecutive hyphens or start/end with a hyphen.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    public static final int GITHUB_USERNAME_LENGTH \u003d 39;","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}-]+\";","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String GITHUB_HANDLE_FORMAT \u003d \"@%s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String GITHUB_LINK_FORMAT \u003d \"https://github.com/%s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public final String value;","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs an {@code GitHubUsername}.","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param username A valid username.","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    public GithubUsername(String username) {","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        checkArgument(isValidUsername(username), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        value \u003d username;","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns true if a given string is a valid GitHub username.","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"    public static boolean isValidUsername(String test) {","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isValidUsernameLength(test) \u0026\u0026 isValidUsernameHyphens(test);","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"     * Returns true if given string is lesser than specified length","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"    public static boolean isValidUsernameLength(String test) {","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        return test.length() \u003c\u003d GITHUB_USERNAME_LENGTH;","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"     * Returns true if given string does not end/start with hyphens and do not contain consecutive hyphens","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"    public static boolean isValidUsernameHyphens(String test) {","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        boolean startWithHyphen \u003d test.charAt(0) \u003d\u003d \u0027-\u0027;","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        boolean endWithHyphen \u003d test.charAt(test.length() - 1) \u003d\u003d \u0027-\u0027;","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        return !containsConsecutiveHyphens(test) \u0026\u0026 !startWithHyphen \u0026\u0026 !endWithHyphen;","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"     * Returns true if given string contains consecutive hyphens","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    public static boolean containsConsecutiveHyphens(String test) {","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"        boolean containsConsecHyphen \u003d false;","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        for (int i \u003d 0; i \u003c test.length(); i++) {","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            if (i + 1 \u003c test.length()) { //if there is a next char","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"                if ((test.charAt(i) \u003d\u003d \u0027-\u0027) \u0026\u0026 test.charAt(i + 1) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"                    containsConsecHyphen \u003d true;","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"                    break;","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"                }","lastModifiedDate":"2022-03-01"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        return containsConsecHyphen;","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns the GitHub handle of this username.","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getGithubHandle() {","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(GITHUB_HANDLE_FORMAT, value);","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"     * Returns the link to the GitHub profile of this username.","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"    public String getGithubProfileLink() {","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"        return String.format(GITHUB_LINK_FORMAT, value);","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-01"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"    public String toString() {","lastModifiedDate":"2022-03-01"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"        return value;","lastModifiedDate":"2022-03-01"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-01"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-01"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"                || (other instanceof GithubUsername // instanceof handles nulls","lastModifiedDate":"2022-03-01"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 value.equals(((GithubUsername) other).value)); // state check","lastModifiedDate":"2022-03-01"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-01"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-01"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-01"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"tzhan98":38,"Jiaaa-yang":68}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    private final GithubUsername githubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    private final SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    private final boolean isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    private final Set\u003cTeam\u003e teams \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    public Person(Name name, Phone phone, Email email, GithubUsername username,","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"                  Set\u003cTeam\u003e teams, SkillSet skillSet, boolean isPotentialTeammate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"        requireAllNonNull(name, phone, email, username, teams, skillSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        this.githubUsername \u003d username;","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"        this.teams.addAll(teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        this.skillSet.addAll(skillSet);","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isPotentialTeammate \u003d isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    public GithubUsername getGithubUsername() {","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        return githubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean isPotentialTeammate() {","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"        return isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"B1LLP4RK"},"content":"     * Returns an immutable team set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"    public Set\u003cTeam\u003e getTeams() {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"        return Collections.unmodifiableSet(teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"                \u0026\u0026 (otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2022-04-06"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"                || otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"                || otherPerson.getGithubUsername().equals(getGithubUsername()));","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"     * Returns value that are duplicate for person","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"     * @param otherPerson other person to compare","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"     * @return values that are duplicated","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"    public String getDuplicateValue(Person otherPerson) {","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"        if (otherPerson.getPhone().equals(getPhone())) {","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"            return \"Phone\";","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"        } else if (otherPerson.getEmail().equals(getEmail())) {","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"            return \"Email\";","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"        } else if (otherPerson.getGithubUsername().equals(getGithubUsername())) {","lastModifiedDate":"2022-04-06"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"            return \"Github UserName\";","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"        } else {","lastModifiedDate":"2022-04-06"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"            return \"Error no same duplicate values\";","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"     * Returns an immutable skill set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"    public SkillSet getSkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"        return skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"     * Returns the skill proficiency of the person for the given skill,","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"     * or 0 if the person does not have the skill.","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"     * @param skill Skill of person to get proficiency of.","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"     * @return Skill proficiency of the person.","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"    public int getSkillProficiency(Skill skill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"        return skillSet.getSkillProficiency(skill);","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 otherPerson.getGithubUsername().equals(getGithubUsername())","lastModifiedDate":"2022-03-01"},{"lineNumber":144,"author":{"gitId":"B1LLP4RK"},"content":"                \u0026\u0026 otherPerson.getTeams().equals(getTeams())","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 otherPerson.getSkillSet().equals(getSkillSet())","lastModifiedDate":"2022-03-19"},{"lineNumber":146,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 otherPerson.isPotentialTeammate \u003d\u003d isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"Jiaaa-yang"},"content":"        return Objects.hash(name, phone, email, githubUsername, isPotentialTeammate, teams, skillSet);","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"Jiaaa-yang"},"content":"                .append(\"; GitHub Username: \")","lastModifiedDate":"2022-03-01"},{"lineNumber":164,"author":{"gitId":"Jiaaa-yang"},"content":"                .append(getGithubUsername());","lastModifiedDate":"2022-03-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e teams \u003d getTeams();","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"B1LLP4RK"},"content":"        if (!teams.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"B1LLP4RK"},"content":"            builder.append(\"; Teams: \");","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"B1LLP4RK"},"content":"            teams.forEach(builder::append);","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"tzhan98"},"content":"        String skillString \u003d this.skillSet.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":173,"author":{"gitId":"tzhan98"},"content":"        return builder.toString().concat(skillString);","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tzhan98":40,"B1LLP4RK":13,"-":104,"Jiaaa-yang":19}},{"path":"src/main/java/seedu/address/model/person/PersonBySkillProficiencyComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":" * Comparator to compare {@code Person}\u0027s by the proficiency level of a given {@code Skill}.","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"public class PersonBySkillProficiencyComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Skill skill;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"     * Constructs a {@code PersonBySkillProficiencyComparator}.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"     * @param skill Skill to compare person by.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public PersonBySkillProficiencyComparator(Skill skill) {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        this.skill \u003d skill;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    public int compare(Person person1, Person person2) {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"        return Integer.compare(person1.getSkillProficiency(skill), person2.getSkillProficiency(skill));","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"                || (other instanceof PersonBySkillProficiencyComparator // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"                \u0026\u0026 skill.isSameSkill(((PersonBySkillProficiencyComparator) other).skill)); // check if same skill name","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"B1LLP4RK":1,"Jiaaa-yang":33}},{"path":"src/main/java/seedu/address/model/person/PersonContainsSkillPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":" * Tests that a {@code Person}\u0027s {@code Skill} matches any of the keywords given.","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"public class PersonContainsSkillPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"    private final SkillSet skillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"     * @param skillSet","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"    public PersonContainsSkillPredicate(SkillSet skillSet) {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"        this.skillSet \u003d skillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"        return person.getSkillSet().hasSkills(this.skillSet);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"                || (other instanceof PersonContainsSkillPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"                \u0026\u0026 skillSet.hasSameSkillSet(((PersonContainsSkillPredicate) other).skillSet)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"alexteo98":33}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"    public String getDuplicateField(Person toCheck) {","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"        return (String) internalList.stream().filter(person -\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"            person.isSamePerson(toCheck)).findFirst().map(duplicate -\u003e {","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"                if (duplicate \u003d\u003d null) {","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"                    return duplicate;","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"                } else {","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"                    return duplicate.getDuplicateValue(toCheck);","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"            }).get();","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"            throw new DuplicatePersonException(getDuplicateField(toAdd));","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"            throw new DuplicatePersonException(getDuplicateField(editedPerson));","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"     * Removes the person with same username or email or phone number from the list.","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"     * The person may exist in the list.","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"     * Returns true if successfully removed person","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"    public boolean safeRemove(Person toRemove) {","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"        for (Person p : internalList) {","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"            if (p.isSamePerson(toRemove)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"                internalList.remove(p);","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"                return true;","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"        return false;","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tzhan98":29,"-":135}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"    public DuplicatePersonException(String duplicateField) {","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"        super(\"Error: Operation would result in persons with same \" + duplicateField + \".\");","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"        super(\"ERROR: This operation will result in duplicate persons.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"tzhan98":5,"-":10}},{"path":"src/main/java/seedu/address/model/team/Skill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" * Represents a Skill in the address book.","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidSkillName(String)}","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"public class Skill {","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    public static final int MAX_LENGTH_OF_SKILL_NAME \u003d 10;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String NAME_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        \"Skill names should be alphanumeric word(s) that can contain special characters #, +, and -. \\nMaximum length \"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"                + \"of a skill name is 10 characters.\";","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    //The regex below checks for skill name constraints described in NAME_CONSTRAINTS above.","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String NAME_VALIDATION_REGEX \u003d \"[\\\\w|\\\\d|\\\\s#+-]+\";","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"    public static final String PROFICIENCY_CONSTRAINTS_RANGE \u003d \"Skill proficiency should be within range of 1-100\";","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    public static final String PROFICIENCY_CONSTRAINTS_INTEGER \u003d \"Skill proficiency must be an integer\";","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    public static final String PROFICIENCY_VALIDATION_BETWEEN_0_TO_100 \u003d \"^[1-9]$|^[1-9][0-9]$|^(100)$\";","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    public static final String PROFICIENCY_VALIDATION_ONLY_INTEGERS \u003d \"^[0-9]+$\";","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    public static final String SKILL_INPUT_CONSTRAINTS \u003d \"Skill input should be: Skill Name_Skill proficiency. eg: \"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        + \"Java_50\";","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_USAGE \u003d \"Skill stores a Skill Name and Skill proficiency.\"","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"            + \"Skill proficiency is indicated by different hues of green with brighter \"","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"            + \"green indicating a higher proficiency.\\n\"","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"            + \"Usage: \u003cCommand\u003e s/\u003cSkill Name\u003e_\u003cSkill Proficiency\u003e \\nExample: edit 1 s/Java_50\\n\";","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Skill\");","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"    public final String skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    public final int skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"     * Constructs a {@code Skill}.","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"     * @param skillName        A valid skill name.","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"     * @param skillProficiency A valid skill proficiency.","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"    public Skill(String skillName, int skillProficiency) {","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        requireNonNull(skillName);","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        checkArgument(isValidSkillName(skillName), NAME_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"        checkArgument(isValidSkillProficiencyRange(skillProficiency), PROFICIENCY_CONSTRAINTS_RANGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"        this.skillName \u003d skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        this.skillProficiency \u003d skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        assert skillProficiency \u003c\u003d 100 \u0026\u0026 skillProficiency \u003e 0 : \"Skill proficiency should be between 1 to 100\";","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        assert skillName !\u003d \"\" : \"Skill name should not be empty\";","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        logger.log(Level.INFO, String.format(\"Created %s with proficiency of %d\", skillName, skillProficiency));","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"     * Constructs a {@code Skill}.","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"     * @param skillName A valid skill name.","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"    public Skill(String skillName) {","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"        requireNonNull(skillName);","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        checkArgument(isValidSkillName(skillName), NAME_CONSTRAINTS);","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"        this.skillName \u003d skillName;","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        this.skillProficiency \u003d 1;","lastModifiedDate":"2022-04-03"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        assert skillName !\u003d \"\" : \"Skill name should not be empty\";","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        logger.log(Level.INFO, String.format(\"Created %s with proficiency of 0\", skillName));","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"     * Returns true if a given string is a valid skill name.","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"    public static boolean isValidSkillName(String test) {","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"        return test.matches(NAME_VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d MAX_LENGTH_OF_SKILL_NAME;","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"     * Returns true if a given int is a valid skill proficiency level.","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"    public static boolean isValidSkillProficiencyRange(int test) {","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        String testInt \u003d String.valueOf(test);","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"        return testInt.matches(PROFICIENCY_VALIDATION_BETWEEN_0_TO_100);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"     * Returns true if given String contains only integers","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    public static boolean isValidSkillProficiencyInteger(String test) {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"        return test.matches(PROFICIENCY_VALIDATION_ONLY_INTEGERS);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"    public boolean isSameSkill(Skill skill) {","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"        return this.skillName.equalsIgnoreCase(skill.skillName);","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"            || (other instanceof Skill // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"            \u0026\u0026 skillName.equals(((Skill) other).skillName)","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"            \u0026\u0026 skillProficiency \u003d\u003d ((Skill) other).skillProficiency); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"        String combined \u003d String.format(\"%s_%d\", skillName, skillProficiency);","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"        return combined.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"[%s, %d]\", skillName, skillProficiency);","lastModifiedDate":"2022-02-28"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"alexteo98":15,"tzhan98":98,"B1LLP4RK":3}},{"path":"src/main/java/seedu/address/model/team/SkillSet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":" * Encapsulates the set of skills that can be done by a particular {@code Person}.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"public class SkillSet {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    private Set\u003cSkill\u003e skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    public SkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        this.skillSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"     * Construtor for SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"     * @param skillSet Set containing Skills","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    public SkillSet(Set\u003cSkill\u003e skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        requireAllNonNull(skillSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        this.skillSet \u003d removeDuplicates(skillSet);","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"     * Constructor for SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"     * @param skillSet SkillSet of skills","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    public SkillSet(SkillSet skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        requireAllNonNull(skillSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        this.skillSet \u003d removeDuplicates(skillSet.getSkillSet());","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"     * Returns Set of Skills without duplicated skills. Will always take the largest skill proficiency if","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"     * duplicated skill is given.","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"     * @param skillSetToTest set of skills to test for","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"     * @return unique set of skills","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    public Set\u003cSkill\u003e removeDuplicates(Set\u003cSkill\u003e skillSetToTest) {","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        for (Skill skill : skillSetToTest) {","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"            if (skillSet.hasSkill(skill)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"                if (skill.skillProficiency \u003e skillSet.getSkillProficiency(skill)) {","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"                    skillSet.removeSkill(skill);","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"                    skillSet.add(skill);","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"            } else {","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"                skillSet.add(skill);","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        return skillSet.getSkillSet();","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"     * Returns the skill proficiency of the person for the given skill,","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"     * or 0 if the person does not have the skill.","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"     * @param skill Skill of person to get proficiency of.","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"     * @return Skill proficiency of the person.","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"    public int getSkillProficiency(Skill skill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        for (Skill s: skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"            if (s.isSameSkill(skill)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"                return s.skillProficiency;","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        return 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"     * Returns true if the person contains the skill, false otherwise.","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"     * @param skill The skill to check if the person possess.","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"     * @return True if the person has the skill, false otherwise.","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"    public boolean hasSkill(Skill skill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"        requireAllNonNull(skill);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"        for (Skill s : skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"            if (skill.isSameSkill(s)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"                return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"        return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"     * Returns true if the current SkillSet has all the skills inside the provided SkillSet.","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"     * @param skillset The SkillSet that contains all the skills that this SkillSet must possess.","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"     * @return True if this SkillSet contains all the skills, false otherwise.","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"    public boolean hasSkills(SkillSet skillset) {","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"        requireAllNonNull(skillset);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"        return skillset.getSkillSetInStream()","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"                .allMatch((this::hasSkill));","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"     * Adds all of provided skillSet into this skillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"     * @param additionalSkill skillSet to be added","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"    public void addAll(SkillSet additionalSkill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"        removeSkillSet(additionalSkill);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"        Set\u003cSkill\u003e toAdd \u003d additionalSkill.getSkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"        skillSet.addAll(toAdd);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"tzhan98"},"content":"     * Add a skill into this skillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"tzhan98"},"content":"     * @param additionalSkill Skill to be added","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tzhan98"},"content":"    public void add(Skill additionalSkill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"tzhan98"},"content":"        removeSkill(additionalSkill);","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"tzhan98"},"content":"        skillSet.add(additionalSkill);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"tzhan98"},"content":"     * Remove SkillSet if present in current SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"tzhan98"},"content":"     * @param skillSetRemove SkillSet to remove","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"tzhan98"},"content":"    public void removeSkillSet(SkillSet skillSetRemove) {","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"tzhan98"},"content":"        for (Skill s : skillSetRemove.getSkillSet()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"tzhan98"},"content":"            removeSkill(s);","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"tzhan98"},"content":"     * Remove Skill if present in current SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"tzhan98"},"content":"     * @param skill SkillSet to remove","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"tzhan98"},"content":"    public void removeSkill(Skill skill) {","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"tzhan98"},"content":"        Skill toRemove \u003d getSkill(skill);","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"tzhan98"},"content":"        if (toRemove \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"tzhan98"},"content":"            return;","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"tzhan98"},"content":"        this.skillSet.remove(toRemove);","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"tzhan98"},"content":"     * Get the skill with provided Skill in SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"tzhan98"},"content":"     * @param skillToGet skill to get from SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"tzhan98"},"content":"     * @return Skill in SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"tzhan98"},"content":"    public Skill getSkill(Skill skillToGet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"tzhan98"},"content":"        if (this.hasSkill(skillToGet)) {","lastModifiedDate":"2022-04-03"},{"lineNumber":150,"author":{"gitId":"tzhan98"},"content":"            for (Skill s : skillSet) {","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"tzhan98"},"content":"                if (skillToGet.isSameSkill(s)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"tzhan98"},"content":"                    return s;","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"tzhan98"},"content":"        return null;","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"tzhan98"},"content":"    public Set\u003cSkill\u003e getSkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"tzhan98"},"content":"        return skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"tzhan98"},"content":"     * Returns Skill in stream","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"tzhan98"},"content":"     * @return A stream of Skill","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"tzhan98"},"content":"    public Stream\u003cSkill\u003e getSkillSetInStream() {","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"tzhan98"},"content":"        return skillSet.stream();","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"tzhan98"},"content":"    public int getSize() {","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"tzhan98"},"content":"        return this.skillSet.size();","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"tzhan98"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"tzhan98"},"content":"        if (!skillSet.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"tzhan98"},"content":"            builder.append(\"; Skills: \");","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"tzhan98"},"content":"            skillSet.forEach(builder::append);","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"tzhan98"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"tzhan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"tzhan98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"tzhan98"},"content":"                || (other instanceof SkillSet // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"tzhan98"},"content":"                \u0026\u0026 this.skillSet.equals(((SkillSet) other).getSkillSet())); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"tzhan98"},"content":"     * Checks if another SkillSet has the same Skill name as the current SkillSet","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"tzhan98"},"content":"     * @param other SkillSet to compare to","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"tzhan98"},"content":"     * @return true if entered SkillSet has the same Skill names as current, false otherwise","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"tzhan98"},"content":"    public boolean hasSameSkillSet(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"tzhan98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"tzhan98"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"tzhan98"},"content":"        } else if (!(other instanceof SkillSet)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"tzhan98"},"content":"        SkillSet otherSkillSet \u003d (SkillSet) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"tzhan98"},"content":"        if (otherSkillSet.getSize() !\u003d this.getSize()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"tzhan98"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"tzhan98"},"content":"        int sameSkill \u003d 0;","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"tzhan98"},"content":"        for (Skill s : otherSkillSet.getSkillSet()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"tzhan98"},"content":"            if (this.hasSkill(s)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"tzhan98"},"content":"                sameSkill++;","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"tzhan98"},"content":"        return sameSkill \u003d\u003d this.getSize();","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"alexteo98":12,"tzhan98":202,"B1LLP4RK":3}},{"path":"src/main/java/seedu/address/model/team/Team.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":" * Represents a Team in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTeamName(String)}","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"public class Team {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    public static final int MAX_LENGTH_OF_TEAM_NAME \u003d 20;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Team names should be alphanumeric word(s) and may\"","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"            + \" contain spaces.\\n Maximum length of a Team name is 20 characters.\";","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"    // The REGEX below is the regex that checks for the team name constraint mentioned on MESSAGE_CONSTRAINTS","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\d|\\\\w|\\\\s]+\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"    public final String teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"     * Constructs a {@code team}.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"     * @param teamName A valid team name.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"    public Team(String teamName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"        checkArgument(isValidTeamName(teamName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"     * Returns true if a given string is a valid team name.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"    public static boolean isValidTeamName(String test) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d MAX_LENGTH_OF_TEAM_NAME;","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"                || (other instanceof Team // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"                \u0026\u0026 teamName.equals(((Team) other).teamName)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"        return teamName.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"B1LLP4RK"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"        return \u0027[\u0027 + teamName + \u0027]\u0027;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"tzhan98":4,"B1LLP4RK":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Alex Teo\"), new Phone(\"87438807\"), new Email(\"alexteo@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"alexteo98\"), getTeamSet(\"Google CodeJam\"),","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"C_50\"), false),","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Junha Park\"), new Phone(\"91031282\"), new Email(\"billpark@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"B1LLP4RK\"), getTeamSet(\"CTF 2022\"),","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"Java_70\"), true),","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Lye Jia Yang\"), new Phone(\"99272758\"), new Email(\"lyejy@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"Jiaaa-yang\"), getTeamSet(\"Shopee League\", \"Kickstart\"),","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"C_90\"), false),","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Melvin Chan\"), new Phone(\"93210283\"), new Email(\"mchan@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"MelvinCZJ\"), getTeamSet(\"CS2103T\"),","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"Bash_50\"), false),","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"            new Person(new Name(\"Toh Zhan Qing\"), new Phone(\"92492021\"), new Email(\"tohzq@example.com\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"                    new GithubUsername(\"tzhan98\"), getTeamSet(\"CS2100\"),","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"                    getSkillSet(\"C_50\"), false),","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"     * Returns a team set containing the list of strings given.","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"    public static Set\u003cTeam\u003e getTeamSet(String... strings) {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"B1LLP4RK"},"content":"                .map(Team::new)","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"     * Returns a skill set containing the list of strings given.","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"    public static SkillSet getSkillSet(String... strings) {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        return new SkillSet(Arrays.stream(strings)","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"                .map(x -\u003e {","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"                    try {","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"                        return ParserUtil.parseSkill(x);","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"                        e.printStackTrace();","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"                        return null;","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"                    }","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"                })","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"                .collect(Collectors.toSet()));","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tzhan98":19,"B1LLP4RK":4,"-":37,"Jiaaa-yang":16}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    private final String username;","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    private final boolean isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"    private final List\u003cJsonAdaptedTeam\u003e teamSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    private final List\u003cJsonAdaptedSkill\u003e skillSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"username\") String username,","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"            @JsonProperty(\"isPotentialTeammate\") boolean isPotentialTeammate,","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"            @JsonProperty(\"teams\") List\u003cJsonAdaptedTeam\u003e teamSet,","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"            @JsonProperty(\"skillSet\") List\u003cJsonAdaptedSkill\u003e skillSet) {","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"        this.username \u003d username;","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isPotentialTeammate \u003d isPotentialTeammate;","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"        if (teamSet !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"            this.teamSet.addAll(teamSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        if (skillSet !\u003d null) {","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"            this.skillSet.addAll(skillSet);","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        username \u003d source.getGithubUsername().value;","lastModifiedDate":"2022-03-01"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        isPotentialTeammate \u003d source.isPotentialTeammate();","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"        teamSet.addAll(source.getTeams().stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"B1LLP4RK"},"content":"                .map(JsonAdaptedTeam::new)","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        skillSet.addAll(source.getSkillSet().getSkillSetInStream()","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"                .map(JsonAdaptedSkill::new)","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"B1LLP4RK"},"content":"        final List\u003cTeam\u003e personTeams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        final List\u003cSkill\u003e personSkillSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"        for (JsonAdaptedTeam team : teamSet) {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"            personTeams.add(team.toModelType());","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"        for (JsonAdaptedSkill skill : skillSet) {","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"            personSkillSet.add(skill.toModelType());","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"        if (username \u003d\u003d null) {","lastModifiedDate":"2022-03-01"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"                    GithubUsername.class.getSimpleName()));","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"        if (!GithubUsername.isValidUsername(username)) {","lastModifiedDate":"2022-03-01"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"            throw new IllegalValueException(GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        final GithubUsername modelGithubUsername \u003d new GithubUsername(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"B1LLP4RK"},"content":"        final Set\u003cTeam\u003e modelTeams \u003d new HashSet\u003c\u003e(personTeams);","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"tzhan98"},"content":"        final Set\u003cSkill\u003e modelSkillInSet \u003d new HashSet\u003c\u003e(personSkillSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"tzhan98"},"content":"        final SkillSet modelSkill \u003d new SkillSet(modelSkillInSet);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelGithubUsername,","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"                modelTeams, modelSkill, isPotentialTeammate);","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tzhan98":13,"B1LLP4RK":12,"-":91,"Jiaaa-yang":17}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSkill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"/**","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":" * Jackson-friendly version of {@link Skill}.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":" */","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"public class JsonAdaptedSkill {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    private final String skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    private final int skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"     * Constructs a {@code JsonAdaptedSkill} with the given {@code skillName}.","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"    public JsonAdaptedSkill(String skillName, int skillProficiency) {","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        this.skillName \u003d skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        this.skillProficiency \u003d skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"     * Converts a given {@code Skill} into this class for Jackson use.","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    public JsonAdaptedSkill(Skill source) {","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        skillName \u003d source.skillName;","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        skillProficiency \u003d source.skillProficiency;","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"     * Converts a given string into this class for Jackson use.","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"    @JsonCreator","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"    public JsonAdaptedSkill(String source) {","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        String[] skillInfo \u003d source.split(\"_\");","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        skillName \u003d skillInfo[0];","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"        skillProficiency \u003d Integer.parseInt(skillInfo[1]);","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    @JsonValue","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"    public String getSkillValue() {","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        return String.format(\"%s_%d\", skillName, skillProficiency);","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"     * Converts this Jackson-friendly adapted skill object into the model\u0027s {@code Skill} object.","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted skill.","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"    public Skill toModelType() throws IllegalValueException {","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        if (!Skill.isValidSkillName(skillName)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"            throw new IllegalValueException(Skill.NAME_CONSTRAINTS);","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        if (!Skill.isValidSkillProficiencyRange(skillProficiency)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"            throw new IllegalValueException(Skill.PROFICIENCY_CONSTRAINTS_RANGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"        return new Skill(skillName, skillProficiency);","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"tzhan98":63,"B1LLP4RK":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTeam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":" * Jackson-friendly version of {@link seedu.address.model.team.Team}.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"class JsonAdaptedTeam {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"    private final String teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"     * Constructs a {@code JsonAdaptedTeam} with the given {@code teamName}.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"    public JsonAdaptedTeam(String teamName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"     * Converts a given {@code Team} into this class for Jackson use.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"    public JsonAdaptedTeam(Team source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"        teamName \u003d source.teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"    @JsonValue","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"    public String getTeamName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"        return teamName;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"     * Converts this Jackson-friendly adapted team object into the model\u0027s {@code Team} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted team.","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"    public Team toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"        if (!Team.isValidTeamName(teamName)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"            throw new IllegalValueException(Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"        return new Team(teamName);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"B1LLP4RK":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"        String addressBookStr \u003d \"\";","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        for (JsonAdaptedPerson person : persons) {","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"            addressBookStr +\u003d person.toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        return addressBookStr;","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tzhan98":9,"-":60}},{"path":"src/main/java/seedu/address/storage/UserInputHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"public class UserInputHistory {","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"    private final List\u003cString\u003e list;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"    private int index;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"     * Creates a new TextFieldStorage.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    public UserInputHistory() {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"        this.list.add(\"\");","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"        this.index \u003d 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Adds user inputs to list.","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * @param userInput String input from the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    public void add(String userInput) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"        this.index \u003d this.list.size() - 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"        this.list.add(this.index, userInput);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"        this.index++;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns stored user input from list at current index.","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"    public String get() {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"        return this.list.get(this.index);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     * Decrements current index. Does nothing if index is at 0.","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"    public void up() {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.index \u003e 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"            this.index--;","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"     * Increments current index. Does nothing if index is at max list size - 1.","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"    public void down() {","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.index \u003c this.list.size() - 1) {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"            this.index++;","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"MelvinCZJ":55}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"import seedu.address.storage.UserInputHistory;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    private final UserInputHistory userInputHistory;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"        this.commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, this::handleUpAndDownArrowKeysPressed);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"        this.userInputHistory \u003d new UserInputHistory();","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"        this.userInputHistory.add(commandText);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"     * Handles the up and down arrow keys pressed event.","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"    private void handleUpAndDownArrowKeysPressed (KeyEvent event) {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"        if (event.getCode().isArrowKey()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"            case UP:","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"                this.userInputHistory.up();","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"                commandTextField.setText(this.userInputHistory.get());","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"                break;","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"            case DOWN:","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"                this.userInputHistory.down();","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"                commandTextField.setText(this.userInputHistory.get());","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"                break;","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"            default:","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"                break;","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":83,"MelvinCZJ":26,"Jiaaa-yang":2}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"        personListPanel \u003d new PersonListPanel(logic.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":195,"Jiaaa-yang":1}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    private VBox personCard;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    private Hyperlink githubUsername;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"    private FlowPane teams;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    @FXML","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"    private FlowPane skillSet;","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        if (person.isPotentialTeammate()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"            // Add highlight class to potential teammates","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"            personCard.getStyleClass().add(\"highlight\");","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername username \u003d person.getGithubUsername();","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        githubUsername.setText(username.getGithubHandle());","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        HostServices hs \u003d MainApp.getHS();","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        githubUsername.setOnAction(e -\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"            hs.showDocument(username.getGithubProfileLink());","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"        });","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"        teams.getStyleClass().add(\"teamSet\");","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"B1LLP4RK"},"content":"        person.getTeams().stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"B1LLP4RK"},"content":"            .sorted(Comparator.comparing(team -\u003e team.teamName))","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"            .forEach(team -\u003e teams.getChildren().add(new Label(team.teamName)));","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        person.getSkillSet().getSkillSetInStream()","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"            .sorted(Comparator.comparing(skill -\u003e skill.skillName))","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"            .forEach(skill -\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"                Label skillLabel \u003d new Label(skill.skillName);","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"                if (skill.skillProficiency \u003e 80) {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"                    skillLabel.setStyle(\"-fx-background-color: #00ff00\");","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"                } else if (skill.skillProficiency \u003e 50) {","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"                    skillLabel.setStyle(\"-fx-background-color: #33cc33\");","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"                } else if (skill.skillProficiency \u003e 20) {","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"                    skillLabel.setStyle(\"-fx-background-color: #248f24\");","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"                } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"                    skillLabel.setStyle(\"-fx-background-color: #006622\");","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"                skillSet.getChildren().add(skillLabel);","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"            });","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tzhan98":17,"B1LLP4RK":4,"-":71,"Jiaaa-yang":22}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"Jiaaa-yang"},"content":".cell_hyperlink {","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-underline: true;","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-text-fill: #00C9FF;","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"Jiaaa-yang"},"content":".cell_hyperlink:visited {","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-text-fill: #0080FF;","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":364,"author":{"gitId":"Jiaaa-yang"},"content":".highlight {","lastModifiedDate":"2022-03-19"},{"lineNumber":365,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-background-color: #789395;","lastModifiedDate":"2022-03-19"},{"lineNumber":366,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-border-color: white;","lastModifiedDate":"2022-03-19"},{"lineNumber":367,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-19"},{"lineNumber":368,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":369,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":370,"author":{"gitId":"tzhan98"},"content":"#skillSet {","lastModifiedDate":"2022-03-18"},{"lineNumber":371,"author":{"gitId":"tzhan98"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-18"},{"lineNumber":372,"author":{"gitId":"tzhan98"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-18"},{"lineNumber":373,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-18"},{"lineNumber":374,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":375,"author":{"gitId":"tzhan98"},"content":"#skillSet .label {","lastModifiedDate":"2022-03-18"},{"lineNumber":376,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-27"},{"lineNumber":377,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-27"},{"lineNumber":378,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-27"},{"lineNumber":379,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-27"},{"lineNumber":380,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-27"},{"lineNumber":381,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":382,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"Jiaaa-yang"},"content":".teamSet {","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-padding: 2 0 2 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":386,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":387,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":388,"author":{"gitId":"Jiaaa-yang"},"content":".teamSet .label {","lastModifiedDate":"2022-03-27"},{"lineNumber":389,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-27"},{"lineNumber":390,"author":{"gitId":"tzhan98"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-18"},{"lineNumber":391,"author":{"gitId":"tzhan98"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-18"},{"lineNumber":392,"author":{"gitId":"tzhan98"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-18"},{"lineNumber":393,"author":{"gitId":"Jiaaa-yang"},"content":"    -fx-background-color: #4D96FF;","lastModifiedDate":"2022-03-27"},{"lineNumber":394,"author":{"gitId":"tzhan98"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-18"},{"lineNumber":395,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"tzhan98":11,"-":352,"Jiaaa-yang":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"         title\u003d\"HackNet\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":59,"Jiaaa-yang":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    \u003cVBox id\u003d\"personCard\" fx:id\u003d\"personCard\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"      \u003cFlowPane fx:id\u003d\"teams\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"      \u003cFlowPane fx:id\u003d\"skillSet\" /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"      \u003cHyperlink fx:id\u003d\"githubUsername\" styleClass\u003d\"cell_hyperlink\" text\u003d\"\\$githubUsername\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tzhan98":1,"B1LLP4RK":1,"-":33,"Jiaaa-yang":3}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_FOR_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"                + USERNAME_DESC_AMY + SKILL_DESC_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTeams().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"    public void getDisplayPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getDisplayPersonList().remove(0));","lastModifiedDate":"2022-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"alexteo98":1,"tzhan98":2,"B1LLP4RK":3,"-":155,"Jiaaa-yang":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        String errorMessage \u003d \"Error: Operation would result in persons with same Phone.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"        assertCommandFailure(new AddCommand(personInList), model, errorMessage);","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"alexteo98":1,"tzhan98":2,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.VersionedAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        assertThrows(CommandException.class, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"     * A default model stub that have all of the methods failing other than getDuplicateField","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"        /**","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"         * Always return duplicated field as phone","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"         */","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"        @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"        public String getDuplicateField(Person person) {","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"            return \"Phone\";","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"tzhan98"},"content":"        @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"tzhan98"},"content":"        public boolean safeDeletePerson(Person target) {","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"tzhan98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"tzhan98"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"Jiaaa-yang"},"content":"        public ObservableList\u003cPerson\u003e getDisplayPersonList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"Jiaaa-yang"},"content":"        public void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":165,"author":{"gitId":"Jiaaa-yang"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":166,"author":{"gitId":"Jiaaa-yang"},"content":"        public void updateDisplayPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"Jiaaa-yang"},"content":"        public void updateDisplayPersonList(Predicate\u003cPerson\u003e predicate, Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"alexteo98"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"alexteo98"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"alexteo98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"alexteo98"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"alexteo98"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"alexteo98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"alexteo98"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"alexteo98"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"alexteo98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"alexteo98"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"alexteo98"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"alexteo98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"alexteo98"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"alexteo98"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"alexteo98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"alexteo98"},"content":"            return new VersionedAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"alexteo98"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"alexteo98"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"alexteo98"},"content":"            ReadOnlyAddressBook addressBook \u003d this.getAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"alexteo98"},"content":"            if (addressBook instanceof VersionedAddressBook) {","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"alexteo98"},"content":"                VersionedAddressBook versionedAddressBook \u003d (VersionedAddressBook) addressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"alexteo98"},"content":"                versionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"alexteo98"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"alexteo98":36,"tzhan98":15,"-":194,"Jiaaa-yang":8}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.VersionedAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        expectedModel.setAddressBook(new VersionedAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"alexteo98":4,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND_OPTION;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALID_SEPARATOR_COMMA \u003d \",\";","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALID_SEPARATOR_COMMA_WITH_SPACES \u003d \"    ,    \";","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALID_EDIT_OPTION_R \u003d \"r\";","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String VALID_USERNAME_AMY \u003d \"amybee-123\";","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String VALID_USERNAME_BOB \u003d \"bobbybob99\";","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALID_TEAM_GOOGLE \u003d \"google\";","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALID_TEAM_YAHOO \u003d \"yahoo\";","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String VALID_TEAM_HACKING_TEAM \u003d \"hacking team\";","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"    public static final String VALID_SKILL_C \u003d \"C_33\";","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    public static final String VALID_SKILL_PYTHON \u003d \"python_90\";","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    public static final String VALID_SKILL_UNIT_TESTING \u003d \"unit test_90\";","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String USERNAME_DESC_AMY \u003d \" \" + PREFIX_GITHUB_USERNAME + VALID_USERNAME_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String USERNAME_DESC_BOB \u003d \" \" + PREFIX_GITHUB_USERNAME + VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String TEAM_DESC_YAHOO \u003d \" \" + PREFIX_TEAM + VALID_TEAM_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String TEAM_DESC_GOOGLE \u003d \" \" + PREFIX_TEAM + VALID_TEAM_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String TEAM_DESC_HACKING_TEAM \u003d \" \" + PREFIX_TEAM + VALID_TEAM_HACKING_TEAM;","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String TEAM_DESC_GOOGLE_N_YAHOO \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"        \" \" + PREFIX_TEAM + VALID_TEAM_GOOGLE + VALID_SEPARATOR_COMMA + VALID_TEAM_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String TEAM_DESC_GOOGLE_N_YAHOO_SEPARATOR_WITH_SPACES \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"        \" \" + PREFIX_TEAM + VALID_TEAM_GOOGLE + VALID_SEPARATOR_COMMA_WITH_SPACES + VALID_TEAM_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String TEAM_DESC_EMPTY \u003d \" \" + PREFIX_TEAM;","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"    public static final String SKILL_DESC_C \u003d \" \" + PREFIX_SKILL + VALID_SKILL_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"    public static final String SKILL_DESC_PYTHON \u003d \" \" + PREFIX_SKILL + VALID_SKILL_PYTHON;","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String SKILL_DESC_UNIT_TESTING \u003d \" \" + PREFIX_SKILL + VALID_SKILL_UNIT_TESTING;","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String SKILL_DESC_C_N_PYTHON \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"B1LLP4RK"},"content":"        \" \" + PREFIX_SKILL + VALID_SKILL_C + VALID_SEPARATOR_COMMA + VALID_SKILL_PYTHON;","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String SKILL_DESC_C_N_PYTHON_WITH_SPACES \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"        \" \" + PREFIX_SKILL + VALID_SKILL_C + VALID_SEPARATOR_COMMA_WITH_SPACES + VALID_SKILL_PYTHON;","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String SKILL_DESC_EMPTY \u003d \" \" + PREFIX_SKILL;","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String EDIT_OPTION_R \u003d \" \" + PREFIX_COMMAND_OPTION + VALID_EDIT_OPTION_R;","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String INVALID_USERNAME_DESC \u003d \" \" + PREFIX_GITHUB_USERNAME + \"amy_cho\"; // \u0027_\u0027 not allowed","lastModifiedDate":"2022-03-01"},{"lineNumber":79,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String INVALID_TEAM_DESC \u003d \" \" + PREFIX_TEAM + \"hubby*\"; // \u0027*\u0027 not allowed in s","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"    public static final String INVALID_SKILL_DESC \u003d \" \" + PREFIX_SKILL + \"Python*_1\"; // \u0027*\u0027 not allowed in skills","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"B1LLP4RK"},"content":"    public static final String INVALID_EDIT_OPTION_DESC \u003d \" \" + PREFIX_COMMAND_OPTION + \"v\";","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withGithubUsername(VALID_USERNAME_AMY)","lastModifiedDate":"2022-03-01"},{"lineNumber":92,"author":{"gitId":"B1LLP4RK"},"content":"            .withTeams(VALID_TEAM_YAHOO).withSkillSet(VALID_SKILL_C).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withGithubUsername(VALID_USERNAME_BOB)","lastModifiedDate":"2022-03-01"},{"lineNumber":95,"author":{"gitId":"B1LLP4RK"},"content":"            .withTeams(VALID_TEAM_GOOGLE, VALID_TEAM_YAHOO).withSkillSet(VALID_SKILL_PYTHON).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"     * Convenience wrapper to {@link #assertUndoRedoCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"    public static void assertUndoRedoCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"                                                    Model expectedModel) {","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"        assertUndoRedoCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"     * Executes the given {@code undoCommand} or {@code redoCommand}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"alexteo98"},"content":"     * - the persons in {@code actualModel} matches persons in {@code expectedModel}","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"alexteo98"},"content":"    public static void assertUndoRedoCommandSuccess(Command command, Model actualModel,","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"alexteo98"},"content":"                                                    CommandResult expectedCommandResult, Model expectedModel) {","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"alexteo98"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"alexteo98"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"alexteo98"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"alexteo98"},"content":"            assertEquals(expectedModel.getDisplayPersonList(), actualModel.getDisplayPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"alexteo98"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"alexteo98"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"Jiaaa-yang"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedFilteredList, actualModel.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getDisplayPersonList().size());","lastModifiedDate":"2022-03-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d model.getDisplayPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":178,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(1, model.getDisplayPersonList().size());","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alexteo98":26,"tzhan98":7,"B1LLP4RK":28,"-":106,"Jiaaa-yang":14}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        Person personToDelete \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getDisplayPersonList().size() + 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        Person personToDelete \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"        model.updateDisplayPersonList(p -\u003e false);","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(model.getDisplayPersonList().isEmpty());","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"alexteo98":2,"B1LLP4RK":2,"-":102,"Jiaaa-yang":5}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"B1LLP4RK"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HACKING_TEAM;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.EditCommand.MESSAGE_EDIT_MULTIPLE_PERSON_SUCCESS;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"B1LLP4RK"},"content":"        boolean isResetmode \u003d true;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor, isResetmode);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_SINGLE_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(model.getDisplayPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getDisplayPersonList().size());","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        Person lastPerson \u003d model.getDisplayPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"        // Preparing the edit command","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"            .withPhone(VALID_PHONE_BOB).withTeams(VALID_TEAM_GOOGLE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"B1LLP4RK"},"content":"        // Preparing the expected result, which are the expected model and message","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"B1LLP4RK"},"content":"            .withTeams(VALID_TEAM_GOOGLE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"B1LLP4RK"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_SINGLE_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor(), true);","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"        //making expected Message","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedPerson \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"B1LLP4RK"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_SINGLE_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"B1LLP4RK"},"content":"        //making expected model, which is the same as original model","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"B1LLP4RK"},"content":"        // make the app show filtered list","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        Person personInFilteredList \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"B1LLP4RK"},"content":"        //making the edit command","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"B1LLP4RK"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), true);","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"B1LLP4RK"},"content":"        // making expected model","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(model.getDisplayPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"B1LLP4RK"},"content":"        //making expected msg","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"B1LLP4RK"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_SINGLE_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"        Person firstPerson \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"tzhan98"},"content":"        assertThrows(CommandException.class, () -\u003e editCommand.execute(model));","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"tzhan98"},"content":"    public void execute_duplicatePersonFilteredList_failure() throws CommandException {","lastModifiedDate":"2022-04-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"B1LLP4RK"},"content":"            new EditPersonDescriptorBuilder(personInList).build(), true);","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"tzhan98"},"content":"        assertThrows(CommandException.class, () -\u003e editCommand.execute(model));","lastModifiedDate":"2022-04-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"Jiaaa-yang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getDisplayPersonList().size() + 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"B1LLP4RK"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), true);","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"B1LLP4RK"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2022-04-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"B1LLP4RK"},"content":"        assertNotEquals(standardCommand, null);","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"B1LLP4RK"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY, true)));","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"B1LLP4RK"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB, true)));","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"B1LLP4RK"},"content":"    //test batch edit","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"B1LLP4RK"},"content":"    public void execute_batchEditAllIndicesValidInDefaultMode_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"B1LLP4RK"},"content":"        //making the edit command to test","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cIndex\u003e targetIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":200,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":201,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":202,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor editPersonDescriptorToAddTeam \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":203,"author":{"gitId":"B1LLP4RK"},"content":"            new EditPersonDescriptorBuilder().withTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":204,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(targetIndices, editPersonDescriptorToAddTeam, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":205,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":206,"author":{"gitId":"B1LLP4RK"},"content":"        //making the expected model","lastModifiedDate":"2022-04-07"},{"lineNumber":207,"author":{"gitId":"B1LLP4RK"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-04-07"},{"lineNumber":208,"author":{"gitId":"B1LLP4RK"},"content":"        Person firstIndexPerson \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":209,"author":{"gitId":"B1LLP4RK"},"content":"        Person secondIndexPerson \u003d model.getDisplayPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":210,"author":{"gitId":"B1LLP4RK"},"content":"        PersonBuilder firstIndexEditPersonBuilder \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":211,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(firstIndexPerson).addTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM);","lastModifiedDate":"2022-04-07"},{"lineNumber":212,"author":{"gitId":"B1LLP4RK"},"content":"        PersonBuilder secondIndexEditPersonBuilder \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":213,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(secondIndexPerson).addTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM);","lastModifiedDate":"2022-04-07"},{"lineNumber":214,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.setPerson(firstIndexPerson, firstIndexEditPersonBuilder.build());","lastModifiedDate":"2022-04-07"},{"lineNumber":215,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.setPerson(secondIndexPerson, secondIndexEditPersonBuilder.build());","lastModifiedDate":"2022-04-07"},{"lineNumber":216,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-04-07"},{"lineNumber":217,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":218,"author":{"gitId":"B1LLP4RK"},"content":"        //making the expected display message","lastModifiedDate":"2022-04-07"},{"lineNumber":219,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cName\u003e editedNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":220,"author":{"gitId":"B1LLP4RK"},"content":"        editedNames.add(firstIndexPerson.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":221,"author":{"gitId":"B1LLP4RK"},"content":"        editedNames.add(secondIndexPerson.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":222,"author":{"gitId":"B1LLP4RK"},"content":"        String expectedMsg \u003d String.format(MESSAGE_EDIT_MULTIPLE_PERSON_SUCCESS, editedNames);","lastModifiedDate":"2022-04-07"},{"lineNumber":223,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":224,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandSuccess(editCommand, model, expectedMsg, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":225,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":226,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":227,"author":{"gitId":"B1LLP4RK"},"content":"    //test batch edit when some indices are invalid","lastModifiedDate":"2022-04-07"},{"lineNumber":228,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":229,"author":{"gitId":"B1LLP4RK"},"content":"    public void execute_batchEditSomeInvalidIndices_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":230,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":231,"author":{"gitId":"B1LLP4RK"},"content":"        //make edit command","lastModifiedDate":"2022-04-07"},{"lineNumber":232,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cIndex\u003e targetIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":233,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":234,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":235,"author":{"gitId":"B1LLP4RK"},"content":"        Index veryBigInvalidIndex \u003d Index.fromOneBased(1000);","lastModifiedDate":"2022-04-07"},{"lineNumber":236,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(veryBigInvalidIndex);","lastModifiedDate":"2022-04-07"},{"lineNumber":237,"author":{"gitId":"B1LLP4RK"},"content":"        assertTrue(veryBigInvalidIndex.getZeroBased() \u003e model.getDisplayPersonList().size());","lastModifiedDate":"2022-04-07"},{"lineNumber":238,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor editPersonDescriptorToAddTeam \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":239,"author":{"gitId":"B1LLP4RK"},"content":"            new EditPersonDescriptorBuilder().withTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":240,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(targetIndices, editPersonDescriptorToAddTeam, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":241,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":242,"author":{"gitId":"B1LLP4RK"},"content":"        //make expected model","lastModifiedDate":"2022-04-07"},{"lineNumber":243,"author":{"gitId":"B1LLP4RK"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-04-07"},{"lineNumber":244,"author":{"gitId":"B1LLP4RK"},"content":"        Person firstIndexPerson \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":245,"author":{"gitId":"B1LLP4RK"},"content":"        Person secondIndexPerson \u003d model.getDisplayPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":246,"author":{"gitId":"B1LLP4RK"},"content":"        PersonBuilder firstIndexEditPersonBuilder \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":247,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(firstIndexPerson).addTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM);","lastModifiedDate":"2022-04-07"},{"lineNumber":248,"author":{"gitId":"B1LLP4RK"},"content":"        PersonBuilder secondIndexEditPersonBuilder \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":249,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(secondIndexPerson).addTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM);","lastModifiedDate":"2022-04-07"},{"lineNumber":250,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.setPerson(firstIndexPerson, firstIndexEditPersonBuilder.build());","lastModifiedDate":"2022-04-07"},{"lineNumber":251,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.setPerson(secondIndexPerson, secondIndexEditPersonBuilder.build());","lastModifiedDate":"2022-04-07"},{"lineNumber":252,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-04-07"},{"lineNumber":253,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":254,"author":{"gitId":"B1LLP4RK"},"content":"        //make expected msg","lastModifiedDate":"2022-04-07"},{"lineNumber":255,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cName\u003e editedNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":256,"author":{"gitId":"B1LLP4RK"},"content":"        editedNames.add(firstIndexPerson.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"B1LLP4RK"},"content":"        editedNames.add(secondIndexPerson.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":258,"author":{"gitId":"B1LLP4RK"},"content":"        String expectedMsg \u003d String.format(","lastModifiedDate":"2022-04-07"},{"lineNumber":259,"author":{"gitId":"B1LLP4RK"},"content":"            Messages.MESSAGE_INVALID_INDEX_FOR_SOME_PERSON + \"\\n\" + MESSAGE_EDIT_MULTIPLE_PERSON_SUCCESS, editedNames);","lastModifiedDate":"2022-04-07"},{"lineNumber":260,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":261,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandSuccess(editCommand, model, expectedMsg, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":262,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":263,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":264,"author":{"gitId":"B1LLP4RK"},"content":"    //test batch edit to silently ignore fields other than team and skills, without throwing an error","lastModifiedDate":"2022-04-07"},{"lineNumber":265,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":266,"author":{"gitId":"B1LLP4RK"},"content":"    public void execute_batchEditShouldEnableOnlyTeamsAndSkillsChange_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":267,"author":{"gitId":"B1LLP4RK"},"content":"        //making edit command","lastModifiedDate":"2022-04-07"},{"lineNumber":268,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cIndex\u003e targetIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":269,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":270,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":271,"author":{"gitId":"B1LLP4RK"},"content":"        //changing names while adding teams","lastModifiedDate":"2022-04-07"},{"lineNumber":272,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor editPersonDescriptorToAddTeam \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":273,"author":{"gitId":"B1LLP4RK"},"content":"            new EditPersonDescriptorBuilder().withTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM)","lastModifiedDate":"2022-04-07"},{"lineNumber":274,"author":{"gitId":"B1LLP4RK"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":275,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(targetIndices, editPersonDescriptorToAddTeam, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":276,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":277,"author":{"gitId":"B1LLP4RK"},"content":"        //make expected model","lastModifiedDate":"2022-04-07"},{"lineNumber":278,"author":{"gitId":"B1LLP4RK"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-04-07"},{"lineNumber":279,"author":{"gitId":"B1LLP4RK"},"content":"        Person firstIndexPerson \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":280,"author":{"gitId":"B1LLP4RK"},"content":"        Person secondIndexPerson \u003d model.getDisplayPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":281,"author":{"gitId":"B1LLP4RK"},"content":"        PersonBuilder firstIndexEditPersonBuilder \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":282,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(firstIndexPerson).addTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM);","lastModifiedDate":"2022-04-07"},{"lineNumber":283,"author":{"gitId":"B1LLP4RK"},"content":"        PersonBuilder secondIndexEditPersonBuilder \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":284,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(secondIndexPerson).addTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM);","lastModifiedDate":"2022-04-07"},{"lineNumber":285,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.setPerson(firstIndexPerson, firstIndexEditPersonBuilder.build());","lastModifiedDate":"2022-04-07"},{"lineNumber":286,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.setPerson(secondIndexPerson, secondIndexEditPersonBuilder.build());","lastModifiedDate":"2022-04-07"},{"lineNumber":287,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-04-07"},{"lineNumber":288,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":289,"author":{"gitId":"B1LLP4RK"},"content":"        //make expected msg","lastModifiedDate":"2022-04-07"},{"lineNumber":290,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cName\u003e editedNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":291,"author":{"gitId":"B1LLP4RK"},"content":"        editedNames.add(firstIndexPerson.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":292,"author":{"gitId":"B1LLP4RK"},"content":"        editedNames.add(secondIndexPerson.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":293,"author":{"gitId":"B1LLP4RK"},"content":"        String expectedMsg \u003d String.format(MESSAGE_EDIT_MULTIPLE_PERSON_SUCCESS, editedNames);","lastModifiedDate":"2022-04-07"},{"lineNumber":294,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":295,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandSuccess(editCommand, model, expectedMsg, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":296,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":297,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":298,"author":{"gitId":"B1LLP4RK"},"content":"    //test reset mode","lastModifiedDate":"2022-04-07"},{"lineNumber":299,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":300,"author":{"gitId":"B1LLP4RK"},"content":"    public void execute_resetMode_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":301,"author":{"gitId":"B1LLP4RK"},"content":"        //making batch edit command","lastModifiedDate":"2022-04-07"},{"lineNumber":302,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cIndex\u003e targetIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":303,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":304,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":305,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor editPersonDescriptorToAddTeam \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":306,"author":{"gitId":"B1LLP4RK"},"content":"            new EditPersonDescriptorBuilder().withTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM)","lastModifiedDate":"2022-04-07"},{"lineNumber":307,"author":{"gitId":"B1LLP4RK"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":308,"author":{"gitId":"B1LLP4RK"},"content":"        //reset mode is true","lastModifiedDate":"2022-04-07"},{"lineNumber":309,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand editCommand \u003d new EditCommand(targetIndices, editPersonDescriptorToAddTeam, true);","lastModifiedDate":"2022-04-07"},{"lineNumber":310,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":311,"author":{"gitId":"B1LLP4RK"},"content":"        //make expected model","lastModifiedDate":"2022-04-07"},{"lineNumber":312,"author":{"gitId":"B1LLP4RK"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-04-07"},{"lineNumber":313,"author":{"gitId":"B1LLP4RK"},"content":"        Person firstIndexPerson \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":314,"author":{"gitId":"B1LLP4RK"},"content":"        Person secondIndexPerson \u003d model.getDisplayPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-04-07"},{"lineNumber":315,"author":{"gitId":"B1LLP4RK"},"content":"        PersonBuilder firstIndexEditPersonBuilder \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":316,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(firstIndexPerson).withTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM);","lastModifiedDate":"2022-04-07"},{"lineNumber":317,"author":{"gitId":"B1LLP4RK"},"content":"        PersonBuilder secondIndexEditPersonBuilder \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":318,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(secondIndexPerson).withTeams(VALID_TEAM_GOOGLE, VALID_TEAM_HACKING_TEAM);","lastModifiedDate":"2022-04-07"},{"lineNumber":319,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.setPerson(firstIndexPerson, firstIndexEditPersonBuilder.build());","lastModifiedDate":"2022-04-07"},{"lineNumber":320,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.setPerson(secondIndexPerson, secondIndexEditPersonBuilder.build());","lastModifiedDate":"2022-04-07"},{"lineNumber":321,"author":{"gitId":"B1LLP4RK"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-04-07"},{"lineNumber":322,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":323,"author":{"gitId":"B1LLP4RK"},"content":"        //make expected msg","lastModifiedDate":"2022-04-07"},{"lineNumber":324,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cName\u003e editedNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":325,"author":{"gitId":"B1LLP4RK"},"content":"        editedNames.add(firstIndexPerson.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":326,"author":{"gitId":"B1LLP4RK"},"content":"        editedNames.add(secondIndexPerson.getName());","lastModifiedDate":"2022-04-07"},{"lineNumber":327,"author":{"gitId":"B1LLP4RK"},"content":"        String expectedMsg \u003d String.format(MESSAGE_EDIT_MULTIPLE_PERSON_SUCCESS, editedNames);","lastModifiedDate":"2022-04-07"},{"lineNumber":328,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":329,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandSuccess(editCommand, model, expectedMsg, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":330,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"alexteo98":4,"tzhan98":6,"B1LLP4RK":181,"-":133,"Jiaaa-yang":7}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withGithubUsername(VALID_USERNAME_BOB).build();","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"        // different s -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTeams(VALID_TEAM_GOOGLE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"B1LLP4RK":3,"-":53,"Jiaaa-yang":2}},{"path":"src/test/java/seedu/address/logic/commands/FilterPastTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEAMMATES;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"class FilterPastTeamCommandTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    void execute_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        Predicate\u003cPerson\u003e predicate \u003d PREDICATE_SHOW_ALL_TEAMMATES;","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        expectedModel.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        FilterPastTeamCommand filterPastTeamCommand \u003d new FilterPastTeamCommand();","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d FilterPastTeamCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(filterPastTeamCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getDisplayPersonList());","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"alexteo98":35}},{"path":"src/test/java/seedu/address/logic/commands/FilterSkillCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"class FilterSkillCommandTest {","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    public void equals() {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet1 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        skillSet1.add(new Skill(\"skill1\", 40));","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet2 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        skillSet2.add(new Skill(\"skill2\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet3 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        skillSet3.add(new Skill(\"skill1\", 90));","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"                new PersonContainsSkillPredicate(skillSet1);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"                new PersonContainsSkillPredicate(skillSet2);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"                new PersonContainsSkillPredicate(skillSet3);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand filterFirstSkillCommand \u003d new FilterSkillCommand(firstPredicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand filterSecondSkillCommand \u003d new FilterSkillCommand(secondPredicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand filterThirdSkillCommand \u003d new FilterSkillCommand(thirdPredicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        assertTrue(filterFirstSkillCommand.equals(filterFirstSkillCommand));","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand filterFirstSkillCommandCopy \u003d new FilterSkillCommand(firstPredicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        assertTrue(filterFirstSkillCommandCopy.equals(filterFirstSkillCommandCopy));","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        // same skills, different proficiency -\u003e returns true","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"        assertTrue(filterFirstSkillCommand.equals(filterThirdSkillCommand));","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        assertFalse(filterFirstSkillCommand.equals(1));","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"        assertFalse(filterFirstSkillCommand.equals(null));","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        assertFalse(filterFirstSkillCommand.equals(filterSecondSkillCommand));","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d preparePredicate(\"NONE\");","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand command \u003d new FilterSkillCommand(predicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Collections.emptyList(), model.getDisplayPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"    public void execute_singleSkill_multiplePersonsFound() {","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d preparePredicate(\"C\");","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand command \u003d new FilterSkillCommand(predicate);","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE, GEORGE), model.getDisplayPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"     * Parses {@code userInput} into a {@code PersonContainsSkillPredicate}.","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"    private PersonContainsSkillPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(new Skill(userInput));","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"        return new PersonContainsSkillPredicate(skillSet);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alexteo98":94,"B1LLP4RK":1,"Jiaaa-yang":4}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Collections.emptyList(), model.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getDisplayPersonList());","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":79,"Jiaaa-yang":4}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_ADD;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_CLEAR;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_DELETE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_EDIT;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_EXIT;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_FILTER;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_FILTERTEAM;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_FIND;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_LIST;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_REDO;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_SHOW;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_SKILL;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_SORT;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_TEAM;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_UNDO;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.HelpCommand.HELP_MESSAGE_UNTEAM;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        assertCommandSuccess(new HelpCommand(\"\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    public void execute_add_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_ADD, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"add\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"    public void execute_delete_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_DELETE, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"delete\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"    public void execute_find_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_FIND, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"find\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"    public void execute_filter_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_FILTER, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"filter\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"    public void execute_list_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_LIST, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"list\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"    public void execute_skill_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_SKILL, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"skill\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"    public void execute_team_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_TEAM, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"team\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"    public void execute_unteam_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_UNTEAM, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"unteam\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"    public void execute_sort_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_SORT, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"sort\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"    public void execute_clear_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_CLEAR, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"clear\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_EXIT, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"exit\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"    public void execute_edit_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_EDIT, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"edit\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"    public void execute_undo_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_UNDO, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"undo\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"    public void execute_redo_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_REDO, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"redo\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"alexteo98"},"content":"    public void execute_show_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_SHOW, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"show\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"    public void execute_filterteam_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HELP_MESSAGE_FILTERTEAM, false, false);","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"        assertCommandSuccess(new HelpCommand(\"filterteam\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"alexteo98":113,"tzhan98":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/MakeTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":" * {@code MakeTeamCommand}.","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"public class MakeTeamCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_addValidIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MakeTeamCommand.MESSAGE_ADD_TEAMMATE_SUCCESS, person);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        Person expectedPerson \u003d new PersonBuilder(expectedModel.getDisplayPersonList().get(0))","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"                .isPotentialTeammate(true).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(person, expectedPerson);","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(makeTeamCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_removeValidIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d model.getDisplayPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_THIRD_PERSON, MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MakeTeamCommand.MESSAGE_REMOVE_TEAMMATE_SUCCESS, person);","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        Person expectedPerson \u003d new PersonBuilder(expectedModel.getDisplayPersonList().get(2))","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"                .isPotentialTeammate(false).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(person, expectedPerson);","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(makeTeamCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_addPersonThatIsAlreadyPotentialTeammate_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"        // Third person in TypicalPersons.java is already a potential teammate","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_THIRD_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d MakeTeamCommand.MESSAGE_REDUNDANT_ADDING;","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandFailure(makeTeamCommand, model, expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_removePersonThatIsNotPotentialTeammate_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"        // Second person in TypicalPersons.java is not a potential teammate","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_SECOND_PERSON, MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d MakeTeamCommand.MESSAGE_REDUNDANT_REMOVAL;","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandFailure(makeTeamCommand, model, expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getDisplayPersonList().size() + 1);","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(outOfBoundIndex, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(makeTeamCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MakeTeamCommand.MESSAGE_ADD_TEAMMATE_SUCCESS, person);","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"        Person expectedPerson \u003d new PersonBuilder(expectedModel.getDisplayPersonList().get(0))","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"                .isPotentialTeammate(true).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.setPerson(person, expectedPerson);","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(makeTeamCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand makeTeamCommand \u003d new MakeTeamCommand(outOfBoundIndex, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"B1LLP4RK"},"content":"        assertCommandFailure(makeTeamCommand, model, Messages.MESSAGE_INVALID_INDEX_FOR_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand addFirstPerson \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand removeFirstPerson \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand addSecondPerson \u003d new MakeTeamCommand(INDEX_SECOND_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(addFirstPerson.equals(addFirstPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"        // same index and action -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand addFirstPersonCopy \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(addFirstPersonCopy.equals(addFirstPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand removePersonCopy \u003d new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(removeFirstPerson.equals(removePersonCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"Jiaaa-yang"},"content":"        // different action same index -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(addFirstPerson.equals(removeFirstPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"Jiaaa-yang"},"content":"        // different index same action -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(addFirstPerson.equals(addSecondPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"Jiaaa-yang"},"content":"        // different index different action -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(removeFirstPerson.equals(addSecondPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"alexteo98":3,"B1LLP4RK":2,"Jiaaa-yang":138}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertUndoRedoCommandSuccess;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"class RedoCommandTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    void execute_deleteCommandRedone_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"        Person personToDelete \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_REDO_SUCCESS);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        assertUndoRedoCommandSuccess(redoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"    void execute_noCommandsToRedo_throwsCommandException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_REDO_FAILED);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        assertCommandFailure(redoCommand, model, expectedMessage);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"    void testEquals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"        assertTrue(redoCommand.equals(redoCommand));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"        assertTrue(redoCommand.equals(new RedoCommand()));","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        assertFalse(redoCommand.equals(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alexteo98":57}},{"path":"src/test/java/seedu/address/logic/commands/ShowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"class ShowCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute() {","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        ShowCommand command \u003d new ShowCommand();","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d ShowCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(Model.PREDICATE_SHOW_POTENTIAL_TEAMMATES);","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL), model.getDisplayPersonList());","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Jiaaa-yang":32}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"class SortCommandTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet1 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet2 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill firstSkill \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill secondSkill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        skillSet1.add(firstSkill);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        skillSet2.add(secondSkill);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate firstPredicate \u003d new PersonContainsSkillPredicate(skillSet1);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate secondPredicate \u003d new PersonContainsSkillPredicate(skillSet2);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator firstComp \u003d new PersonBySkillProficiencyComparator(firstSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator secondComp \u003d new PersonBySkillProficiencyComparator(secondSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"        SortCommand sortCommand \u003d new SortCommand(firstPredicate, firstComp);","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(sortCommand.equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(sortCommand.equals(1));","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        // same predicate and comparator -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(new SortCommand(firstPredicate, firstComp).equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        // diff predicate but same comparator -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(new SortCommand(secondPredicate, firstComp).equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        // same predicate but diff comparator -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(new SortCommand(firstPredicate, secondComp).equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        // diff predicate and diff comparator -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(new SortCommand(secondPredicate, secondComp).equals(sortCommand));","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_invalidSkill_noPersonFound() {","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        SkillSet invalidSkillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill invalidSkill \u003d new Skill(\"abcdef\");","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        invalidSkillSet.add(invalidSkill);","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d new PersonContainsSkillPredicate(invalidSkillSet);","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comp \u003d new PersonBySkillProficiencyComparator(invalidSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"Jiaaa-yang"},"content":"        SortCommand command \u003d new SortCommand(predicate, comp);","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate, comp);","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Collections.emptyList(), model.getDisplayPersonList());","lastModifiedDate":"2022-03-07"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":86,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"Jiaaa-yang"},"content":"    public void execute_validSkill_filtersAndSortsDisplayPersonList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill skill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(skill);","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate predicate \u003d new PersonContainsSkillPredicate(skillSet);","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comp \u003d new PersonBySkillProficiencyComparator(skill);","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"Jiaaa-yang"},"content":"        SortCommand command \u003d new SortCommand(predicate, comp);","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"        expectedModel.updateDisplayPersonList(predicate, comp);","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(Arrays.asList(ELLE, GEORGE, ALICE), model.getDisplayPersonList());","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"alexteo98":17,"B1LLP4RK":1,"Jiaaa-yang":84}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertUndoRedoCommandSuccess;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"class UndoCommandTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    void execute_deleteCommandUndone_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"        Person personToDelete \u003d model.getDisplayPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_UNDO_SUCCESS);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        assertUndoRedoCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"    void execute_noCommandsToUndo_throwsCommandException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_UNDO_FAILED);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        assertCommandFailure(undoCommand, model, expectedMessage);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"    void execute_commandsUndoNotSupported_throwsCommandException() {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_UNDO_FAILED);","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        listCommand.execute(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"        assertCommandFailure(undoCommand, model, expectedMessage);","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"    void testEquals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"        assertTrue(undoCommand.equals(undoCommand));","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"        assertTrue(undoCommand.equals(new UndoCommand()));","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"        assertFalse(undoCommand.equals(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alexteo98":63}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SKILL_DESC;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TEAM_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_USERNAME_DESC;","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_C_N_PYTHON;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_C_N_PYTHON_WITH_SPACES;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_EMPTY;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_PYTHON;","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_UNIT_TESTING;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_EMPTY;","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_GOOGLE_N_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_GOOGLE_N_YAHOO_SEPARATOR_WITH_SPACES;","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_HACKING_TEAM;","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILL_C;","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILL_PYTHON;","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILL_UNIT_TESTING;","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_HACKING_TEAM;","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"    private String separator \u003d \",\";","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTeams(VALID_TEAM_YAHOO).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_YAHOO + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_YAHOO + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_YAHOO + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_YAHOO + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"B1LLP4RK"},"content":"        // multiple addresses - last github username accepted","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_AMY","lastModifiedDate":"2022-03-01"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"            + USERNAME_DESC_BOB + TEAM_DESC_YAHOO + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"        // multiple teams - last team accepted","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":88,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_GOOGLE + TEAM_DESC_YAHOO + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"B1LLP4RK"},"content":"        // multiple skills - last skill accepted","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_YAHOO + SKILL_DESC_C + SKILL_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"B1LLP4RK"},"content":"        // space in team names","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPersonWithTeamWithSpace \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(expectedPerson).withTeams(VALID_TEAM_HACKING_TEAM).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_HACKING_TEAM + SKILL_DESC_PYTHON, new AddCommand(expectedPersonWithTeamWithSpace));","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"B1LLP4RK"},"content":"        // space in skill names","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPersonWithSkillWithSpace \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(expectedPerson).withSkillSet(VALID_SKILL_UNIT_TESTING).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_YAHOO + SKILL_DESC_UNIT_TESTING, new AddCommand(expectedPersonWithSkillWithSpace));","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"B1LLP4RK"},"content":"        //multiple teams separated by comma","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPersonWithManyTeams \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_GOOGLE_N_YAHOO + SKILL_DESC_PYTHON, new AddCommand(expectedPersonWithManyTeams));","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"B1LLP4RK"},"content":"        //multiple skills separated by comma","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPersonWithManySkills \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(expectedPerson).withSkillSet(VALID_SKILL_C, VALID_SKILL_PYTHON).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_YAHOO + SKILL_DESC_C_N_PYTHON, new AddCommand(expectedPersonWithManySkills));","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"B1LLP4RK"},"content":"        // zero teams","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPersonWithNoTeams \u003d new PersonBuilder(AMY).withTeams().build();","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"B1LLP4RK"},"content":"        //when the team prefix is not present in command","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"tzhan98"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"tzhan98"},"content":"                + USERNAME_DESC_AMY + SKILL_DESC_C,","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"B1LLP4RK"},"content":"            new AddCommand(expectedPersonWithNoTeams));","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"B1LLP4RK"},"content":"        //when the team prefix is present but the values are empty","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"B1LLP4RK"},"content":"                + USERNAME_DESC_AMY + TEAM_DESC_EMPTY + SKILL_DESC_C,","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"B1LLP4RK"},"content":"            new AddCommand(expectedPersonWithNoTeams));","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"B1LLP4RK"},"content":"        // zero skills","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPersonWithNoSkills \u003d new PersonBuilder(AMY).withSkillSet().build();","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"B1LLP4RK"},"content":"        // when the skill prefix is not present in command","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"B1LLP4RK"},"content":"                + USERNAME_DESC_AMY + TEAM_DESC_YAHOO,","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"B1LLP4RK"},"content":"            new AddCommand(expectedPersonWithNoSkills));","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"B1LLP4RK"},"content":"        //when the skill prefix is present but the values are empty","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"B1LLP4RK"},"content":"                + USERNAME_DESC_AMY + TEAM_DESC_YAHOO + SKILL_DESC_EMPTY,","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"B1LLP4RK"},"content":"            new AddCommand(expectedPersonWithNoSkills));","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + USERNAME_DESC_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_USERNAME_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_USERNAME_BOB,","lastModifiedDate":"2022-03-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":177,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_GOOGLE_N_YAHOO, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":181,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_GOOGLE_N_YAHOO, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":185,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_GOOGLE_N_YAHOO, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_USERNAME_DESC","lastModifiedDate":"2022-03-01"},{"lineNumber":189,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_GOOGLE_N_YAHOO, GithubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"B1LLP4RK"},"content":"        // invalid team","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":193,"author":{"gitId":"B1LLP4RK"},"content":"            + INVALID_TEAM_DESC, Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":195,"author":{"gitId":"B1LLP4RK"},"content":"        // invalid skill","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + USERNAME_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"B1LLP4RK"},"content":"            + TEAM_DESC_GOOGLE_N_YAHOO + INVALID_SKILL_DESC, Skill.NAME_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_USERNAME_DESC,","lastModifiedDate":"2022-03-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":205,"author":{"gitId":"B1LLP4RK"},"content":"                + USERNAME_DESC_BOB + TEAM_DESC_GOOGLE + TEAM_DESC_YAHOO,","lastModifiedDate":"2022-04-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":209,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":210,"author":{"gitId":"B1LLP4RK"},"content":"    public void parse_separatorWithWhitespaces_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":211,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPersonWithTeams \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":212,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":213,"author":{"gitId":"B1LLP4RK"},"content":"        //valid separator with spaces for teams","lastModifiedDate":"2022-04-07"},{"lineNumber":214,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":215,"author":{"gitId":"B1LLP4RK"},"content":"                + USERNAME_DESC_BOB + TEAM_DESC_GOOGLE_N_YAHOO_SEPARATOR_WITH_SPACES + SKILL_DESC_PYTHON,","lastModifiedDate":"2022-04-07"},{"lineNumber":216,"author":{"gitId":"B1LLP4RK"},"content":"            new AddCommand(expectedPersonWithTeams));","lastModifiedDate":"2022-04-07"},{"lineNumber":217,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":218,"author":{"gitId":"B1LLP4RK"},"content":"        //valid separator with spaces for skills","lastModifiedDate":"2022-04-07"},{"lineNumber":219,"author":{"gitId":"B1LLP4RK"},"content":"        Person expectedPersonWithSkills \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":220,"author":{"gitId":"B1LLP4RK"},"content":"            new PersonBuilder(BOB).withSkillSet(VALID_SKILL_C, VALID_SKILL_PYTHON).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":221,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":222,"author":{"gitId":"B1LLP4RK"},"content":"                + USERNAME_DESC_BOB + TEAM_DESC_GOOGLE_N_YAHOO + SKILL_DESC_C_N_PYTHON_WITH_SPACES,","lastModifiedDate":"2022-04-07"},{"lineNumber":223,"author":{"gitId":"B1LLP4RK"},"content":"            new AddCommand(expectedPersonWithSkills));","lastModifiedDate":"2022-04-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":225,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tzhan98":4,"B1LLP4RK":106,"-":98,"Jiaaa-yang":18}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.MakeTeamCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseCommand_editResetMode() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" -r \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor, true), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseCommand_editDefaultMode() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor, false), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \"\") instanceof HelpCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill skill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"Jiaaa-yang"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"        skillSet.add(skill);","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonContainsSkillPredicate predicate \u003d new PersonContainsSkillPredicate(skillSet);","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(skill);","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"        SortCommand expectedCommand \u003d new SortCommand(predicate, comparator);","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedCommand, parser.parseCommand(SortCommand.COMMAND_WORD + \" C\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseCommand_makeTeamCommandAdd() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand command \u003d (MakeTeamCommand) parser.parseCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"                MakeTeamCommand.COMMAND_WORD_ADD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD), command);","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseCommand_makeTeamCommandRemove() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        MakeTeamCommand command \u003d (MakeTeamCommand) parser.parseCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"                MakeTeamCommand.COMMAND_WORD_REMOVE + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.REMOVE), command);","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseCommand_show() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(parser.parseCommand(ShowCommand.COMMAND_WORD) instanceof ShowCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(parser.parseCommand(ShowCommand.COMMAND_WORD + \" 3\") instanceof ShowCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"alexteo98"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"alexteo98"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"alexteo98"},"content":"        assertEquals(parser.parseCommand(UndoCommand.COMMAND_WORD), new UndoCommand());","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"alexteo98"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\") instanceof UndoCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"alexteo98"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"alexteo98"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"alexteo98"},"content":"        assertEquals(parser.parseCommand(RedoCommand.COMMAND_WORD), new RedoCommand());","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"alexteo98"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"alexteo98":16,"tzhan98":2,"B1LLP4RK":8,"-":104,"Jiaaa-yang":35}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDIT_OPTION_R;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EDIT_OPTION_DESC;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TEAM_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_USERNAME_DESC;","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SKILL_DESC_C_N_PYTHON;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_GOOGLE_N_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILL_C;","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILL_PYTHON;","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"import java.util.List;","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String TEAM_EMPTY \u003d \" \" + PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"B1LLP4RK"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"B1LLP4RK"},"content":"        // no field specified for single edit","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"B1LLP4RK"},"content":"        //no field specified for multiple edits","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1 2 3\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"B1LLP4RK"},"content":"        // negative index. \u0027-\u0027, the dashed used for minus is a prefix for options for edit command.","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"B1LLP4RK"},"content":"        // so below is equivalent to no preamble","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"        // second index being negative, equivalent to using an undefined option","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"3 -5\",","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"B1LLP4RK"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_OPTIONS));","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"        // both indices being negative, equivalent to no preamble and using two undefined options","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"-1 -2\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"B1LLP4RK"},"content":"    public void parse_singleEditInvalidValue_failure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, \"1\" + INVALID_USERNAME_DESC,","lastModifiedDate":"2022-03-01"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"            GithubUsername.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TEAM_DESC, Team.MESSAGE_CONSTRAINTS); // invalid team","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"            parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_USERNAME_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"B1LLP4RK"},"content":"    public void parse_multipleEditsInvalidValue_failure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1 2\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1 2\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1 2\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1 2\" + INVALID_USERNAME_DESC,","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"B1LLP4RK"},"content":"            GithubUsername.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1 2\" + INVALID_TEAM_DESC, Team.MESSAGE_CONSTRAINTS); // invalid team","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"B1LLP4RK"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1 2\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"B1LLP4RK"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"B1LLP4RK"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"1 2\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"B1LLP4RK"},"content":"            parser, \"1 2\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_USERNAME_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"B1LLP4RK"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"B1LLP4RK"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"B1LLP4RK"},"content":"            + EMAIL_DESC_AMY + USERNAME_DESC_AMY + NAME_DESC_AMY + TEAM_DESC_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"Jiaaa-yang"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withGithubUsername(VALID_USERNAME_AMY)","lastModifiedDate":"2022-03-01"},{"lineNumber":154,"author":{"gitId":"B1LLP4RK"},"content":"            .withTeams(VALID_TEAM_YAHOO).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"B1LLP4RK"},"content":"    public void parse_multipleEditsAcceptOnlyTeamsNSkills_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"B1LLP4RK"},"content":"        //edit name","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"B1LLP4RK"},"content":"        //edit phone","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"B1LLP4RK"},"content":"        //edit email","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"B1LLP4RK"},"content":"        //edit github","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"B1LLP4RK"},"content":"        //edit teams","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"B1LLP4RK"},"content":"        //edit skills","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"B1LLP4RK"},"content":"    } // this have to move to editcommandtest","lastModifiedDate":"2022-04-07"},{"lineNumber":169,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":170,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":171,"author":{"gitId":"B1LLP4RK"},"content":"    public void parse_resetMode_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"B1LLP4RK"},"content":"        //single edit for team","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor changeTeamDescriptor \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":174,"author":{"gitId":"B1LLP4RK"},"content":"            new EditPersonDescriptorBuilder().withTeams(VALID_TEAM_YAHOO, VALID_TEAM_GOOGLE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":175,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedResetTeamChangeCommand \u003d new EditCommand(INDEX_FIRST_PERSON, changeTeamDescriptor, true);","lastModifiedDate":"2022-04-07"},{"lineNumber":176,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + EDIT_OPTION_R + TEAM_DESC_GOOGLE_N_YAHOO,","lastModifiedDate":"2022-04-07"},{"lineNumber":177,"author":{"gitId":"B1LLP4RK"},"content":"            expectedResetTeamChangeCommand);","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":179,"author":{"gitId":"B1LLP4RK"},"content":"        //single edit for skills","lastModifiedDate":"2022-04-07"},{"lineNumber":180,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor changeSkillDescriptor \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":181,"author":{"gitId":"B1LLP4RK"},"content":"            new EditPersonDescriptorBuilder().withSkillSet(VALID_SKILL_C, VALID_SKILL_PYTHON).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":182,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedResetSkillChangeCommand \u003d new EditCommand(INDEX_FIRST_PERSON, changeSkillDescriptor, true);","lastModifiedDate":"2022-04-07"},{"lineNumber":183,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + EDIT_OPTION_R + SKILL_DESC_C_N_PYTHON,","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"B1LLP4RK"},"content":"            expectedResetSkillChangeCommand);","lastModifiedDate":"2022-04-07"},{"lineNumber":185,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":186,"author":{"gitId":"B1LLP4RK"},"content":"        //multiple edits for team","lastModifiedDate":"2022-04-07"},{"lineNumber":187,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cIndex\u003e targetIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-07"},{"lineNumber":188,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":189,"author":{"gitId":"B1LLP4RK"},"content":"        targetIndices.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedMultipleResetTeamChangeCommand \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":191,"author":{"gitId":"B1LLP4RK"},"content":"            new EditCommand(targetIndices, changeTeamDescriptor, true);","lastModifiedDate":"2022-04-07"},{"lineNumber":192,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-04-07"},{"lineNumber":193,"author":{"gitId":"B1LLP4RK"},"content":"            INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_SECOND_PERSON.getOneBased() + EDIT_OPTION_R","lastModifiedDate":"2022-04-07"},{"lineNumber":194,"author":{"gitId":"B1LLP4RK"},"content":"                + TEAM_DESC_GOOGLE_N_YAHOO, expectedMultipleResetTeamChangeCommand);","lastModifiedDate":"2022-04-07"},{"lineNumber":195,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":196,"author":{"gitId":"B1LLP4RK"},"content":"        //multiple edits for teams","lastModifiedDate":"2022-04-07"},{"lineNumber":197,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedMultipleResetSkillChangeCommand \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":198,"author":{"gitId":"B1LLP4RK"},"content":"            new EditCommand(targetIndices, changeSkillDescriptor, true);","lastModifiedDate":"2022-04-07"},{"lineNumber":199,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-04-07"},{"lineNumber":200,"author":{"gitId":"B1LLP4RK"},"content":"            INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_SECOND_PERSON.getOneBased() + EDIT_OPTION_R","lastModifiedDate":"2022-04-07"},{"lineNumber":201,"author":{"gitId":"B1LLP4RK"},"content":"                + SKILL_DESC_C_N_PYTHON, expectedMultipleResetSkillChangeCommand);","lastModifiedDate":"2022-04-07"},{"lineNumber":202,"author":{"gitId":"B1LLP4RK"},"content":"        //parse default mode is not tested separately as all success cases that are not reset mode are default mode","lastModifiedDate":"2022-04-07"},{"lineNumber":203,"author":{"gitId":"B1LLP4RK"},"content":"        // and they are tested in methods such as {@code parse_allFieldsSpecified_success}","lastModifiedDate":"2022-04-07"},{"lineNumber":204,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":205,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":206,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":207,"author":{"gitId":"B1LLP4RK"},"content":"    public void parse_invalidOption_failure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":208,"author":{"gitId":"B1LLP4RK"},"content":"        //multiple option prefix failure","lastModifiedDate":"2022-04-07"},{"lineNumber":209,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + EDIT_OPTION_R + EDIT_OPTION_R + NAME_DESC_AMY,","lastModifiedDate":"2022-04-07"},{"lineNumber":210,"author":{"gitId":"B1LLP4RK"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_OPTIONS));","lastModifiedDate":"2022-04-07"},{"lineNumber":211,"author":{"gitId":"B1LLP4RK"},"content":"        // unrecognized option failure","lastModifiedDate":"2022-04-07"},{"lineNumber":212,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + INVALID_EDIT_OPTION_DESC + NAME_DESC_AMY,","lastModifiedDate":"2022-04-07"},{"lineNumber":213,"author":{"gitId":"B1LLP4RK"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE_OPTIONS));","lastModifiedDate":"2022-04-07"},{"lineNumber":214,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":215,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"Jiaaa-yang"},"content":"        userInput \u003d targetIndex.getOneBased() + USERNAME_DESC_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":251,"author":{"gitId":"Jiaaa-yang"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGithubUsername(VALID_USERNAME_AMY).build();","lastModifiedDate":"2022-03-01"},{"lineNumber":252,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"B1LLP4RK"},"content":"        // teams","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"B1LLP4RK"},"content":"        userInput \u003d targetIndex.getOneBased() + TEAM_DESC_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"B1LLP4RK"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTeams(VALID_TEAM_YAHOO).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":258,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":265,"author":{"gitId":"Jiaaa-yang"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + USERNAME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-01"},{"lineNumber":266,"author":{"gitId":"B1LLP4RK"},"content":"            + PHONE_DESC_AMY + USERNAME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-30"},{"lineNumber":267,"author":{"gitId":"B1LLP4RK"},"content":"            + PHONE_DESC_BOB + USERNAME_DESC_BOB + EMAIL_DESC_BOB + TEAM_DESC_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"Jiaaa-yang"},"content":"            .withEmail(VALID_EMAIL_BOB).withGithubUsername(VALID_USERNAME_BOB)","lastModifiedDate":"2022-03-01"},{"lineNumber":271,"author":{"gitId":"B1LLP4RK"},"content":"            .withTeams(VALID_TEAM_GOOGLE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":272,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":283,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":287,"author":{"gitId":"Jiaaa-yang"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + USERNAME_DESC_BOB","lastModifiedDate":"2022-03-01"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":290,"author":{"gitId":"Jiaaa-yang"},"content":"            .withGithubUsername(VALID_USERNAME_BOB).build();","lastModifiedDate":"2022-03-01"},{"lineNumber":291,"author":{"gitId":"B1LLP4RK"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":296,"author":{"gitId":"B1LLP4RK"},"content":"    public void parse_resetTeams_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":298,"author":{"gitId":"B1LLP4RK"},"content":"        String userInput \u003d targetIndex.getOneBased() + TEAM_EMPTY;","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":300,"author":{"gitId":"B1LLP4RK"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTeams().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"B1LLP4RK"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"B1LLP4RK":130,"-":158,"Jiaaa-yang":17}},{"path":"src/test/java/seedu/address/logic/parser/FilterSkillCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import seedu.address.logic.commands.FilterSkillCommand;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"class FilterSkillCommandParserTest {","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    private FilterSkillCommandParser parser \u003d new FilterSkillCommandParser();","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterSkillCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    public void parse_validArgs_returnsFilterSkillCommand() {","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(new Skill(\"C\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        FilterSkillCommand expectedFilterSkillCommand \u003d","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"                new FilterSkillCommand(new PersonContainsSkillPredicate(skillSet));","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        assertParseSuccess(parser, \"C\", expectedFilterSkillCommand);","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"alexteo98":33,"B1LLP4RK":1}},{"path":"src/test/java/seedu/address/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    public void parse_validArgs() throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        //Exact same input","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        assertEquals(new HelpCommand(\"add\"), parser.parse(\"add\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        //Input with spacing","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        assertEquals(new HelpCommand(\"delete\"), parser.parse(\" delete \"));","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        //Input with uppercase characters","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        assertEquals(new HelpCommand(\"sort\"), parser.parse(\"SoRT\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    public void parse_invalidArgs() {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e parser.parse(\"NotInsideHelp\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e parser.parse(\"***\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"tzhan98":34}},{"path":"src/test/java/seedu/address/logic/parser/MakeTeamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.MakeTeamCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"class MakeTeamCommandParserTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    private final MakeTeamCommandParser addCommandParser \u003d new MakeTeamCommandParser(MakeTeamCommand.TeamAction.ADD);","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    private final MakeTeamCommandParser removeCommandParser \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"            new MakeTeamCommandParser(MakeTeamCommand.TeamAction.REMOVE);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_makeTeamCommandAddValidArgs_success() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        String validIndex \u003d \"1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(addCommandParser, validIndex,","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"                new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.ADD));","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_makeTeamCommandRemoveValidArgs_success() throws Exception {","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        String validIndex \u003d \"1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(removeCommandParser, validIndex,","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"                new MakeTeamCommand(INDEX_FIRST_PERSON, MakeTeamCommand.TeamAction.REMOVE));","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_makeTeamCommandInvalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        String emptyIndex \u003d \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        String invalidIndex \u003d \"a\";","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(addCommandParser, emptyIndex,","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MakeTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(removeCommandParser, invalidIndex,","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MakeTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Jiaaa-yang":41}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String INVALID_USERNAME \u003d \"rach_el\";","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String INVALID_TEAM \u003d \"#friend\";","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    private static final String INVALID_SKILL_PROFICIENCY_TYPE \u003d \"good\";","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    private static final String INVALID_SKILL_PROFICIENCY_RANGE \u003d \"500\";","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    private static final String INVALID_SKILL_PROFICIENCY_RANGE_OVERFLOW \u003d \"999999999999999999999999999999999999999999\";","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String VALID_USERNAME \u003d \"rachel-walker\";","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String VALID_TEAM_1 \u003d \"friend\";","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String VALID_TEAM_2 \u003d \"neighbour\";","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"    private static final String VALID_SKILL \u003d \"Python\";","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    private static final String VALID_SKILL_PREFIX \u003d \"_\";","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"    private static final String VALID_SKILL_PROFICIENCY \u003d \"5\";","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseGithubUsername_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":114,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGithubUsername((String) null));","lastModifiedDate":"2022-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseGithubUsername_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGithubUsername(INVALID_USERNAME));","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseGithubUsername_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-03-01"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername expectedGithubUsername \u003d new GithubUsername(VALID_USERNAME);","lastModifiedDate":"2022-03-01"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedGithubUsername, ParserUtil.parseGithubUsername(VALID_USERNAME));","lastModifiedDate":"2022-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parseGithubUsername_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-03-01"},{"lineNumber":130,"author":{"gitId":"Jiaaa-yang"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_USERNAME + WHITESPACE;","lastModifiedDate":"2022-03-01"},{"lineNumber":131,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername expectedGithubUsername \u003d new GithubUsername(VALID_USERNAME);","lastModifiedDate":"2022-03-01"},{"lineNumber":132,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(expectedGithubUsername, ParserUtil.parseGithubUsername(addressWithWhitespace));","lastModifiedDate":"2022-03-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeam_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTeam(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeam_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTeam(INVALID_TEAM));","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeam_validValueWithoutWhitespace_returnsTeam() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"B1LLP4RK"},"content":"        Team expectedTeam \u003d new Team(VALID_TEAM_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(expectedTeam, ParserUtil.parseTeam(VALID_TEAM_1));","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeam_validValueWithWhitespace_returnsTrimmedTeam() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"B1LLP4RK"},"content":"        String teamWithWhitespace \u003d WHITESPACE + VALID_TEAM_1 + WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"B1LLP4RK"},"content":"        Team expectedTeam \u003d new Team(VALID_TEAM_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(expectedTeam, ParserUtil.parseTeam(teamWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeams_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTeams(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeams_collectionWithInvalidTeams_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTeams(Arrays.asList(VALID_TEAM_1, INVALID_TEAM)));","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeams_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"B1LLP4RK"},"content":"        assertTrue(ParserUtil.parseTeams(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"B1LLP4RK"},"content":"    public void parseTeams_collectionWithValidTeams_returnsTeamSet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e actualTeamSet \u003d ParserUtil.parseTeams(Arrays.asList(VALID_TEAM_1, VALID_TEAM_2));","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e expectedTeamSet \u003d new HashSet\u003cTeam\u003e(Arrays.asList(new Team(VALID_TEAM_1), new Team(VALID_TEAM_2)));","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"B1LLP4RK"},"content":"        assertEquals(expectedTeamSet, actualTeamSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"tzhan98"},"content":"    public void parseSkill_throwsParseException() throws Exception {","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"tzhan98"},"content":"        String invalidProficiencyRange \u003d VALID_SKILL + VALID_SKILL_PREFIX + INVALID_SKILL_PROFICIENCY_RANGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"alexteo98"},"content":"        String invalidProficiencyRangeOverflow \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":208,"author":{"gitId":"alexteo98"},"content":"                VALID_SKILL + VALID_SKILL_PREFIX + INVALID_SKILL_PROFICIENCY_RANGE_OVERFLOW;","lastModifiedDate":"2022-04-09"},{"lineNumber":209,"author":{"gitId":"tzhan98"},"content":"        String invalidProficiencyType \u003d VALID_SKILL + VALID_SKILL_PREFIX + INVALID_SKILL_PROFICIENCY_TYPE;","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"tzhan98"},"content":"        String invalidSkillInput1 \u003d VALID_SKILL + VALID_SKILL_PREFIX + VALID_SKILL_PROFICIENCY","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"tzhan98"},"content":"                + VALID_SKILL_PREFIX + VALID_SKILL;","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"tzhan98"},"content":"        String invalidSkillInput2 \u003d VALID_SKILL + VALID_SKILL_PREFIX;","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"tzhan98"},"content":"        String invalidSkillInput3 \u003d VALID_SKILL;","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidProficiencyRange));","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"alexteo98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidProficiencyRangeOverflow));","lastModifiedDate":"2022-04-09"},{"lineNumber":217,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidProficiencyType));","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidSkillInput1));","lastModifiedDate":"2022-03-26"},{"lineNumber":219,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidSkillInput2));","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"tzhan98"},"content":"        assertThrows(ParseException.class, ()-\u003e ParserUtil.parseSkill(invalidSkillInput3));","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"alexteo98":4,"tzhan98":18,"B1LLP4RK":25,"-":161,"Jiaaa-yang":14}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.SortCommand.MESSAGE_INVALID_SKILL;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonBySkillProficiencyComparator;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.PersonContainsSkillPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"class SortCommandParserTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_invalidSkillInput_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        // Multiple skill name","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"C\u0026Python\", String.format(MESSAGE_INVALID_SKILL, Skill.NAME_CONSTRAINTS));","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        // Non-alphanumeric skill name","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"        assertParseFailure(parser, \"C;_90\", String.format(MESSAGE_INVALID_SKILL, Skill.NAME_CONSTRAINTS));","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"    public void parse_validArgs_returnsSortCommand() {","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill skill \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"        skillSet.add(skill);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(new PersonContainsSkillPredicate(skillSet),","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"            new PersonBySkillProficiencyComparator(skill));","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        assertParseSuccess(parser, \"Java\", expectedSortCommand);","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"alexteo98":5,"B1LLP4RK":3,"Jiaaa-yang":38}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).withTeams(","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"B1LLP4RK"},"content":"                VALID_TEAM_GOOGLE)","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).withTeams(","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"                VALID_TEAM_GOOGLE)","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"B1LLP4RK":5,"-":98,"Jiaaa-yang":1}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getDisplayPersonList().remove(0));","lastModifiedDate":"2022-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"    public void undo_addDeleteUndo_personAdded() {","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"        modelManager.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"        modelManager.deletePerson(ALICE);","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"        modelManager.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"        modelManager.undoAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"    public void undo_changesNotCommitted_doesNothing() {","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"        assertFalse(modelManager.canUndoAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"alexteo98"},"content":"    public void undo_noChangesToUndo_doesNothing() {","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"alexteo98"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(modelManager.getAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"alexteo98"},"content":"        modelManager.undoAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"alexteo98"},"content":"        assertEquals(versionedAddressBook, modelManager.getAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"    public void redo_changesRedone_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"        modelManager.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"        modelManager.undoAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"        modelManager.redoAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"    public void redo_noChangesToRedo_doesNothing() {","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(modelManager.getAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"        modelManager.redoAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"alexteo98"},"content":"        assertEquals(versionedAddressBook, modelManager.getAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"alexteo98"},"content":"    public void commitAddressBook_changesCommitted_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"alexteo98"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"alexteo98"},"content":"        modelManager.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"alexteo98"},"content":"        assertTrue(modelManager.canUndoAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"alexteo98"},"content":"    public void canUndo_hasCommandsToUndo_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"alexteo98"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"alexteo98"},"content":"        modelManager.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"alexteo98"},"content":"        assertTrue(modelManager.canUndoAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"alexteo98"},"content":"    public void canUndo_noCommandsToUndo_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"alexteo98"},"content":"        assertFalse(modelManager.canUndoAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"alexteo98"},"content":"    public void canRedo_hasCommandsToRedo_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"alexteo98"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"alexteo98"},"content":"        modelManager.commitAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"alexteo98"},"content":"        modelManager.undoAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"alexteo98"},"content":"        assertTrue(modelManager.canRedoAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"alexteo98"},"content":"    public void canRedo_noCommandsToRedo_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"alexteo98"},"content":"        assertFalse(modelManager.canRedoAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":200,"author":{"gitId":"Jiaaa-yang"},"content":"        modelManager.updateDisplayPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":204,"author":{"gitId":"Jiaaa-yang"},"content":"        modelManager.updateDisplayPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"alexteo98":77,"-":131,"Jiaaa-yang":3}},{"path":"src/test/java/seedu/address/model/VersionedAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalVersionedAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"class VersionedAddressBookTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    private VersionedAddressBook versionedAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    private VersionedAddressBook typicalVersionedAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    void setup() {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook \u003d getTypicalVersionedAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"    void commit_purgeUndoneHistory_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        // initial state -\u003e add AMY -\u003e add BOB(undo)","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        //                       |---\u003e add IDA","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        // add BOB removed from history","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        // initial state -\u003e add AMY -\u003e add IDA","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(BOB);","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(IDA);","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        versionedAddressBook \u003d new VersionedAddressBook(getTypicalVersionedAddressBook());","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        versionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"        versionedAddressBook.addPerson(IDA);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        assertEquals(typicalVersionedAddressBook, versionedAddressBook);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"    void undo_noCommandInHistory_doesNothing() {","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        ObservableList personsList \u003d typicalVersionedAddressBook.getPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        assertEquals(personsList, typicalVersionedAddressBook.getPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.redo();","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"        personsList \u003d typicalVersionedAddressBook.getPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"        assertEquals(personsList, typicalVersionedAddressBook.getPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"    void undo_hasCommandInHistory_personsRestored() {","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"        ObservableList personsList \u003d typicalVersionedAddressBook.getPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"        assertEquals(personsList, typicalVersionedAddressBook.getPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"    void redo_hasCommandInHistory_personsRestored() {","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"        ObservableList personsList \u003d typicalVersionedAddressBook.getPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.redo();","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"        assertEquals(personsList, typicalVersionedAddressBook.getPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"    void redo_noCommandInHistory_doesNothing() {","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"        ObservableList personsList \u003d typicalVersionedAddressBook.getPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.redo();","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"        assertEquals(personsList, typicalVersionedAddressBook.getPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.redo();","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        personsList \u003d typicalVersionedAddressBook.getPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"        assertEquals(personsList, typicalVersionedAddressBook.getPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"alexteo98"},"content":"    void canUndo_noMoreCommandHistory_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"alexteo98"},"content":"        // new VersionedAddressBook -\u003e no history","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"        assertFalse(new VersionedAddressBook().canUndo());","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"        assertFalse(typicalVersionedAddressBook.canUndo());","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"        // No more history to undo -\u003e cannot undo","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"        assertFalse(typicalVersionedAddressBook.canUndo());","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"alexteo98"},"content":"    void canUndo_hasCommandHistory_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(BOB);","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"alexteo98"},"content":"        // Two Commands in history -\u003e can undo","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"alexteo98"},"content":"        assertTrue(typicalVersionedAddressBook.canUndo());","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"alexteo98"},"content":"        // One Commands in history -\u003e can undo","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"alexteo98"},"content":"        assertTrue(typicalVersionedAddressBook.canUndo());","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"alexteo98"},"content":"    void canRedo_noMoreCommandHistory_returnsFalse() {","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"alexteo98"},"content":"        // new VersionedAddressBook -\u003e no history","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"alexteo98"},"content":"        assertFalse(typicalVersionedAddressBook.canRedo());","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.redo();","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"alexteo98"},"content":"        // One history undone and redone -\u003e no history to redo","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"alexteo98"},"content":"        assertFalse(typicalVersionedAddressBook.canRedo());","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"alexteo98"},"content":"    void canRedo_hasCommandHistory_returnsTrue() {","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(AMY);","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.addPerson(BOB);","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.undo();","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"alexteo98"},"content":"        // 2 Commands in history -\u003e can redo","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"alexteo98"},"content":"        assertTrue(typicalVersionedAddressBook.canRedo());","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"alexteo98"},"content":"        typicalVersionedAddressBook.redo();","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"alexteo98"},"content":"        // 1 Command in history -\u003e can redo","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"alexteo98"},"content":"        assertTrue(typicalVersionedAddressBook.canRedo());","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"alexteo98":167}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        //email with 150 characters.","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"        String longEmail \u003d \"Tom-Alex_Doe_lee_Dr_steven_yeoh_Amos1234PeterJack_1190PeterJack_1190\"","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"                + \"PeterJack_1190PeterJack_1190PeterJack_1190PeterJack_1190PeterJack_1190@example.com\";","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"        assertEquals(150, longEmail.length());","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Email.isValidEmail(\"a\")); // lesser than min number of characters","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Email.isValidEmail(longEmail + \"a\")); //151 characters (more than max number of characters)","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Email.isValidEmail(longEmail)); //150 characters (max number of characters)","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tzhan98":11,"-":68}},{"path":"src/test/java/seedu/address/model/person/GithubUsernameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"public class GithubUsernameTest {","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GithubUsername(null));","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"    public void constructor_invalidUsername_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        String invalidUsername \u003d \"\";","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GithubUsername(invalidUsername));","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"    public void isValidGithubUsername() {","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        String validLongName \u003d \"Tom-Alex-Doe-lee-Dr-steven-yeoh-Amos134\";","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"        String invalidLongName \u003d \"Tom-Alex-Doe-lee-Dr-steven-yeoh-Amos1234\";","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        // null username","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"        assertThrows(NullPointerException.class, () -\u003e GithubUsername.isValidUsername(null));","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        // invalid usernames","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(GithubUsername.isValidUsername(\"\")); // empty string","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(GithubUsername.isValidUsername(\" \")); // spaces only","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(GithubUsername.isValidUsername(\"alex_doe\")); // contains illegal character","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        assertFalse(GithubUsername.isValidUsername(\"-alex_doe\")); //starts with hyphen","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        assertFalse(GithubUsername.isValidUsername(\"alex_doe-\")); //ends with hyphen","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        assertFalse(GithubUsername.isValidUsername(\"alex_--doe\")); //has consecutive hyphens","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        assertFalse(GithubUsername.isValidUsername(\"alex--doe\")); //has consecutive hyphens","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        assertFalse(GithubUsername.isValidUsername(invalidLongName)); //40 character name","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        // valid usernames","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(GithubUsername.isValidUsername(\"johndoe\")); // characters only","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        assertTrue(GithubUsername.isValidUsername(\"amy-bal-ler-123\")); // alphanumeric with hyphen","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(GithubUsername.isValidUsername(\"12345\")); // only numbers","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        assertTrue(GithubUsername.isValidUsername(validLongName)); //39 character name","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"    @Test void isValidUserNameLength() {","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        String validLongName \u003d \"Tom-Alex-Doe-lee-Dr-steven-yeoh-Amos134\";","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        String invalidLongName \u003d \"Tom-Alex-Doe-lee-Dr-steven-yeoh-Amos1234\";","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        assertEquals(39, validLongName.length());","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        assertEquals(40, invalidLongName.length());","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        assertTrue(GithubUsername.isValidUsernameLength(validLongName)); //39 length username","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        assertFalse(GithubUsername.isValidUsernameLength(invalidLongName)); //40 length username","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"    public void getGithubHandle() {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername firstUsername \u003d new GithubUsername(\"johndoe\");","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(firstUsername.getGithubHandle(), \"@johndoe\");","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername secondUsername \u003d new GithubUsername(\"amy-123\");","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(secondUsername.getGithubHandle(), \"@amy-123\");","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"    public void getGithubProfileLink() {","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername firstUsername \u003d new GithubUsername(\"johndoe\");","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(firstUsername.getGithubProfileLink(), \"https://github.com/johndoe\");","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"Jiaaa-yang"},"content":"        GithubUsername secondUsername \u003d new GithubUsername(\"amy-123\");","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(secondUsername.getGithubProfileLink(), \"https://github.com/amy-123\");","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"alexteo98":1,"tzhan98":18,"Jiaaa-yang":54}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"                .withEmail(\"alice@email.com\").withGithubUsername(\"alice-123\").build()));","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":74,"Jiaaa-yang":1}},{"path":"src/test/java/seedu/address/model/person/PersonBySkillProficiencyComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiaaa-yang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"Jiaaa-yang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"class PersonBySkillProficiencyComparatorTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"Jiaaa-yang"},"content":"    public void equals() {","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill firstSkill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill secondSkill \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator firstComparator \u003d new PersonBySkillProficiencyComparator(firstSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator secondComparator \u003d new PersonBySkillProficiencyComparator(secondSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"Jiaaa-yang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(firstComparator.equals(firstComparator));","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator firstComparatorCopy \u003d new PersonBySkillProficiencyComparator(firstSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"Jiaaa-yang"},"content":"        // same skill reference -\u003e return true","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(firstComparator.equals(firstComparatorCopy));","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill secondSkillCopy \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator secondComparatorCopy \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"                new PersonBySkillProficiencyComparator(secondSkillCopy);","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"Jiaaa-yang"},"content":"        // same skill name -\u003e returns true","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(secondComparator.equals(secondComparatorCopy));","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        // different skill -\u003e returns false","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"Jiaaa-yang"},"content":"        assertFalse(firstComparator.equals(secondComparator));","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"    public void compareTo_personsWithEqualSkillProficiency_returnsZero() {","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person1 \u003d new PersonBuilder().withSkillSet(\"C_50\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person2 \u003d new PersonBuilder().withSkillSet(\"C_50\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill comparedSkill \u003d new Skill(\"C\");","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(comparedSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        assertEquals(comparator.compare(person1, person2), 0);","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"    public void compareTo_firstPersonWithLowerProficiency_returnsNegative() {","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person1 \u003d new PersonBuilder().withSkillSet(\"Java_30\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person2 \u003d new PersonBuilder().withSkillSet(\"Java_60\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill comparedSkill \u003d new Skill(\"Java\");","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(comparedSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(comparator.compare(person1, person2) \u003c 0);","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"    @Test","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"    public void compareTo_secondPersonWithLowerProficiency_returnsPositive() {","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person1 \u003d new PersonBuilder().withSkillSet(\"Python_80\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        Person person2 \u003d new PersonBuilder().withSkillSet(\"Python_10\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"Jiaaa-yang"},"content":"        Skill comparedSkill \u003d new Skill(\"Python\");","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"Jiaaa-yang"},"content":"        PersonBySkillProficiencyComparator comparator \u003d new PersonBySkillProficiencyComparator(comparedSkill);","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"Jiaaa-yang"},"content":"        assertTrue(comparator.compare(person1, person2) \u003e 0);","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"B1LLP4RK":1,"Jiaaa-yang":67}},{"path":"src/test/java/seedu/address/model/person/PersonContainsSkillPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_C_1;","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_C_20;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_JAVA_40;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_JAVA_50;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_PYTHON_30;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"alexteo98"},"content":"class PersonContainsSkillPredicateTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    void testEquals() {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet1 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"        skillSet1.add(SKILL_JAVA_50);","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        skillSet1.add(SKILL_C_1);","lastModifiedDate":"2022-04-03"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet2 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"        skillSet2.add(SKILL_JAVA_40);","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        skillSet2.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet3 \u003d new SkillSet();","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"        skillSet3.add(SKILL_JAVA_40);","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"        skillSet3.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        skillSet3.add(SKILL_PYTHON_30);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate firstPredicate \u003d new PersonContainsSkillPredicate(skillSet1);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate secondPredicate \u003d new PersonContainsSkillPredicate(skillSet2);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate thirdPredicate \u003d new PersonContainsSkillPredicate(skillSet2);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate fourthPredicate \u003d new PersonContainsSkillPredicate(skillSet3);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"alexteo98"},"content":"        //same object -\u003e return true","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"alexteo98"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"        //same skillSet reference -\u003e returns true","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        assertTrue(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        //same skills in skillset with different proficiency -\u003e returns true","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"        //additional skill in one skillSet -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"        assertFalse(fourthPredicate.equals(thirdPredicate));","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"    void test_personContainsSomeSkills_returnFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetPythonC \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        skillSetPythonC.add(SKILL_PYTHON_30);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        skillSetPythonC.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsPythonCPredicate \u003d new PersonContainsSkillPredicate(skillSetPythonC);","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        assertFalse(personContainsPythonCPredicate.test(BENSON));","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"    void test_personContainsAllSkills_returnFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetPythonC \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        skillSetPythonC.add(SKILL_PYTHON_30);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"        skillSetPythonC.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsPythonCPredicate \u003d new PersonContainsSkillPredicate(skillSetPythonC);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        assertTrue(personContainsPythonCPredicate.test(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"    void test_personContainsSkill_returnTrue() {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetC \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"alexteo98"},"content":"        skillSetC.add(SKILL_C_20);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetPython \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"alexteo98"},"content":"        skillSetPython.add(SKILL_PYTHON_30);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsCPredicate \u003d new PersonContainsSkillPredicate(skillSetC);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsPythonPredicate \u003d new PersonContainsSkillPredicate(skillSetPython);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"alexteo98"},"content":"        assertTrue(personContainsCPredicate.test(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"alexteo98"},"content":"        assertTrue(personContainsPythonPredicate.test(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"alexteo98"},"content":"        assertTrue(personContainsPythonPredicate.test(BENSON));","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"alexteo98"},"content":"    void test_personDoesNotContainsSkill_returnFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSetJava \u003d new SkillSet();","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"alexteo98"},"content":"        skillSetJava.add(SKILL_JAVA_40);","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"alexteo98"},"content":"        PersonContainsSkillPredicate personContainsJavaPredicate \u003d new PersonContainsSkillPredicate(skillSetJava);","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"alexteo98"},"content":"        assertFalse(personContainsJavaPredicate.test(BENSON));","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"alexteo98"},"content":"        assertFalse(personContainsJavaPredicate.test(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alexteo98":101,"tzhan98":2}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTeams().remove(0));","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"B1LLP4RK"},"content":"                .withGithubUsername(VALID_USERNAME_BOB).withTeams(VALID_TEAM_GOOGLE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        //person have the same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"        Person personWithSamePhone \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        assertTrue(BOB.isSamePerson(personWithSamePhone));","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"        //person have the same github username, all other attributes different -\u003e returns true","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        Person personWithSameGitHub \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).build();","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        assertTrue(BOB.isSamePerson(personWithSameGitHub));","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"        //person have the same email, all other attributes different -\u003e returns true","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"        Person personWithSameEmail \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"        assertTrue(BOB.isSamePerson(personWithSameEmail));","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"    public void getDuplicateValue() {","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"        Person personWithSameEmail \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"        assertEquals(BOB.getDuplicateValue(personWithSameEmail), \"Email\");","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"        Person personWithSameGitHub \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"        assertEquals(BOB.getDuplicateValue(personWithSameGitHub), \"Github UserName\");","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"alexteo98"},"content":"        Person personWithSamePhone \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"alexteo98"},"content":"        assertEquals(BOB.getDuplicateValue(personWithSamePhone), \"Phone\");","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"alexteo98"},"content":"        assertEquals(ALICE.getDuplicateValue(BOB), \"Error no same duplicate values\");","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"        // different username -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"Jiaaa-yang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).build();","lastModifiedDate":"2022-03-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":115,"author":{"gitId":"Jiaaa-yang"},"content":"        // different isPotentialTeammate field -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"Jiaaa-yang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).isPotentialTeammate(true).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"B1LLP4RK"},"content":"        // different s -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"B1LLP4RK"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTeams(VALID_TEAM_GOOGLE).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"alexteo98":14,"tzhan98":20,"B1LLP4RK":5,"-":79,"Jiaaa-yang":5}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).withTeams(","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"B1LLP4RK"},"content":"                VALID_TEAM_GOOGLE)","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"B1LLP4RK"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withGithubUsername(VALID_USERNAME_BOB).withTeams(","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"B1LLP4RK"},"content":"                VALID_TEAM_GOOGLE)","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"B1LLP4RK":5,"-":166,"Jiaaa-yang":1}},{"path":"src/test/java/seedu/address/model/team/SkillSetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_BASH_70;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_C_1;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_C_20;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_JAVA_40;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_JAVA_50;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_LINUX_60;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.SKILL_PYTHON_30;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"import static seedu.address.testutil.TypicalSkills.getTypicalSkillSet;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"public class SkillSetTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"    private SkillSet skillSet1 \u003d getTypicalSkillSet();","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"    private Skill java100 \u003d new Skill(\"Java\", 100);","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    private Skill java90 \u003d new Skill(\"Java\", 90);","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"    private Skill python100 \u003d new Skill(\"python\", 100);","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    private Skill c20 \u003d new Skill(\"C\", 20);","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"    private Skill c1 \u003d new Skill(\"C\");","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    private SkillSet skillSet2 \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    private SkillSet skillSet3 \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"alexteo98"},"content":"        skillSet2.add(SKILL_PYTHON_30);","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        SkillSet copyOfSkillSet1 \u003d new SkillSet(skillSet1);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        assertFalse(skillSet3.equals(skillSet1));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"        assertTrue(copyOfSkillSet1.equals(skillSet1));","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        assertFalse(copyOfSkillSet1.equals(skillSet2));","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"    public void addSkill() {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        skillSet1.add(SKILL_BASH_70);","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        assertTrue(skillSet1.hasSkill(SKILL_BASH_70));","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"alexteo98"},"content":"        assertTrue(skillSet1.hasSkill(SKILL_JAVA_40));","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"alexteo98"},"content":"        assertFalse(skillSet1.hasSkill(SKILL_LINUX_60));","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"    public void addSkillSet() {","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        skillSet2.addAll(skillSet1);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"alexteo98"},"content":"        assertTrue(skillSet2.hasSkill(SKILL_JAVA_40));","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"alexteo98"},"content":"        assertTrue(skillSet2.hasSkill(SKILL_PYTHON_30));","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"alexteo98"},"content":"        assertTrue(skillSet2.hasSkill(SKILL_JAVA_50));","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"        assertFalse(skillSet2.hasSkill(SKILL_BASH_70));","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    public void getSkillProficiency() {","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"alexteo98"},"content":"        assertEquals(40, skillSet1.getSkillProficiency(SKILL_JAVA_50));","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"alexteo98"},"content":"        assertEquals(40, skillSet1.getSkillProficiency(SKILL_JAVA_40));","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"        assertEquals(20, skillSet1.getSkillProficiency(SKILL_C_1));","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"        assertEquals(0, skillSet1.getSkillProficiency(SKILL_BASH_70));","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"alexteo98"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"alexteo98"},"content":"    public void getSkill() {","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"alexteo98"},"content":"        assertEquals(SKILL_C_20, skillSet1.getSkill(new Skill(\"C\")));","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"        assertNull(skillSet1.getSkill(SKILL_BASH_70));","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"    public void removeDuplicates() {","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"        Set\u003cSkill\u003e duplicatedSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        duplicatedSet.add(java100);","lastModifiedDate":"2022-04-09"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"        duplicatedSet.add(c1);","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"        duplicatedSet.add(c20);","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        duplicatedSet.add(c1);","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        duplicatedSet.add(java90);","lastModifiedDate":"2022-04-09"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"        skillSet3.add(c20);","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"        skillSet3.add(java100);","lastModifiedDate":"2022-04-09"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        assertEquals(new SkillSet(duplicatedSet), skillSet3);","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"alexteo98":29,"tzhan98":56}},{"path":"src/test/java/seedu/address/model/team/SkillTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"public class SkillTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"    private Skill java100 \u003d new Skill(\"Java\", 100);","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"    private Skill copyOfJava100 \u003d new Skill(\"Java\", 100);","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"    private Skill java90 \u003d new Skill(\"Java\", 90);","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"    private Skill python100 \u003d new Skill(\"python\", 100);","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"    private Skill c1 \u003d new Skill(\"C\");","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Skill(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"    public void constructor_invalidSkillArgument_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"        String invalidSkillArgument \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Skill(invalidSkillArgument));","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Skill(invalidSkillArgument, 0));","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        //same skill proficiency and name -\u003e true","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        assertTrue(java100.equals(copyOfJava100));","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        //different skill proficiency -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.equals(java90));","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"tzhan98"},"content":"        //different skill name -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.equals(python100));","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        //different skill name and proficiency -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.equals(c1));","lastModifiedDate":"2022-04-03"},{"lineNumber":44,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"tzhan98"},"content":"    public void isSameSkill() {","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"tzhan98"},"content":"        //same skill name with same skill proficiency -\u003e true","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"tzhan98"},"content":"        assertTrue(java100.isSameSkill(copyOfJava100));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"tzhan98"},"content":"        //same skill name with different skill proficiency -\u003e true","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"tzhan98"},"content":"        assertTrue(java100.isSameSkill(java90));","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"tzhan98"},"content":"        //different skill name with different skill proficiency -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.isSameSkill(c1));","lastModifiedDate":"2022-04-03"},{"lineNumber":57,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"tzhan98"},"content":"        //different skill name with same skill level -\u003e false","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"tzhan98"},"content":"        assertFalse(java100.isSameSkill(python100));","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"tzhan98"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"tzhan98"},"content":"        assertEquals(java100.toString(), \"[Java, 100]\");","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"tzhan98"},"content":"        assertEquals(c1.toString(), \"[C, 1]\");","lastModifiedDate":"2022-04-03"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"    public void isValidSkillName() {","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"tzhan98"},"content":"        // null skill argument","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e Skill.isValidSkillName(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"tzhan98"},"content":"        //valid skill name","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillName(\"Java\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"tzhan98"},"content":"        //valid skill name (10 characters)","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillName(\"MakingSome\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"tzhan98"},"content":"        //valid special character: +","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillName(\"C++\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"tzhan98"},"content":"        //valid special character: #","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillName(\"C#\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"tzhan98"},"content":"        //valid special character: -","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillName(\"Sky-diving\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"        //invalid special character: $","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Skill.isValidSkillName(\"making$\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"        //invalid special character: space","lastModifiedDate":"2022-04-08"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Skill.isValidSkillName(\"making some money\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"        //no name provided","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Skill.isValidSkillName(\"\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"        //skill name longer than 10 characters (11 characters)","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Skill.isValidSkillName(\"MakingSomeM\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"    @Test void isValidSkillProficiency() {","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillProficiencyRange(100));","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        assertTrue(Skill.isValidSkillProficiencyRange(10));","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Skill.isValidSkillProficiencyRange(0));","lastModifiedDate":"2022-04-03"},{"lineNumber":105,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Skill.isValidSkillProficiencyRange(101));","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"tzhan98"},"content":"        assertFalse(Skill.isValidSkillProficiencyRange(-1));","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"tzhan98":109}},{"path":"src/test/java/seedu/address/model/team/TeamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"B1LLP4RK"},"content":"package seedu.address.model.team;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"B1LLP4RK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"B1LLP4RK"},"content":"public class TeamTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Team(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"B1LLP4RK"},"content":"    public void constructor_invalidTeamName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Team(invalidName));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"B1LLP4RK"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"B1LLP4RK"},"content":"    public void isValidTeamName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"B1LLP4RK"},"content":"        // null team name","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"        assertThrows(NullPointerException.class, () -\u003e Team.isValidTeamName(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"        //team name with special characters","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"tzhan98"},"content":"        Assertions.assertFalse(Team.isValidTeamName(\"Math tE@M\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"        //team name of 20 characters","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"tzhan98"},"content":"        Assertions.assertTrue(Team.isValidTeamName(\"Math Olympiad team 1\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"tzhan98"},"content":"        //empty team name","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"tzhan98"},"content":"        Assertions.assertFalse(Team.isValidTeamName(\"\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"        //team name greater than 20 characters (21 characters)","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"        Assertions.assertFalse(Team.isValidTeamName(\"Math Olympiad team 15\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"tzhan98":14,"B1LLP4RK":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String INVALID_USERNAME \u003d \"rach_el\";","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"B1LLP4RK"},"content":"    private static final String INVALID_TEAM \u003d \"#friend\";","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final String VALID_USERNAME \u003d BENSON.getGithubUsername().toString();","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"B1LLP4RK"},"content":"    private static final List\u003cJsonAdaptedTeam\u003e VALID_TEAMS \u003d BENSON.getTeams().stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"            .map(JsonAdaptedTeam::new)","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tzhan98"},"content":"    private static final List\u003cJsonAdaptedSkill\u003e VALID_SKILLSET \u003d BENSON.getSkillSet().getSkillSetInStream()","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tzhan98"},"content":"            .map(JsonAdaptedSkill::new)","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"tzhan98"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"    private static final boolean PLACEHOLDER_IS_TEAMMATE \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Jiaaa-yang"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_USERNAME, PLACEHOLDER_IS_TEAMMATE,","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Jiaaa-yang"},"content":"                        VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_USERNAME,","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"Jiaaa-yang"},"content":"            PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_USERNAME, PLACEHOLDER_IS_TEAMMATE,","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"                        VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_USERNAME,","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"                PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"Jiaaa-yang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_USERNAME,","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"Jiaaa-yang"},"content":"                        PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_USERNAME,","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"Jiaaa-yang"},"content":"                PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"    public void toModelType_invalidGithubUsername_throwsIllegalValueException() {","lastModifiedDate":"2022-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Jiaaa-yang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_USERNAME, PLACEHOLDER_IS_TEAMMATE,","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"B1LLP4RK"},"content":"                    VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d GithubUsername.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"Jiaaa-yang"},"content":"    public void toModelType_nullGithubUsername() {","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"Jiaaa-yang"},"content":"                PLACEHOLDER_IS_TEAMMATE, VALID_TEAMS, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"Jiaaa-yang"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GithubUsername.class.getSimpleName());","lastModifiedDate":"2022-03-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"B1LLP4RK"},"content":"    public void toModelType_invalidTeams_throwsIllegalValueException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"B1LLP4RK"},"content":"        List\u003cJsonAdaptedTeam\u003e invalidTeams \u003d new ArrayList\u003c\u003e(VALID_TEAMS);","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"B1LLP4RK"},"content":"        invalidTeams.add(new JsonAdaptedTeam(INVALID_TEAM));","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"                VALID_EMAIL, VALID_USERNAME, PLACEHOLDER_IS_TEAMMATE, invalidTeams, VALID_SKILLSET);","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tzhan98":4,"B1LLP4RK":7,"-":87,"Jiaaa-yang":26}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"     * Changed assertEquals to compare strings of AddressBook","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tzhan98":3,"-":47}},{"path":"src/test/java/seedu/address/storage/UserInputHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzhan98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"tzhan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"public class UserInputHistoryTest {","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"    public void testUserInputs() {","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"        UserInputHistory inputHistory \u003d new UserInputHistory();","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"tzhan98"},"content":"        inputHistory.up();","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"tzhan98"},"content":"        assertEquals(\"\", inputHistory.get()); //currently, no input history","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"tzhan98"},"content":"        inputHistory.add(\"input 1\");","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"        inputHistory.add(\"input 2\");","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"tzhan98"},"content":"        inputHistory.add(\"input 3\");","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"        inputHistory.up();","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"tzhan98"},"content":"        assertEquals(\"input 3\", inputHistory.get());","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"tzhan98"},"content":"        inputHistory.up();","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"tzhan98"},"content":"        assertEquals(\"input 2\", inputHistory.get());","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"tzhan98"},"content":"        inputHistory.down();","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"tzhan98"},"content":"        assertEquals(\"input 3\", inputHistory.get());","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"tzhan98"},"content":"        inputHistory.down();","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"tzhan98"},"content":"        assertEquals(\"\", inputHistory.get()); //no more input history","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"tzhan98"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"tzhan98":27}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"tzhan98"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        descriptor.setGithubUsername(person.getGithubUsername());","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"B1LLP4RK"},"content":"        descriptor.setTeams(person.getTeams());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"tzhan98"},"content":"        descriptor.setSkillSet(person.getSkillSet());","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"Jiaaa-yang"},"content":"     * Sets the {@code GithubUsername} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"    public EditPersonDescriptorBuilder withGithubUsername(String username) {","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"        descriptor.setGithubUsername(new GithubUsername(username));","lastModifiedDate":"2022-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses the {@code teams} into a {@code Set\u003cTeam\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"    public EditPersonDescriptorBuilder withTeams(String... teams) {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e teamSet \u003d Stream.of(teams).map(Team::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"        descriptor.setTeams(teamSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"     * Parses the {@code skill} into a {@code Set\u003cskill\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"     * that we are building.","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"tzhan98"},"content":"    public EditPersonDescriptorBuilder withSkillSet(String... skill) {","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"tzhan98"},"content":"        Set\u003cSkill\u003e skillSet \u003d Stream.of(skill).map(x -\u003e {","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"tzhan98"},"content":"            try {","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"tzhan98"},"content":"                return ParserUtil.parseSkill(x);","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"tzhan98"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"tzhan98"},"content":"                return null;","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"tzhan98"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"tzhan98"},"content":"        }).collect(Collectors.toSet());","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"tzhan98"},"content":"        skillSet.removeIf(Objects::isNull);","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"tzhan98"},"content":"        descriptor.setSkillSet(new SkillSet(skillSet));","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tzhan98":20,"B1LLP4RK":7,"-":79,"Jiaaa-yang":5}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"Jiaaa-yang"},"content":"import seedu.address.model.person.GithubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"Jiaaa-yang"},"content":"    public static final String DEFAULT_USERNAME \u003d \"amybee99\";","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"Jiaaa-yang"},"content":"    private GithubUsername githubUsername;","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"B1LLP4RK"},"content":"    private Set\u003cTeam\u003e teams;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"tzhan98"},"content":"    private SkillSet skillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"Jiaaa-yang"},"content":"    private boolean isPotentialTeammate;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        githubUsername \u003d new GithubUsername(DEFAULT_USERNAME);","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"B1LLP4RK"},"content":"        teams \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        skillSet \u003d new SkillSet();","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Jiaaa-yang"},"content":"        isPotentialTeammate \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        githubUsername \u003d personToCopy.getGithubUsername();","lastModifiedDate":"2022-03-01"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        isPotentialTeammate \u003d personToCopy.isPotentialTeammate();","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"B1LLP4RK"},"content":"        teams \u003d new HashSet\u003c\u003e(personToCopy.getTeams());","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"tzhan98"},"content":"        skillSet \u003d new SkillSet(personToCopy.getSkillSet());","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses the {@code teams} into a {@code Set\u003cTeam\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"B1LLP4RK"},"content":"    public PersonBuilder withTeams(String... teams) {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"B1LLP4RK"},"content":"        this.teams \u003d SampleDataUtil.getTeamSet(teams);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"B1LLP4RK"},"content":"     * Parses the {@code teams} into a {@code Set\u003cTeam\u003e} and add them to the {@code Person} that we are building.","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"B1LLP4RK"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"B1LLP4RK"},"content":"     * @param teams the teams to be appended to the current list of teams of a person","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"B1LLP4RK"},"content":"     * @return the set of teams this person is in","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"B1LLP4RK"},"content":"    public PersonBuilder addTeams(String... teams) {","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"B1LLP4RK"},"content":"        Set\u003cTeam\u003e teamsToAdd \u003d SampleDataUtil.getTeamSet(teams);","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"B1LLP4RK"},"content":"        this.teams.addAll(teamsToAdd);","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"B1LLP4RK"},"content":"        return this;","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"B1LLP4RK"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"B1LLP4RK"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"tzhan98"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"tzhan98"},"content":"     * Parses the {@code skill} into a {@code Set\u003cSkill\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"tzhan98"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"tzhan98"},"content":"    public PersonBuilder withSkillSet(String... skillSet) {","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"tzhan98"},"content":"        this.skillSet \u003d SampleDataUtil.getSkillSet(skillSet);","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"tzhan98"},"content":"        return this;","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"tzhan98"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"tzhan98"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"Jiaaa-yang"},"content":"     * Sets the {@code GithubUsername} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"Jiaaa-yang"},"content":"    public PersonBuilder withGithubUsername(String username) {","lastModifiedDate":"2022-03-01"},{"lineNumber":99,"author":{"gitId":"Jiaaa-yang"},"content":"        this.githubUsername \u003d new GithubUsername(username);","lastModifiedDate":"2022-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"Jiaaa-yang"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"Jiaaa-yang"},"content":"     * Sets the {@code isPotentialTeammate} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"Jiaaa-yang"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"Jiaaa-yang"},"content":"    public PersonBuilder isPotentialTeammate(boolean isPotentialTeammate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"Jiaaa-yang"},"content":"        this.isPotentialTeammate \u003d isPotentialTeammate;","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"Jiaaa-yang"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"Jiaaa-yang"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"Jiaaa-yang"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":128,"author":{"gitId":"Jiaaa-yang"},"content":"        return new Person(name, phone, email, githubUsername, teams, skillSet, isPotentialTeammate);","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tzhan98":12,"B1LLP4RK":17,"-":82,"Jiaaa-yang":20}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"tzhan98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"B1LLP4RK"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"Jiaaa-yang"},"content":"        sb.append(PREFIX_GITHUB_USERNAME + person.getGithubUsername().value + \" \");","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"        person.getTeams().stream().forEach(","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"B1LLP4RK"},"content":"            s -\u003e sb.append(PREFIX_TEAM + s.teamName + \" \")","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"tzhan98"},"content":"        person.getSkillSet().getSkillSetInStream().forEach(","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tzhan98"},"content":"            s -\u003e sb.append(PREFIX_SKILL + s.skillName + \"_\" + s.skillProficiency + \" \")","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"Jiaaa-yang"},"content":"        descriptor.getGithubUsername().ifPresent(address -\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"Jiaaa-yang"},"content":"                sb.append(PREFIX_GITHUB_USERNAME).append(address.value).append(\" \"));","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"B1LLP4RK"},"content":"        if (descriptor.getTeams().isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"B1LLP4RK"},"content":"            Set\u003cTeam\u003e teams \u003d descriptor.getTeams().get();","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"B1LLP4RK"},"content":"            if (teams.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"B1LLP4RK"},"content":"                sb.append(PREFIX_TEAM).append(\" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"B1LLP4RK"},"content":"                teams.forEach(s -\u003e sb.append(PREFIX_TEAM).append(s.teamName).append(\" \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"tzhan98"},"content":"        if (descriptor.getSkillSet().isPresent()) {","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"tzhan98"},"content":"            SkillSet skillSet \u003d descriptor.getSkillSet().get();","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tzhan98"},"content":"            if (skillSet.getSkillSet().isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"tzhan98"},"content":"                sb.append(PREFIX_SKILL);","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"tzhan98"},"content":"                skillSet.getSkillSet().forEach(s -\u003e sb.append(PREFIX_SKILL).append(s.skillName).append(\"_\")","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tzhan98"},"content":"                        .append(s.skillProficiency).append(\" \"));","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tzhan98":10,"B1LLP4RK":9,"-":54,"Jiaaa-yang":4}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Jiaaa-yang"},"content":"        return Index.fromOneBased(model.getDisplayPersonList().size() / 2);","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        return Index.fromOneBased(model.getDisplayPersonList().size());","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        return model.getDisplayPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":52,"Jiaaa-yang":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILL_C;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"tzhan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SKILL_PYTHON;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_GOOGLE;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"B1LLP4RK"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_YAHOO;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_AMY;","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Jiaaa-yang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.VersionedAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"Jiaaa-yang"},"content":"        .withGithubUsername(\"alice-paul\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"B1LLP4RK"},"content":"        .withTeams(\"friends\")","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"        .withSkillSet(\"C_20\", \"Python_40\")","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Jiaaa-yang"},"content":"        .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Jiaaa-yang"},"content":"        .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"Jiaaa-yang"},"content":"        .withGithubUsername(\"benson-123\")","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"B1LLP4RK"},"content":"        .withTeams(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"Jiaaa-yang"},"content":"        .withSkillSet(\"python_40\")","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Jiaaa-yang"},"content":"        .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Jiaaa-yang"},"content":"        .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"alexteo98"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"alexteo98"},"content":"        .withPhone(\"95352563\")","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"alexteo98"},"content":"        .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"Jiaaa-yang"},"content":"        .withGithubUsername(\"kurz-carl\")","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Jiaaa-yang"},"content":"        .isPotentialTeammate(true)","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Jiaaa-yang"},"content":"        .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"alexteo98"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"alexteo98"},"content":"        .withPhone(\"87652533\")","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"alexteo98"},"content":"        .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"alexteo98"},"content":"        .withGithubUsername(\"meier-coding\")","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"Jiaaa-yang"},"content":"        .withTeams(\"friends\").withSkillSet(\"Bash_90\")","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Jiaaa-yang"},"content":"        .isPotentialTeammate(true)","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Jiaaa-yang"},"content":"        .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"alexteo98"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"alexteo98"},"content":"        .withPhone(\"9482224\")","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"alexteo98"},"content":"        .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"alexteo98"},"content":"        .withGithubUsername(\"ellelle\")","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"Jiaaa-yang"},"content":"        .withSkillSet(\"C_80\")","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"Jiaaa-yang"},"content":"        .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"Jiaaa-yang"},"content":"        .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"alexteo98"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"alexteo98"},"content":"        .withPhone(\"9482427\")","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"alexteo98"},"content":"        .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"alexteo98"},"content":"        .withGithubUsername(\"kunzgunz\")","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"Jiaaa-yang"},"content":"        .withSkillSet(\"Git_59\")","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Jiaaa-yang"},"content":"        .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Jiaaa-yang"},"content":"        .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"alexteo98"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"alexteo98"},"content":"        .withPhone(\"9482442\")","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"alexteo98"},"content":"        .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"alexteo98"},"content":"        .withGithubUsername(\"best-coder\")","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"Jiaaa-yang"},"content":"        .withSkillSet(\"C_30\")","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"Jiaaa-yang"},"content":"        .isPotentialTeammate(false)","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"Jiaaa-yang"},"content":"        .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"Jiaaa-yang"},"content":"        .withEmail(\"stefan@example.com\").withGithubUsername(\"hoonmeier\").build();","lastModifiedDate":"2022-03-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"Jiaaa-yang"},"content":"        .withEmail(\"hans@example.com\").withGithubUsername(\"ida-ller99\").build();","lastModifiedDate":"2022-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"tzhan98"},"content":"        .withEmail(VALID_EMAIL_AMY).withGithubUsername(VALID_USERNAME_AMY)","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"B1LLP4RK"},"content":"        .withTeams(VALID_TEAM_YAHOO).withSkillSet(VALID_SKILL_C).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"Jiaaa-yang"},"content":"        .withEmail(VALID_EMAIL_BOB).withGithubUsername(VALID_USERNAME_BOB)","lastModifiedDate":"2022-03-01"},{"lineNumber":90,"author":{"gitId":"B1LLP4RK"},"content":"        .withTeams(VALID_TEAM_GOOGLE, VALID_TEAM_YAHOO).withSkillSet(VALID_SKILL_PYTHON).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"B1LLP4RK"},"content":"    private TypicalPersons() {","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"B1LLP4RK"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":108,"author":{"gitId":"alexteo98"},"content":"    public static VersionedAddressBook getTypicalVersionedAddressBook() {","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"alexteo98"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook();","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"alexteo98"},"content":"        for (Person p : getTypicalPersons()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"alexteo98"},"content":"            versionedAddressBook.addPerson(p);","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"alexteo98"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"alexteo98"},"content":"        return versionedAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"alexteo98":30,"tzhan98":3,"B1LLP4RK":8,"-":52,"Jiaaa-yang":27}},{"path":"src/test/java/seedu/address/testutil/TypicalSkills.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alexteo98"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"alexteo98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"alexteo98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"alexteo98"},"content":"import java.util.List;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.Skill;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"alexteo98"},"content":"import seedu.address.model.team.SkillSet;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"alexteo98"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"alexteo98"},"content":" * A utility class containing a list of {@code Skill} objects to be used in tests.","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"alexteo98"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"alexteo98"},"content":"public class TypicalSkills {","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_JAVA_50 \u003d new Skill(\"Java\", 50);","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_JAVA_40 \u003d new Skill(\"Java\", 40);","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_C_20 \u003d new Skill(\"C\", 20);","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tzhan98"},"content":"    public static final Skill SKILL_C_1 \u003d new Skill(\"C\", 1);","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_PYTHON_30 \u003d new Skill(\"Python\", 30);","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_PYTHON_100 \u003d new Skill(\"Python\", 100);","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_BASH_70 \u003d new Skill(\"Bash\", 70);","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"alexteo98"},"content":"    public static final Skill SKILL_LINUX_60 \u003d new Skill(\"LINUX\", 60);","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"alexteo98"},"content":"    public static SkillSet getTypicalSkillSet() {","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"alexteo98"},"content":"        SkillSet skillSet \u003d new SkillSet();","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"alexteo98"},"content":"        for (Skill skill : getTypicalSkills()) {","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"alexteo98"},"content":"            skillSet.add(skill);","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"alexteo98"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"alexteo98"},"content":"        return skillSet;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"alexteo98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"alexteo98"},"content":"    public static List\u003cSkill\u003e getTypicalSkills() {","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"alexteo98"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(SKILL_JAVA_40, SKILL_C_20, SKILL_PYTHON_30));","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"alexteo98"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"alexteo98"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"alexteo98":33,"tzhan98":1}}]
