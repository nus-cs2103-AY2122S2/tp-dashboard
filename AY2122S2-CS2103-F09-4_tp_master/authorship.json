[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F09-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F09-4/tp/actions)","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"* The project is a desktop application (called _ReadyBakey_) used for managing baking orders.","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"  * It is **written in OOP fashion** and provides a **reasonably well-written** code base (around 6 KLoC).","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"* It is a **desktop order management application meant for bakers dealing with lots of orders**.\u003cbr\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"  Example usages:","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"  * as an application to keep track and manage orders received","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"  * as an application to keep track of past and existing customers","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"* It is named `ReadyBakey` because it is meant to help bakers get ready for their orders!","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"* For the detailed documentation of this project, see the **[Ready Bakey Product Website]()**.","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"darshan152":1,"Geralddtan":9,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"    archiveName \u003d \u0027readybakey.jar\u0027","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"darshan152":4,"declanleeler":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"### Gerald Tan","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"\u003cimg src\u003d\"images/geralddtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"[[github](https://github.com/Geralddtan)]","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"[[portfolio](team/geralddtan.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"* Role: Developer","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"* Responsibilities: In charge of add order functionality","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"### Pun Hui Min","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"\u003cimg src\u003d\"images/punnyhuimin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"[[github](https://github.com/punnyhuimin)]","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"[[portfolio](team/punnyhuimin.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"* Role: Developer","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"* Responsibilities: In charge of edit order functionality","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"### Chua Yi Fang","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"\u003cimg src\u003d\"images/onefangg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"[[github](http://github.com/onefangg)]","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"[[portfolio](team/onefangg.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"* Responsibilities: In charge of find order functionality","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"### Declan Lee Ler","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"\u003cimg src\u003d\"images/declanleeler.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"[[github](https://github.com/declanleeler)]","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"[[portfolio](team/declanleeler.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"* Responsibilities: In charge of incomplete orders functionality","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"### Darshan P Daryanani Dave","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"\u003cimg src\u003d\"images/darshan152.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"[[github](http://github.com/darshan152)]","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"[[portfolio](team/darshan152.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"* Responsibilities: In charge of linking order to person functionality","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"darshan152":4,"Geralddtan":10,"onefangg":4,"declanleeler":4,"-":34,"punnyhuimin":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"# Table of Contents","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"2. [Setting Up](#setting-up)","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"3. [Design](#design)","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"   * [Architecture](#architecture)","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"   * [UI Component](#ui-component)","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"   * [Logic Component](#logic-component)","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"   * [Model Component](#model-component)","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"   * [Storage Component](#storage-component)","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"   * [Common classes](#common-classes)","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"4. [Implementation](#implementation)","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"   * [Adding orders feature](#addo)","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"   * [Mark/ Unmark orders feature](#marko)","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"   * [Finding orders and persons through attributes](#findo-findp)","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"   * [Edit Order Feature](#edito)","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"   * [Listing all orders](#listo)","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"   * [Find Incomplete Orders Before A Date Feature](#incompleteo)","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"   * [Delete Orders](#deleteo)","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"   * [Dynamic Toggling Between Application’s Data](#dynamic-toggling)","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"5. [Documentation, logging, testing, configuration, dev-ops](#additional-information)","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"6. [Appendix: Requirements](#requirements)","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"   * [Product Scope](#product-scope)","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"   * [User Stories](#user-story)","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"   * [Use Cases](#use-cases)","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"   * [Non-Functional Requirements](#nfr)","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"   * [Glossary](#glossary)","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"## **Acknowledgements** \u003ca name\u003d\"acknowledgements\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"* Geralddtan - Reused Leap Year Checker (DeliveryDateTime#isLeapYear) from https://www.geeksforgeeks.org/java-program-to-find-if-a-given-year-is-a-leap-year/","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"* Punnyhuimin - Reused natural date checker formula (DateChecker#naturalDateCheck()) from https://coderanch.","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"  com/t/385117/java/date-Monday","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"* Punnyhuimin - Reused scroll bar CSS https://stackoverflow.com/questions/48048943/javafx-8-scroll-bar-css","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"## **Setting up, getting started** \u003ca name\u003d\"setting-up\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"## **Design** \u003ca name\u003d\"design\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103-F09-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"### Architecture \u003ca name\u003d\"architecture\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103-F09-4/tp/blob/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"and [`MainApp`](https://github.com/AY2122S2-CS2103-F09-4/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"darshan152"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `deletep 1`.","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"### UI component \u003ca name\u003d\"ui-component\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103-F09-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-04-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`,`OrderListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-04-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"darshan152"},"content":"* depends on some classes in the `Model` component, as it displays `Person` and `Order` objects residing in the `Model`.","lastModifiedDate":"2022-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"### Logic component \u003ca name\u003d\"logic-component\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103-F09-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-04-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"Geralddtan"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddPersonCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"darshan152"},"content":"![Interactions Inside the Logic Component for the `deletep 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"Geralddtan"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddPersonCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddPersonCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-03-07"},{"lineNumber":143,"author":{"gitId":"darshan152"},"content":"* All `XYZCommandParser` classes (e.g., `AddPersonCommandParser`, `DeletePersonCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-04-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"punnyhuimin"},"content":"### Model component \u003ca name\u003d\"model-component\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":146,"author":{"gitId":"Geralddtan"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103-F09-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"Geralddtan"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"Geralddtan"},"content":"* stores the address book data i.e., all `Person` and `Order` objects (which are contained in a `UniquePersonList` object and a `UniqueOrderList` object).","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"Geralddtan"},"content":"* stores the currently \u0027selected\u0027 `Order` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cOrder\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"punnyhuimin"},"content":"### Storage component \u003ca name\u003d\"storage-component\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"punnyhuimin"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103-F09-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-04-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"punnyhuimin"},"content":"* can save both ReadyBakey data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-04-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"punnyhuimin"},"content":"### Common classes \u003ca name\u003d\"common-classes\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"punnyhuimin"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2022-04-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"Geralddtan"},"content":"## **Implementation** \u003ca name\u003d\"implementation\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"punnyhuimin"},"content":"### Adding Orders Feature \u003ca name\u003d\"addo\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"Geralddtan"},"content":"This feature allows users to add orders.","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"Geralddtan"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"Geralddtan"},"content":"The AddOrder feature uses the command `addo`. It extends the abstract class `Command`.","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"Geralddtan"},"content":"The AddOrder feature takes in 4 required parameter and 1 optional parameter.","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"Geralddtan"},"content":"| Prefix | Meaning                | Example               | Format                                                        | Compulsory |","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"Geralddtan"},"content":"|--------|------------------------|-----------------------|---------------------------------------------------------------|------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"punnyhuimin"},"content":"| p/     | Phone Number           | p/ 90124322           | Must be a number longer than 3 digits                         | Yes        |","lastModifiedDate":"2022-04-09"},{"lineNumber":199,"author":{"gitId":"punnyhuimin"},"content":"| c/     | Delivery Date and Time | c/ 30-06-2022 15:30   | Must follow the format dd-MM-yyyy HH:mm                       | Yes        |","lastModifiedDate":"2022-04-09"},{"lineNumber":200,"author":{"gitId":"punnyhuimin"},"content":"| m/     | Collection Type        | m/ delivery           | Must be either `delivery` or `pickup` with any capitalisation | Yes        |","lastModifiedDate":"2022-04-09"},{"lineNumber":201,"author":{"gitId":"punnyhuimin"},"content":"| d/     | Details of Order       | d/ 1:Chocolate Cake   | Can take in any detail of the order                           | Yes        |","lastModifiedDate":"2022-04-09"},{"lineNumber":202,"author":{"gitId":"punnyhuimin"},"content":"| r/     | Remark                 | r/ Put more Chocolate | Can take in any remark of the order                           | No         |","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"Geralddtan"},"content":"When the add order command is executed by calling `AddOrderCommand#execute`, the order is built with the","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"Geralddtan"},"content":"respective phone number, delivery date time, collection type, details and remarks specific to that order. This is","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"Geralddtan"},"content":"performed in the function `AddOrderCommand#buildOrder`.","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"Geralddtan"},"content":"All inputs by users go through an `AddOrderCommandParser` which extracts out the relevant details for each prefix in the","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"Geralddtan"},"content":"method `AddOrderCommandParser#parse`. This method handles the checking of whether the input by the user is valid.","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"darshan152"},"content":"There are 3 main forms of invalid input by the user that is checked for:","lastModifiedDate":"2022-04-05"},{"lineNumber":212,"author":{"gitId":"Geralddtan"},"content":"1. When any of the compulsory fields are not specified in the creation of an order","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"Geralddtan"},"content":"2. Any field does not fulfil the provided format","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"darshan152"},"content":"3. The length of a field is not within the allowed range","lastModifiedDate":"2022-04-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"Geralddtan"},"content":"When an invalid input is parsed, a `ParseException` is thrown and the user will be shown a message on the proper","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"Geralddtan"},"content":"usage of the add order command.","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"Geralddtan"},"content":"The following sequence diagram illustrates how the `AddOrderCommand` works:","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"Geralddtan"},"content":"![AddOrderSequence](images/AddOrderSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"Geralddtan"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"darshan152"},"content":"1) Phone Number stores any number longer than 3 digits long and less than 15 digits long","lastModifiedDate":"2022-04-05"},{"lineNumber":226,"author":{"gitId":"Geralddtan"},"content":"   * This format was chosen to be more flexible to accept different length of numbers","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"darshan152"},"content":"   * Phone number needs to already exist in a `Person` so that there is a linkage made","lastModifiedDate":"2022-04-05"},{"lineNumber":228,"author":{"gitId":"darshan152"},"content":"     * Phone number was chosen to create a link as we expect our users to copy over the data from another source. E.g. Received orders on Whatsapp -\u003e Input into ReadyBakey. This would make it easier for our users to add data in as compared to having to find the index of the user in the app.","lastModifiedDate":"2022-04-08"},{"lineNumber":229,"author":{"gitId":"darshan152"},"content":"2) Delivery Date and Time takes in user input in the format dd-MM-yyyy HH:mm, as well as natural date formats E.g. `Mon 12:59`","lastModifiedDate":"2022-04-05"},{"lineNumber":230,"author":{"gitId":"Geralddtan"},"content":"   * This user input format was chosen to be user-friendly","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"Geralddtan"},"content":"   * This Date and Time is represented to the user in the format such as \"Thursday, 30 Jun 2022, 03:30PM\"","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"Geralddtan"},"content":"     * This was chosen to be a very readible date and time format","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"Geralddtan"},"content":"3) Collection Type is an enum with types `DELIVERY` or `PICKUP`","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"darshan152"},"content":"   * Enum was chosen to keep this representation more flexible and easily readable","lastModifiedDate":"2022-04-05"},{"lineNumber":235,"author":{"gitId":"Geralddtan"},"content":"   * Alternative:","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"Geralddtan"},"content":"     * Using a Boolean value to represent delivery vs pickup","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"Geralddtan"},"content":"       * This was not chosen to increase the flexibility and extensibility of the code","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"darshan152"},"content":"4) Remark was left to be of open format to give the user flexibility in describing the orders","lastModifiedDate":"2022-04-05"},{"lineNumber":239,"author":{"gitId":"darshan152"},"content":"   * There is a maximum character limit imposed of 70 due to UI considerations","lastModifiedDate":"2022-04-05"},{"lineNumber":240,"author":{"gitId":"darshan152"},"content":"5) Details has to be given in the format `NumberOfItems:NameofItem` E.g. `1:ChocolateCake`","lastModifiedDate":"2022-04-05"},{"lineNumber":241,"author":{"gitId":"darshan152"},"content":"   * There is a maximum character limit imposed of 30 for the name of the item  due to UI considerations","lastModifiedDate":"2022-04-05"},{"lineNumber":242,"author":{"gitId":"darshan152"},"content":"   * The number of items has to be in the range of 1 - 99","lastModifiedDate":"2022-04-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"punnyhuimin"},"content":"### Mark/Unmark Orders Feature \u003ca name\u003d\"marko\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"darshan152"},"content":"This feature allows users to mark the orders as complete/incomplete.","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"darshan152"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"Geralddtan"},"content":"The mark feature consists of two commands, `MarkOrderCommand` and `UnmarkOrderCommand`.","lastModifiedDate":"2022-04-07"},{"lineNumber":251,"author":{"gitId":"darshan152"},"content":"Both of the commands extend `Command`. An `Index` parameter is needed to indicate the","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"darshan152"},"content":"targeted order. ","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"darshan152"},"content":"When the commands are executed by calling `Command#execute(Model model)`, the Order","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"darshan152"},"content":"that is indicated by the `Index`, will have its attribute `Complete` updated to have","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"Geralddtan"},"content":"an appropriate boolean value. This is done by calling `model#setOrder(Order target, Order editedOrder)` which replaces the existing order with editedOrder","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"darshan152"},"content":"to ensure that `Order` is immutable.","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":259,"author":{"gitId":"darshan152"},"content":"When an invalid input is parsed, a `CommandException` will be thrown and the user will be shown a","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"darshan152"},"content":"message on the proper usage of the command.","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"darshan152"},"content":"The following sequence diagram illustrates how the `MarkCommand` works:","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"darshan152"},"content":"![MarkOrderSequence](images/MarkSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"Geralddtan"},"content":"Similar concept applies for `UnmarkOrderCommand`.","lastModifiedDate":"2022-04-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":268,"author":{"gitId":"darshan152"},"content":"#### Design consideration","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":270,"author":{"gitId":"darshan152"},"content":"1) `Complete` stores a boolean value.","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"darshan152"},"content":"   * Boolean value was chosen to keep the implementation simple.","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"darshan152"},"content":"   * Alternative: Store an Enum containing possible values of `Complete`","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"darshan152"},"content":"     * Pros: More easily readable.","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"darshan152"},"content":"     * Cons: Larger implementation.","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"darshan152"},"content":"   * Boolean chosen due to simple implementation.","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"darshan152"},"content":"   * Completion status of an order can only take 2 values, an order can be complete or incomplete, thus there is no need for an Enum class.","lastModifiedDate":"2022-04-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"darshan152"},"content":"2) Order is still immutable","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"darshan152"},"content":"   * Creating a marked order will duplicate the current order, while changing the `Complete` attribute","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"darshan152"},"content":"   * Then, the current order will be replaced with the new order in order to maintain immutability.","lastModifiedDate":"2022-03-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":282,"author":{"gitId":"punnyhuimin"},"content":"### Finding Persons and Orders Through Selected Attribute \u003ca name\u003d\"findo-findp\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":283,"author":{"gitId":"punnyhuimin"},"content":"#### Implementation","lastModifiedDate":"2022-04-06"},{"lineNumber":284,"author":{"gitId":"onefangg"},"content":"Users are able to find specific persons/orders based on their respective attributes. For example, users can find orders that are made by a Person with name \"Alex\".","lastModifiedDate":"2022-04-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":286,"author":{"gitId":"onefangg"},"content":"The search is based on (case-insensitive) words matching the keyword input. Both `findo` and `findp` work similarly, only differing in the attributes supported for find.   ","lastModifiedDate":"2022-04-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":288,"author":{"gitId":"onefangg"},"content":"Supported attributes for `findp`: name, phone, email, address, remark. ","lastModifiedDate":"2022-04-08"},{"lineNumber":289,"author":{"gitId":"onefangg"},"content":"Supported attributes for `findo`: name, phone, details, collection_type, remark.","lastModifiedDate":"2022-04-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":291,"author":{"gitId":"punnyhuimin"},"content":"#### Design considerations:","lastModifiedDate":"2022-04-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":293,"author":{"gitId":"punnyhuimin"},"content":"The parsing of searchable attributes and as well as the keywords (to find for) is currently done with `ArgumentTokenizer.tokenize()` method. This is for congruency with parsing methods in `AddOrderCommandParser`, `EditOrderCommandParser` etc.","lastModifiedDate":"2022-04-06"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":295,"author":{"gitId":"punnyhuimin"},"content":"The method will return a `HashMap\u003cString, String\u003e`. As `HashMap` is an unordered structure, filtering on multiple attributes in a single command potentially results in undeterministic results.","lastModifiedDate":"2022-04-06"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":297,"author":{"gitId":"onefangg"},"content":"* **Alternative 1 (current choice):** `findo` and `findp` will only support filter for one attribute in a single command ","lastModifiedDate":"2022-04-08"},{"lineNumber":298,"author":{"gitId":"punnyhuimin"},"content":"  * Filtering for multiple attributes in a single command will result in an error eg `findo n/Alex p/98742313`.","lastModifiedDate":"2022-04-06"},{"lineNumber":299,"author":{"gitId":"punnyhuimin"},"content":"  * Adding an attribute to search for, that is not supported, will simply be ignored. For example, adding `details` to search for `findo n/Alex d/chococake` will only return search results that is the same as `findo n/Alex`.","lastModifiedDate":"2022-04-06"},{"lineNumber":300,"author":{"gitId":"punnyhuimin"},"content":"* **Alternative 2:** Implement an alternative form of tokenization to return `LinkedHashMap\u003cString, String\u003e`, which is based on insertion order of attributes and keywords.","lastModifiedDate":"2022-04-06"},{"lineNumber":301,"author":{"gitId":"punnyhuimin"},"content":"  * Filtering for multiple attributes will be possible. For example","lastModifiedDate":"2022-04-06"},{"lineNumber":302,"author":{"gitId":"onefangg"},"content":"  * However, this will require more man-hours and testing to ensure consistent results, and hence is deprioritised. ","lastModifiedDate":"2022-04-08"},{"lineNumber":303,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":304,"author":{"gitId":"onefangg"},"content":"For example in `findo`:","lastModifiedDate":"2022-04-08"},{"lineNumber":305,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":306,"author":{"gitId":"punnyhuimin"},"content":"1. Create `Predicate` for findable attribute.","lastModifiedDate":"2022-04-06"},{"lineNumber":307,"author":{"gitId":"punnyhuimin"},"content":"   * Find (filter) is based on whether the attribute for Order contains the given keyword (case-insensitive)","lastModifiedDate":"2022-04-06"},{"lineNumber":308,"author":{"gitId":"punnyhuimin"},"content":"2. `FindOrder\u003cAttribute\u003eCommand` is then instantiated, which would then find for `Order` that matches the `Predicate`.","lastModifiedDate":"2022-04-06"},{"lineNumber":309,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":310,"author":{"gitId":"punnyhuimin"},"content":"The following sequence diagram shows how the `findo` operation works:","lastModifiedDate":"2022-04-06"},{"lineNumber":311,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":312,"author":{"gitId":"punnyhuimin"},"content":"![FindOrderSequenceDiagram](images/FindOrderSequenceDiagram.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":313,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":314,"author":{"gitId":"punnyhuimin"},"content":"### Edit Order Feature \u003ca name\u003d\"edito\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":315,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"punnyhuimin"},"content":"This feature allows users to edit the details, collection/ delivery time, whether an order is for delivery or pickup,","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"punnyhuimin"},"content":"and remarks of the order that already exists in ReadyBakey. Currently, it can only edit the details of the order.","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"punnyhuimin"},"content":"#### Implementation","lastModifiedDate":"2022-04-09"},{"lineNumber":320,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":321,"author":{"gitId":"punnyhuimin"},"content":"The edit orders feature consists of one command, `EditOrderCommand`. It extends `Command`.","lastModifiedDate":"2022-03-24"},{"lineNumber":322,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"punnyhuimin"},"content":"These are the inputs that the edit order command will accept:","lastModifiedDate":"2022-03-24"},{"lineNumber":324,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":325,"author":{"gitId":"punnyhuimin"},"content":"1) It takes in an `Index` parameter to indicate the order that is to be edited.","lastModifiedDate":"2022-03-24"},{"lineNumber":326,"author":{"gitId":"punnyhuimin"},"content":"2) It also takes in other optional inputs based on the prefixes specified:","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":328,"author":{"gitId":"punnyhuimin"},"content":"| Prefix | Meaning                              | Example            | Format                                                        | Compulsory |","lastModifiedDate":"2022-03-24"},{"lineNumber":329,"author":{"gitId":"punnyhuimin"},"content":"|--------|--------------------------------------|--------------------|---------------------------------------------------------------|------------|","lastModifiedDate":"2022-04-09"},{"lineNumber":330,"author":{"gitId":"punnyhuimin"},"content":"| c/     | Collection/ delivery time            | c/30-06-2022 15:30 | Must follow the format dd-MM-yyyy HH:mm                       | No         |","lastModifiedDate":"2022-03-24"},{"lineNumber":331,"author":{"gitId":"punnyhuimin"},"content":"| m/     | Collection type (Pickup or Delivery) | m/delivery         | Must be either `delivery` or `pickup` with any capitalisation | No         |","lastModifiedDate":"2022-04-09"},{"lineNumber":332,"author":{"gitId":"punnyhuimin"},"content":"| d/     | Order Details                        | d/1x Cheesecake    | Must be in the form [NUM_ORDERS\\]: \\[ANY_STRING\\]             | No         |","lastModifiedDate":"2022-04-09"},{"lineNumber":333,"author":{"gitId":"punnyhuimin"},"content":"| r/     | Order Remarks                        | r/Give me candles  | Can take in any remark for the order                          | No         |","lastModifiedDate":"2022-03-24"},{"lineNumber":334,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":335,"author":{"gitId":"punnyhuimin"},"content":"At least one of the prefixes needs to be specified to be edited.","lastModifiedDate":"2022-03-24"},{"lineNumber":336,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":337,"author":{"gitId":"punnyhuimin"},"content":"When the edit order command is executed by calling the `Command#execute()`, the Order indicated by the `Index`, will","lastModifiedDate":"2022-03-24"},{"lineNumber":338,"author":{"gitId":"punnyhuimin"},"content":"have its order edited, depending on the prefixes that were specified. A new order with the respective details,","lastModifiedDate":"2022-03-24"},{"lineNumber":339,"author":{"gitId":"punnyhuimin"},"content":"collection/ delivery time, whether an order is for delivery or pickup, and remarks of the order, will be created. This","lastModifiedDate":"2022-03-24"},{"lineNumber":340,"author":{"gitId":"punnyhuimin"},"content":"is performed by the function `EditOrderCommand#createEditedOrder()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":341,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":342,"author":{"gitId":"punnyhuimin"},"content":"All inputs are parsed through an EditOrderCommandParser, which parses each prefix and extracts the relevant information","lastModifiedDate":"2022-03-24"},{"lineNumber":343,"author":{"gitId":"punnyhuimin"},"content":"for each prefix. This is done in the method `EditOrderCommandParser#parse()`. It also checks on the validity of the","lastModifiedDate":"2022-04-09"},{"lineNumber":344,"author":{"gitId":"punnyhuimin"},"content":"user input.","lastModifiedDate":"2022-03-24"},{"lineNumber":345,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":346,"author":{"gitId":"punnyhuimin"},"content":"There are two parts to the input that will be checked for validity:","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":348,"author":{"gitId":"punnyhuimin"},"content":"1) When an invalid index is provided, a `CommandException` is thrown and the user will be told that the order index they","lastModifiedDate":"2022-03-24"},{"lineNumber":349,"author":{"gitId":"punnyhuimin"},"content":"   have provided is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"punnyhuimin"},"content":"2) When there are no prefixes provided, a `ParseException` is thrown and the user is shown a message to provide at","lastModifiedDate":"2022-03-24"},{"lineNumber":351,"author":{"gitId":"punnyhuimin"},"content":"   least one field to edit.","lastModifiedDate":"2022-03-24"},{"lineNumber":352,"author":{"gitId":"punnyhuimin"},"content":"3) When an invalid input is parsed, a `ParseException` is thrown and the user is shown a message on the proper usage of","lastModifiedDate":"2022-03-24"},{"lineNumber":353,"author":{"gitId":"punnyhuimin"},"content":"   the edit order command.","lastModifiedDate":"2022-03-24"},{"lineNumber":354,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":355,"author":{"gitId":"punnyhuimin"},"content":"The following sequence diagram illustrates how the `EditOrderCommand` will work:","lastModifiedDate":"2022-03-24"},{"lineNumber":356,"author":{"gitId":"punnyhuimin"},"content":"![EditOrderSequence](images/EditOrderSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":357,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":358,"author":{"gitId":"punnyhuimin"},"content":"#### Design considerations","lastModifiedDate":"2022-03-24"},{"lineNumber":359,"author":{"gitId":"punnyhuimin"},"content":"1) Delivery date and time being parsed in should allow the usage of natural dates such as `Thursday 3pm` or `Monday","lastModifiedDate":"2022-03-24"},{"lineNumber":360,"author":{"gitId":"punnyhuimin"},"content":"   4pm` and ReadyBakey will know the date being parsed is the upcoming Thursday at 3pm. This is alongside the","lastModifiedDate":"2022-04-09"},{"lineNumber":361,"author":{"gitId":"punnyhuimin"},"content":"   parsing of date and time in the format `dd-MM-yyyy HH:mm`.","lastModifiedDate":"2022-03-24"},{"lineNumber":362,"author":{"gitId":"punnyhuimin"},"content":"    - This provides bakers with better ability to key in dates without having to stick to only keying in the full","lastModifiedDate":"2022-03-24"},{"lineNumber":363,"author":{"gitId":"punnyhuimin"},"content":"      date and time format.","lastModifiedDate":"2022-03-24"},{"lineNumber":364,"author":{"gitId":"punnyhuimin"},"content":"2) Editing should not be allowed for the completion of the order. It should be done with the use of mark or unmark","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"punnyhuimin"},"content":"   orders instead.","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"punnyhuimin"},"content":"3) The Natural Dates is sensitive to the time that is passed to it.","lastModifiedDate":"2022-04-09"},{"lineNumber":367,"author":{"gitId":"punnyhuimin"},"content":"   * If the current time is `7th April 2022 09:30`, which is a Thursday, inputting `Thurs 08:30` will return `14th April","lastModifiedDate":"2022-04-09"},{"lineNumber":368,"author":{"gitId":"punnyhuimin"},"content":"        2022` as the closest Thursday.","lastModifiedDate":"2022-04-09"},{"lineNumber":369,"author":{"gitId":"punnyhuimin"},"content":"     * Reason: `08:30` has already passed the current time, hence ReadyBakey will look for a future date that is a","lastModifiedDate":"2022-04-09"},{"lineNumber":370,"author":{"gitId":"punnyhuimin"},"content":"       Thursday instead.","lastModifiedDate":"2022-04-09"},{"lineNumber":371,"author":{"gitId":"punnyhuimin"},"content":"   * If the current time is `7th April 2022 09:30`, which is a Thursday, inputting `Thurs 10:30` will return `7th April 2022` as the closest Thursday.","lastModifiedDate":"2022-04-09"},{"lineNumber":372,"author":{"gitId":"punnyhuimin"},"content":"     * Reason: `10:30` has not passed the current time, hence ReadyBakey will look at the current day as the closest","lastModifiedDate":"2022-04-09"},{"lineNumber":373,"author":{"gitId":"punnyhuimin"},"content":"       Thursday.","lastModifiedDate":"2022-04-09"},{"lineNumber":374,"author":{"gitId":"punnyhuimin"},"content":"4) The person\u0027s phone number, address, email, name, and tags cannot be edited through this command.","lastModifiedDate":"2022-04-09"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":376,"author":{"gitId":"punnyhuimin"},"content":"### Listing all orders \u003ca name\u003d\"listo\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":378,"author":{"gitId":"punnyhuimin"},"content":"This feature allows users to get a list of all the orders that the user has inputted.","lastModifiedDate":"2022-04-09"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":380,"author":{"gitId":"punnyhuimin"},"content":"#### Implementation","lastModifiedDate":"2022-04-09"},{"lineNumber":381,"author":{"gitId":"punnyhuimin"},"content":"The list orders feature consists of one command, `ListOrderCommand`. It extends `Command`.","lastModifiedDate":"2022-04-09"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":383,"author":{"gitId":"punnyhuimin"},"content":"When the command is executed by calling the method `Command#execute()`, all orders will be returned out ","lastModifiedDate":"2022-04-09"},{"lineNumber":384,"author":{"gitId":"punnyhuimin"},"content":"through the use of a predicate. This would return a `FilteredList` of all the orders.","lastModifiedDate":"2022-04-09"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":386,"author":{"gitId":"punnyhuimin"},"content":"The following sequence diagram illustrates how the `listo` command will work:","lastModifiedDate":"2022-04-09"},{"lineNumber":387,"author":{"gitId":"punnyhuimin"},"content":"![ListOrderSequenceDiagram](images/ListOrderSequenceDiagram.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":389,"author":{"gitId":"punnyhuimin"},"content":"#### Design considerations","lastModifiedDate":"2022-04-09"},{"lineNumber":390,"author":{"gitId":"punnyhuimin"},"content":"1. `listo` when used with other inputs after it, will still work as per usual, which is to list the orders. ","lastModifiedDate":"2022-04-09"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":392,"author":{"gitId":"punnyhuimin"},"content":"### Find Incomplete Orders Before A Date Feature \u003ca name\u003d\"incompleteo\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":393,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":394,"author":{"gitId":"declanleeler"},"content":"This feature allows users to get a list of incomplete orders, sorted by datetime, for quick reference to orders that require attention.","lastModifiedDate":"2022-04-08"},{"lineNumber":395,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":396,"author":{"gitId":"punnyhuimin"},"content":"#### Implementation","lastModifiedDate":"2022-04-09"},{"lineNumber":397,"author":{"gitId":"declanleeler"},"content":"The `incompleteo` command takes in a date as a required parameter.","lastModifiedDate":"2022-04-08"},{"lineNumber":398,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":399,"author":{"gitId":"declanleeler"},"content":"When the command is executed, all orders that are incomplete and before or during the given datetime will be filtered out ","lastModifiedDate":"2022-04-08"},{"lineNumber":400,"author":{"gitId":"declanleeler"},"content":"through the use of a predicate. This would return out a `FilteredList` of the desired incomplete orders.","lastModifiedDate":"2022-04-08"},{"lineNumber":401,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":402,"author":{"gitId":"declanleeler"},"content":"From here, the orders in the `FilteredList` are wrapped in a `SortedList` sorted according to their datetimes with the use of a `orderDateComparator`. This returns a `SortedList`, which is finally","lastModifiedDate":"2022-04-08"},{"lineNumber":403,"author":{"gitId":"declanleeler"},"content":"returned back to the `LogicManager`.","lastModifiedDate":"2022-04-08"},{"lineNumber":404,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":405,"author":{"gitId":"declanleeler"},"content":"The following sequence diagram illustrates how the `incompleteo` command will work:","lastModifiedDate":"2022-04-08"},{"lineNumber":406,"author":{"gitId":"declanleeler"},"content":"![FindIncompleteOrdersSequenceDiagram](images/FindIncompleteOrdersSequenceDiagram.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":407,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":408,"author":{"gitId":"declanleeler"},"content":"#### Design considerations","lastModifiedDate":"2022-04-08"},{"lineNumber":409,"author":{"gitId":"declanleeler"},"content":"1. The predicate being used to filter the orders contains checks for both incomplete order status and delivery datetime being before or during the given date. ","lastModifiedDate":"2022-04-08"},{"lineNumber":410,"author":{"gitId":"declanleeler"},"content":"Alternatively, these 2 conditions could have been set up as a predicate each, which would potentially allow for easier reuse in future commands","lastModifiedDate":"2022-04-08"},{"lineNumber":411,"author":{"gitId":"declanleeler"},"content":"that might require just a incomplete order status predicate, or just a date checking predicate. However, it seemed challenging to chain 2 predicates sequentially,","lastModifiedDate":"2022-04-08"},{"lineNumber":412,"author":{"gitId":"declanleeler"},"content":"and so this idea was abandoned due to time constraints. It was far more efficient to simply create 1 predicate that checked for both conditions.","lastModifiedDate":"2022-04-08"},{"lineNumber":413,"author":{"gitId":"declanleeler"},"content":"2. The sorting functionality introduced a `SortedList` alongside `FilteredList` as a return type. This meant needing to refer to","lastModifiedDate":"2022-04-08"},{"lineNumber":414,"author":{"gitId":"declanleeler"},"content":"a common interface, `ObservableList`, wherever either were expected in the `LogicManager`.","lastModifiedDate":"2022-04-08"},{"lineNumber":415,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":416,"author":{"gitId":"punnyhuimin"},"content":"### Delete orders \u003ca name\u003d\"deleteo\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":417,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":418,"author":{"gitId":"onefangg"},"content":"This feature allows the user to delete orders from the application based on the index on the displayed list in the application.","lastModifiedDate":"2022-04-08"},{"lineNumber":419,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":420,"author":{"gitId":"punnyhuimin"},"content":"#### Implementation","lastModifiedDate":"2022-04-09"},{"lineNumber":421,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":422,"author":{"gitId":"punnyhuimin"},"content":"Deleting orders from the application will not affect Persons in the application. This is so an Order is linked to a ","lastModifiedDate":"2022-04-09"},{"lineNumber":423,"author":{"gitId":"punnyhuimin"},"content":"Person through the same phone number, which allows the Order to retrieve the person\u0027s name, phone number and address.","lastModifiedDate":"2022-04-09"},{"lineNumber":424,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":425,"author":{"gitId":"onefangg"},"content":"The following sequence diagram shows how the `deleteo` operation works:","lastModifiedDate":"2022-04-08"},{"lineNumber":426,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":427,"author":{"gitId":"onefangg"},"content":"![DeleteOrderSequence](images/DeleteOrderSequenceDiagram.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":428,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":429,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":430,"author":{"gitId":"punnyhuimin"},"content":"### Dynamic Toggling Between Application\u0027s Data \u003ca name\u003d\"dynamic-toggling\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":431,"author":{"gitId":"punnyhuimin"},"content":"#### Implementation","lastModifiedDate":"2022-04-09"},{"lineNumber":432,"author":{"gitId":"punnyhuimin"},"content":"Users must be able to view the specific data that they need, without excess data, just by working with the command line. For example, if the user is requesting Order information, they should not be distracted by Person information as well - only Order information can be shown.","lastModifiedDate":"2022-04-09"},{"lineNumber":433,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":434,"author":{"gitId":"punnyhuimin"},"content":"The ability to toggle through the application\u0027s data  is facilitated by `MainWindow` and `CommandResult`.","lastModifiedDate":"2022-04-09"},{"lineNumber":435,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":436,"author":{"gitId":"punnyhuimin"},"content":"In `MainWindow#executeCommand(String commandText)`, the type of `CommandResult` of the executed command is checked and the `MainWindow` then displays the appropriate information for the user.","lastModifiedDate":"2022-04-09"},{"lineNumber":437,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":438,"author":{"gitId":"punnyhuimin"},"content":"#### Design considerations:","lastModifiedDate":"2022-04-09"},{"lineNumber":439,"author":{"gitId":"punnyhuimin"},"content":"1. `CommandResult` requires boolean attributes that indicate what kind of command has been executed.","lastModifiedDate":"2022-04-09"},{"lineNumber":440,"author":{"gitId":"punnyhuimin"},"content":"    * isOrderCommand - boolean  indicating whether the command is related to orders","lastModifiedDate":"2022-04-09"},{"lineNumber":441,"author":{"gitId":"punnyhuimin"},"content":"    * isPersonCommand - boolean  indicating whether the command is related to persons","lastModifiedDate":"2022-04-09"},{"lineNumber":442,"author":{"gitId":"punnyhuimin"},"content":"    * isHelpCommand - boolean indicating whether the command is related to getting help","lastModifiedDate":"2022-04-09"},{"lineNumber":443,"author":{"gitId":"punnyhuimin"},"content":"    * isExitCommand - boolean indicating whether the command is to exit the application","lastModifiedDate":"2022-04-09"},{"lineNumber":444,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":445,"author":{"gitId":"punnyhuimin"},"content":"The following activity diagram summarizes what happens when a user executes the different types of commands:","lastModifiedDate":"2022-04-09"},{"lineNumber":446,"author":{"gitId":"punnyhuimin"},"content":"![DataTogglingActivityDiagram](images/DataTogglingActivityDiagram.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":448,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"Geralddtan"},"content":"## **Documentation, logging, testing, configuration, dev-ops** \u003ca name\u003d\"additional-information\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":454,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"Geralddtan"},"content":"## **Appendix: Requirements** \u003ca name\u003d\"requirements\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"punnyhuimin"},"content":"### Product scope \u003ca name\u003d\"product-scope\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"punnyhuimin"},"content":"* tech-savvy small bakery or home bakery owners","lastModifiedDate":"2022-03-05"},{"lineNumber":467,"author":{"gitId":"punnyhuimin"},"content":"* needs to track their customers and orders in a central application","lastModifiedDate":"2022-03-05"},{"lineNumber":468,"author":{"gitId":"punnyhuimin"},"content":"* needs to track details of the cake orders (e.g. Delivery or pickup, cakes ordered)","lastModifiedDate":"2022-03-05"},{"lineNumber":469,"author":{"gitId":"punnyhuimin"},"content":"* prefer CLI desktop apps over other types","lastModifiedDate":"2022-03-05"},{"lineNumber":470,"author":{"gitId":"punnyhuimin"},"content":"* enjoys typing instead of mouse interaction","lastModifiedDate":"2022-03-05"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":472,"author":{"gitId":"punnyhuimin"},"content":"**Value proposition**:","lastModifiedDate":"2022-03-05"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":474,"author":{"gitId":"punnyhuimin"},"content":"Handling multiple orders and inventory leads to a time sink. Having a central system management process allows bakers to","lastModifiedDate":"2022-03-05"},{"lineNumber":475,"author":{"gitId":"punnyhuimin"},"content":"focus on what\u0027s important -- _baking_. ","lastModifiedDate":"2022-03-05"},{"lineNumber":476,"author":{"gitId":"punnyhuimin"},"content":"* The application organises cake orders for its fulfilment. ","lastModifiedDate":"2022-03-05"},{"lineNumber":477,"author":{"gitId":"punnyhuimin"},"content":"* It also acts as a centralised and structured schedule manager, tracking an individuals\u0027 baking inventory needs.","lastModifiedDate":"2022-03-05"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"punnyhuimin"},"content":"### User stories \u003ca name\u003d\"user-story\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"| Priority | As a …​                                     | I want to …​                                                                            | So that I can…​                                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"Geralddtan"},"content":"|----------|---------------------------------------------|-----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":485,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                    | see usage instructions                                                                  | refer to instructions when I forget how to use the App                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"onefangg"},"content":"| `* *`    | new user unfamiliar with the interface      | get a list of commands available                                                        | know what commands are available                                                        |","lastModifiedDate":"2022-03-05"},{"lineNumber":487,"author":{"gitId":"-"},"content":"| `* * *`  | user                                        | add a new person                                                                        |                                                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"| `* * *`  | user                                        | delete a person                                                                         | remove entries that I no longer need                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"| `* * *`  | user                                        | find a person by name                                                                   | locate details of persons without having to go through the entire list                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"punnyhuimin"},"content":"| `* * *`  | user                                        | exit the application                                                                    | use my laptop without the program running in the background                             |","lastModifiedDate":"2022-03-02"},{"lineNumber":491,"author":{"gitId":"Geralddtan"},"content":"| `* * *`  | user with multiple orders                   | add orders with custom details such as order details, delivery date and collection type | keep track of all of my orders                                                          |","lastModifiedDate":"2022-03-24"},{"lineNumber":492,"author":{"gitId":"onefangg"},"content":"| `* * *`  | user                                        | delete orders                                                                           | remove orders in case a customer cancels their order                                    |","lastModifiedDate":"2022-03-05"},{"lineNumber":493,"author":{"gitId":"punnyhuimin"},"content":"| `* *`    | user                                        | hide private contact details                                                            | minimize chance of someone else seeing them by accident                                 |","lastModifiedDate":"2022-04-06"},{"lineNumber":494,"author":{"gitId":"punnyhuimin"},"content":"| `*`      | user with many customer in the address book | sort customer by name                                                                   | locate a person easily                                                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":495,"author":{"gitId":"onefangg"},"content":"| `* * *`  | home baker that has multiple customers      | clear all my data                                                                       | quickly remove demo info or restart my bakery data                                      |","lastModifiedDate":"2022-04-08"},{"lineNumber":496,"author":{"gitId":"punnyhuimin"},"content":"| `* * *`  | home baker that has multiple customers      | edit my customers                                                                       | edit their details if there are any changes to their address, phone number, email, name |","lastModifiedDate":"2022-03-02"},{"lineNumber":497,"author":{"gitId":"onefangg"},"content":"| `* *`    | home baker that has multiple orders         | edit my orders                                                                          | edit their details if there are any changes to their order                              |","lastModifiedDate":"2022-03-05"},{"lineNumber":498,"author":{"gitId":"punnyhuimin"},"content":"| `* * *`  | home baker that has multiple customers      | look at all my customers                                                                | access the information for different customers                                          |","lastModifiedDate":"2022-03-02"},{"lineNumber":499,"author":{"gitId":"punnyhuimin"},"content":"| `* * *`  | home baker that has multiple orders         | look at my orders                                                                       | access the attributes for different orders and see when it is due                       |","lastModifiedDate":"2022-03-02"},{"lineNumber":500,"author":{"gitId":"punnyhuimin"},"content":"| `* * *`  | home baker that has multiple orders         | mark the orders as complete or incomplete                                               | know which orders I have fulfilled or not                                               |","lastModifiedDate":"2022-03-02"},{"lineNumber":501,"author":{"gitId":"onefangg"},"content":"| `* *`    | home baker that has multiple orders         | get a view of unfinished orders for current day                                         | see urgent orders at a glance                                                           |","lastModifiedDate":"2022-03-05"},{"lineNumber":502,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":503,"author":{"gitId":"punnyhuimin"},"content":"### Use cases \u003ca name\u003d\"use-cases\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"Geralddtan"},"content":"(For all use cases below, the **System** is `ReadyBakey` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-28"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"onefangg"},"content":"**Use case: Add a customer**","lastModifiedDate":"2022-03-04"},{"lineNumber":508,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":509,"author":{"gitId":"onefangg"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":510,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":511,"author":{"gitId":"onefangg"},"content":"1. User requests to list customers","lastModifiedDate":"2022-03-04"},{"lineNumber":512,"author":{"gitId":"onefangg"},"content":"2. ReadyBakey shows a list of customers","lastModifiedDate":"2022-03-04"},{"lineNumber":513,"author":{"gitId":"onefangg"},"content":"3. User requests to add a customer into the list","lastModifiedDate":"2022-03-04"},{"lineNumber":514,"author":{"gitId":"onefangg"},"content":"4. ReadyBakey adds the customer into the list","lastModifiedDate":"2022-03-04"},{"lineNumber":515,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":516,"author":{"gitId":"onefangg"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":518,"author":{"gitId":"onefangg"},"content":"**Extensions**","lastModifiedDate":"2022-03-04"},{"lineNumber":519,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":520,"author":{"gitId":"onefangg"},"content":"* 3a.  Invalid parameters are passed into input","lastModifiedDate":"2022-03-04"},{"lineNumber":521,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":522,"author":{"gitId":"onefangg"},"content":"    * 3a1. ReadyBakey alerts user about invalid parameters.","lastModifiedDate":"2022-03-04"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":524,"author":{"gitId":"onefangg"},"content":"    * 3a2. User inputs new data.","lastModifiedDate":"2022-03-04"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":526,"author":{"gitId":"onefangg"},"content":"    * Steps 3a1-3a2 are repeated until data entered is correct.","lastModifiedDate":"2022-03-04"},{"lineNumber":527,"author":{"gitId":"onefangg"},"content":"    ","lastModifiedDate":"2022-03-04"},{"lineNumber":528,"author":{"gitId":"onefangg"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2022-03-04"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":530,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":531,"author":{"gitId":"darshan152"},"content":"**Use case: Delete a customer**","lastModifiedDate":"2022-03-02"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"darshan152"},"content":"1.  User requests to list customers","lastModifiedDate":"2022-03-02"},{"lineNumber":536,"author":{"gitId":"darshan152"},"content":"2.  ReadyBakey shows a list of customers","lastModifiedDate":"2022-03-02"},{"lineNumber":537,"author":{"gitId":"darshan152"},"content":"3.  User requests to delete a specific customer in the list","lastModifiedDate":"2022-03-02"},{"lineNumber":538,"author":{"gitId":"darshan152"},"content":"4.  ReadyBakey deletes the customer","lastModifiedDate":"2022-03-02"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"darshan152"},"content":"    * 3a1. ReadyBakey shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"Geralddtan"},"content":"**Use case: Mark an order as complete**","lastModifiedDate":"2022-02-28"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":556,"author":{"gitId":"Geralddtan"},"content":"**MSS**","lastModifiedDate":"2022-02-28"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":558,"author":{"gitId":"Geralddtan"},"content":"1.  User requests to list orders","lastModifiedDate":"2022-02-28"},{"lineNumber":559,"author":{"gitId":"Geralddtan"},"content":"2.  ReadyBakey shows a list of orders","lastModifiedDate":"2022-02-28"},{"lineNumber":560,"author":{"gitId":"Geralddtan"},"content":"3.  User requests to mark a specific order in the list as complete","lastModifiedDate":"2022-02-28"},{"lineNumber":561,"author":{"gitId":"Geralddtan"},"content":"4.  ReadyBakey marks the order as complete","lastModifiedDate":"2022-02-28"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":563,"author":{"gitId":"Geralddtan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-28"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":565,"author":{"gitId":"Geralddtan"},"content":"**Extensions**","lastModifiedDate":"2022-02-28"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":567,"author":{"gitId":"Geralddtan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-28"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":569,"author":{"gitId":"Geralddtan"},"content":"  Use case ends.","lastModifiedDate":"2022-02-28"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":571,"author":{"gitId":"Geralddtan"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-28"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":573,"author":{"gitId":"Geralddtan"},"content":"    * 3a1. ReadyBakey shows an error message.","lastModifiedDate":"2022-02-28"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":575,"author":{"gitId":"Geralddtan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-02-28"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":577,"author":{"gitId":"Geralddtan"},"content":"* 3b. The specified order is already marked as complete","lastModifiedDate":"2022-02-28"},{"lineNumber":578,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":579,"author":{"gitId":"Geralddtan"},"content":"    * 3b1. The order remains marked as complete","lastModifiedDate":"2022-04-08"},{"lineNumber":580,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":581,"author":{"gitId":"Geralddtan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-02-28"},{"lineNumber":582,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":583,"author":{"gitId":"Geralddtan"},"content":"**Use case: Mark an order as incomplete**","lastModifiedDate":"2022-02-28"},{"lineNumber":584,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":585,"author":{"gitId":"Geralddtan"},"content":"**MSS**","lastModifiedDate":"2022-02-28"},{"lineNumber":586,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":587,"author":{"gitId":"Geralddtan"},"content":"1.  User requests to list orders","lastModifiedDate":"2022-02-28"},{"lineNumber":588,"author":{"gitId":"Geralddtan"},"content":"2.  ReadyBakey shows a list of orders","lastModifiedDate":"2022-02-28"},{"lineNumber":589,"author":{"gitId":"Geralddtan"},"content":"3.  User requests to mark a specific order in the list as incomplete","lastModifiedDate":"2022-02-28"},{"lineNumber":590,"author":{"gitId":"Geralddtan"},"content":"4.  ReadyBakey marks the order as incomplete","lastModifiedDate":"2022-02-28"},{"lineNumber":591,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":592,"author":{"gitId":"Geralddtan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-28"},{"lineNumber":593,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":594,"author":{"gitId":"Geralddtan"},"content":"**Extensions**","lastModifiedDate":"2022-02-28"},{"lineNumber":595,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":596,"author":{"gitId":"Geralddtan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-28"},{"lineNumber":597,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":598,"author":{"gitId":"Geralddtan"},"content":"  Use case ends.","lastModifiedDate":"2022-02-28"},{"lineNumber":599,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":600,"author":{"gitId":"Geralddtan"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-28"},{"lineNumber":601,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":602,"author":{"gitId":"Geralddtan"},"content":"    * 3a1. ReadyBakey shows an error message.","lastModifiedDate":"2022-02-28"},{"lineNumber":603,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":604,"author":{"gitId":"Geralddtan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-02-28"},{"lineNumber":605,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":606,"author":{"gitId":"Geralddtan"},"content":"* 3b. The specified order is already marked as incomplete","lastModifiedDate":"2022-02-28"},{"lineNumber":607,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":608,"author":{"gitId":"Geralddtan"},"content":"    * 3b1. The order remains marked as incomplete","lastModifiedDate":"2022-04-08"},{"lineNumber":609,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":610,"author":{"gitId":"Geralddtan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-02-28"},{"lineNumber":611,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":612,"author":{"gitId":"onefangg"},"content":"**Use case: Clears all data in the application**","lastModifiedDate":"2022-04-08"},{"lineNumber":613,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":614,"author":{"gitId":"Geralddtan"},"content":"**MSS**","lastModifiedDate":"2022-02-28"},{"lineNumber":615,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":616,"author":{"gitId":"Geralddtan"},"content":"1. User requests to clear both order and customer data from the application","lastModifiedDate":"2022-04-08"},{"lineNumber":617,"author":{"gitId":"Geralddtan"},"content":"2. ReadyBakey clears both order and customer data from the application.","lastModifiedDate":"2022-04-08"},{"lineNumber":618,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":619,"author":{"gitId":"Geralddtan"},"content":"   Use case ends.","lastModifiedDate":"2022-02-28"},{"lineNumber":620,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":621,"author":{"gitId":"punnyhuimin"},"content":"**Use case: Exits the ReadyBakey program**","lastModifiedDate":"2022-03-01"},{"lineNumber":622,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":623,"author":{"gitId":"punnyhuimin"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":625,"author":{"gitId":"punnyhuimin"},"content":"1. User requests to exit the program.","lastModifiedDate":"2022-03-01"},{"lineNumber":626,"author":{"gitId":"punnyhuimin"},"content":"2. ReadyBakey says bye and closes the application.","lastModifiedDate":"2022-03-01"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":628,"author":{"gitId":"Geralddtan"},"content":"   Use case ends.","lastModifiedDate":"2022-02-28"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":630,"author":{"gitId":"punnyhuimin"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":631,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":632,"author":{"gitId":"punnyhuimin"},"content":"* 1a. User closes the program without using CLI.","lastModifiedDate":"2022-03-01"},{"lineNumber":633,"author":{"gitId":"punnyhuimin"},"content":"    * 1a1. ReadyBakey closes the application.","lastModifiedDate":"2022-03-01"},{"lineNumber":634,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":635,"author":{"gitId":"punnyhuimin"},"content":"**Use case: Locate customer by their name**","lastModifiedDate":"2022-03-01"},{"lineNumber":636,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":637,"author":{"gitId":"punnyhuimin"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":638,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":639,"author":{"gitId":"punnyhuimin"},"content":"1. User requests to find the customer by name in ReadyBakey.","lastModifiedDate":"2022-03-01"},{"lineNumber":640,"author":{"gitId":"punnyhuimin"},"content":"2. ReadyBakey finds the customers whose names match the requested customer.","lastModifiedDate":"2022-03-01"},{"lineNumber":641,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":642,"author":{"gitId":"punnyhuimin"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":643,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":644,"author":{"gitId":"punnyhuimin"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":645,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":646,"author":{"gitId":"punnyhuimin"},"content":"* 1a. ReadyBakey detects no customers that match the user\u0027s request.","lastModifiedDate":"2022-03-01"},{"lineNumber":647,"author":{"gitId":"punnyhuimin"},"content":"  * 1a1. ReadyBakey returns no results and queries user if the correct customer name has been entered.","lastModifiedDate":"2022-03-02"},{"lineNumber":648,"author":{"gitId":"punnyhuimin"},"content":"  * 1a2. User enters the correct customer name.","lastModifiedDate":"2022-03-01"},{"lineNumber":649,"author":{"gitId":"punnyhuimin"},"content":"  * Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-03-01"},{"lineNumber":650,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":651,"author":{"gitId":"punnyhuimin"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":652,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":653,"author":{"gitId":"punnyhuimin"},"content":"**Use case: Editing customer\u0027s address**","lastModifiedDate":"2022-03-01"},{"lineNumber":654,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":655,"author":{"gitId":"punnyhuimin"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":656,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":657,"author":{"gitId":"punnyhuimin"},"content":"1. User requests to edit specific customer\u0027s address.","lastModifiedDate":"2022-03-01"},{"lineNumber":658,"author":{"gitId":"punnyhuimin"},"content":"2. ReadyBakey edits the specified customer\u0027s address.","lastModifiedDate":"2022-03-01"},{"lineNumber":659,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":660,"author":{"gitId":"Geralddtan"},"content":"   Use case ends.","lastModifiedDate":"2022-02-28"},{"lineNumber":661,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":662,"author":{"gitId":"punnyhuimin"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":663,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":664,"author":{"gitId":"punnyhuimin"},"content":"* 1a. ReadyBakey detects no customers that match the user\u0027s request.","lastModifiedDate":"2022-03-01"},{"lineNumber":665,"author":{"gitId":"punnyhuimin"},"content":"    * 1a1. ReadyBakey requests for the correct customer index.","lastModifiedDate":"2022-03-02"},{"lineNumber":666,"author":{"gitId":"punnyhuimin"},"content":"    * 1a2. User enters the correct customer index.","lastModifiedDate":"2022-03-02"},{"lineNumber":667,"author":{"gitId":"punnyhuimin"},"content":"    * Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-03-01"},{"lineNumber":668,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":669,"author":{"gitId":"punnyhuimin"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":670,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":671,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":672,"author":{"gitId":"punnyhuimin"},"content":"**Use case: Editing customer\u0027s email address**","lastModifiedDate":"2022-03-01"},{"lineNumber":673,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":674,"author":{"gitId":"punnyhuimin"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":675,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":676,"author":{"gitId":"punnyhuimin"},"content":"1. User requests to edit specific customer\u0027s email address.","lastModifiedDate":"2022-03-01"},{"lineNumber":677,"author":{"gitId":"punnyhuimin"},"content":"2. ReadyBakey edits the specified customer\u0027s email address.","lastModifiedDate":"2022-03-01"},{"lineNumber":678,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":679,"author":{"gitId":"punnyhuimin"},"content":"Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":680,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":681,"author":{"gitId":"punnyhuimin"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":682,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":683,"author":{"gitId":"punnyhuimin"},"content":"* 1a. ReadyBakey detects no customers that match the user\u0027s request.","lastModifiedDate":"2022-03-01"},{"lineNumber":684,"author":{"gitId":"punnyhuimin"},"content":"    * 1a1. ReadyBakey requests for the correct customer index.","lastModifiedDate":"2022-03-02"},{"lineNumber":685,"author":{"gitId":"punnyhuimin"},"content":"    * 1a2. User enters the correct customer index.","lastModifiedDate":"2022-03-02"},{"lineNumber":686,"author":{"gitId":"punnyhuimin"},"content":"    * Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-03-01"},{"lineNumber":687,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":688,"author":{"gitId":"punnyhuimin"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":689,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":690,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":691,"author":{"gitId":"punnyhuimin"},"content":"**Use case: Editing customer\u0027s name**","lastModifiedDate":"2022-03-01"},{"lineNumber":692,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":693,"author":{"gitId":"punnyhuimin"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":694,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":695,"author":{"gitId":"punnyhuimin"},"content":"1. User requests to edit specific customer\u0027s name.","lastModifiedDate":"2022-03-01"},{"lineNumber":696,"author":{"gitId":"punnyhuimin"},"content":"2. ReadyBakey edits the specified customer\u0027s name.","lastModifiedDate":"2022-03-01"},{"lineNumber":697,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":698,"author":{"gitId":"punnyhuimin"},"content":"Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":699,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":700,"author":{"gitId":"punnyhuimin"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":701,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":702,"author":{"gitId":"punnyhuimin"},"content":"* 1a. ReadyBakey detects no customers that match the user\u0027s request.","lastModifiedDate":"2022-03-01"},{"lineNumber":703,"author":{"gitId":"punnyhuimin"},"content":"    * 1a1. ReadyBakey requests for the correct customer index.","lastModifiedDate":"2022-03-02"},{"lineNumber":704,"author":{"gitId":"punnyhuimin"},"content":"    * 1a2. User enters the correct customer index.","lastModifiedDate":"2022-03-02"},{"lineNumber":705,"author":{"gitId":"punnyhuimin"},"content":"    * Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-03-01"},{"lineNumber":706,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":707,"author":{"gitId":"punnyhuimin"},"content":"       Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":708,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":709,"author":{"gitId":"punnyhuimin"},"content":"**Use case: Editing customer\u0027s phone number**","lastModifiedDate":"2022-03-01"},{"lineNumber":710,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":711,"author":{"gitId":"punnyhuimin"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":712,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":713,"author":{"gitId":"punnyhuimin"},"content":"1. User requests to edit specific customer\u0027s phone number.","lastModifiedDate":"2022-03-01"},{"lineNumber":714,"author":{"gitId":"punnyhuimin"},"content":"2. ReadyBakey edits the specified customer\u0027s phone number.","lastModifiedDate":"2022-03-01"},{"lineNumber":715,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":716,"author":{"gitId":"punnyhuimin"},"content":"Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":718,"author":{"gitId":"punnyhuimin"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":719,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":720,"author":{"gitId":"punnyhuimin"},"content":"* 1a. ReadyBakey detects no customers that match the user\u0027s request.","lastModifiedDate":"2022-03-01"},{"lineNumber":721,"author":{"gitId":"punnyhuimin"},"content":"    * 1a1. ReadyBakey requests for the correct customer index.","lastModifiedDate":"2022-03-02"},{"lineNumber":722,"author":{"gitId":"punnyhuimin"},"content":"    * 1a2. User enters the correct customer index.","lastModifiedDate":"2022-03-02"},{"lineNumber":723,"author":{"gitId":"punnyhuimin"},"content":"    * Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-03-01"},{"lineNumber":724,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":725,"author":{"gitId":"punnyhuimin"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-01"},{"lineNumber":726,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":727,"author":{"gitId":"declanleeler"},"content":"**Use case: List all Customers**","lastModifiedDate":"2022-03-01"},{"lineNumber":728,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":729,"author":{"gitId":"declanleeler"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":730,"author":{"gitId":"declanleeler"},"content":"1. User requests to list all customers","lastModifiedDate":"2022-03-01"},{"lineNumber":731,"author":{"gitId":"declanleeler"},"content":"2. ReadyBakey shows a list of customers","lastModifiedDate":"2022-03-01"},{"lineNumber":732,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":733,"author":{"gitId":"declanleeler"},"content":"    Use case ends","lastModifiedDate":"2022-03-01"},{"lineNumber":734,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":735,"author":{"gitId":"declanleeler"},"content":"**Use case: List all Orders**","lastModifiedDate":"2022-03-01"},{"lineNumber":736,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":737,"author":{"gitId":"declanleeler"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":738,"author":{"gitId":"declanleeler"},"content":"1. User requests to list all orders","lastModifiedDate":"2022-03-01"},{"lineNumber":739,"author":{"gitId":"declanleeler"},"content":"2. ReadyBakey shows a list of orders","lastModifiedDate":"2022-03-01"},{"lineNumber":740,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":741,"author":{"gitId":"declanleeler"},"content":"    Use case ends","lastModifiedDate":"2022-03-01"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":743,"author":{"gitId":"onefangg"},"content":"**Use case: Add an Order**","lastModifiedDate":"2022-03-04"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":745,"author":{"gitId":"onefangg"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":746,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":747,"author":{"gitId":"onefangg"},"content":"1.  User requests to list orders","lastModifiedDate":"2022-03-04"},{"lineNumber":748,"author":{"gitId":"onefangg"},"content":"2.  ReadyBakey shows a list of orders","lastModifiedDate":"2022-03-04"},{"lineNumber":749,"author":{"gitId":"onefangg"},"content":"3.  User requests to add a new order in the list","lastModifiedDate":"2022-03-04"},{"lineNumber":750,"author":{"gitId":"onefangg"},"content":"4.  ReadyBakey adds the order","lastModifiedDate":"2022-03-04"},{"lineNumber":751,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":752,"author":{"gitId":"onefangg"},"content":"    Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":753,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":754,"author":{"gitId":"onefangg"},"content":"**Extensions**","lastModifiedDate":"2022-03-04"},{"lineNumber":755,"author":{"gitId":"onefangg"},"content":"* 3a.  Invalid parameters are passed into input","lastModifiedDate":"2022-03-04"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":757,"author":{"gitId":"onefangg"},"content":"    * 3a1. ReadyBakey alerts user about invalid parameters.","lastModifiedDate":"2022-03-04"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":759,"author":{"gitId":"onefangg"},"content":"    * 3a2. User inputs new data.","lastModifiedDate":"2022-03-04"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":761,"author":{"gitId":"onefangg"},"content":"    * Steps 3a1-3a2 are repeated until data entered is correct.","lastModifiedDate":"2022-03-04"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":763,"author":{"gitId":"onefangg"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2022-03-04"},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":765,"author":{"gitId":"punnyhuimin"},"content":"**Use case: Edit an Order**","lastModifiedDate":"2022-04-09"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":767,"author":{"gitId":"punnyhuimin"},"content":"**MSS**","lastModifiedDate":"2022-04-09"},{"lineNumber":768,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":769,"author":{"gitId":"punnyhuimin"},"content":"1.  User requests to list orders","lastModifiedDate":"2022-04-09"},{"lineNumber":770,"author":{"gitId":"punnyhuimin"},"content":"2.  ReadyBakey shows a list of orders","lastModifiedDate":"2022-04-09"},{"lineNumber":771,"author":{"gitId":"punnyhuimin"},"content":"3.  User requests to edit a specific order in the list","lastModifiedDate":"2022-04-09"},{"lineNumber":772,"author":{"gitId":"punnyhuimin"},"content":"4.  ReadyBakey edits the order","lastModifiedDate":"2022-04-09"},{"lineNumber":773,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":774,"author":{"gitId":"punnyhuimin"},"content":"    Use case ends.","lastModifiedDate":"2022-04-09"},{"lineNumber":775,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":776,"author":{"gitId":"punnyhuimin"},"content":"**Extensions**","lastModifiedDate":"2022-04-09"},{"lineNumber":777,"author":{"gitId":"punnyhuimin"},"content":"* 3a.  Invalid parameters are passed into input","lastModifiedDate":"2022-04-09"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":779,"author":{"gitId":"punnyhuimin"},"content":"    * 3a1. ReadyBakey alerts user about invalid parameters.","lastModifiedDate":"2022-04-09"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":781,"author":{"gitId":"punnyhuimin"},"content":"    * 3a2. User inputs new data.","lastModifiedDate":"2022-04-09"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":783,"author":{"gitId":"punnyhuimin"},"content":"    * Steps 3a1-3a2 are repeated until data entered is correct.","lastModifiedDate":"2022-04-09"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":785,"author":{"gitId":"punnyhuimin"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2022-04-09"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":788,"author":{"gitId":"darshan152"},"content":"**Use case: Delete an Order**","lastModifiedDate":"2022-03-02"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":790,"author":{"gitId":"darshan152"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":791,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":792,"author":{"gitId":"darshan152"},"content":"1.  User requests to list orders","lastModifiedDate":"2022-03-02"},{"lineNumber":793,"author":{"gitId":"darshan152"},"content":"2.  ReadyBakey shows a list of orders","lastModifiedDate":"2022-03-02"},{"lineNumber":794,"author":{"gitId":"darshan152"},"content":"3.  User requests to delete a specific order in the list","lastModifiedDate":"2022-03-02"},{"lineNumber":795,"author":{"gitId":"onefangg"},"content":"4.  ReadyBakey deletes the order","lastModifiedDate":"2022-03-04"},{"lineNumber":796,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":797,"author":{"gitId":"darshan152"},"content":"    Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":798,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":799,"author":{"gitId":"darshan152"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":800,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":801,"author":{"gitId":"darshan152"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-02"},{"lineNumber":802,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":803,"author":{"gitId":"darshan152"},"content":"  Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":804,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":805,"author":{"gitId":"darshan152"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":806,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":807,"author":{"gitId":"darshan152"},"content":"    * 3a1. ReadyBakey shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":808,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":809,"author":{"gitId":"darshan152"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-02"},{"lineNumber":810,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":811,"author":{"gitId":"punnyhuimin"},"content":"### Non-Functional Requirements \u003ca name\u003d\"nfr\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"Geralddtan"},"content":"2. Should be able to hold up to 500 customers without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-28"},{"lineNumber":815,"author":{"gitId":"Geralddtan"},"content":"3. Should be able to hold up to 500 orders without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-28"},{"lineNumber":816,"author":{"gitId":"punnyhuimin"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2022-03-01"},{"lineNumber":817,"author":{"gitId":"punnyhuimin"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-01"},{"lineNumber":818,"author":{"gitId":"Geralddtan"},"content":"5. The system should be usable by a novice who has never used an order management system before.","lastModifiedDate":"2022-02-28"},{"lineNumber":819,"author":{"gitId":"Geralddtan"},"content":"6. The system should respond within five seconds.","lastModifiedDate":"2022-02-28"},{"lineNumber":820,"author":{"gitId":"Geralddtan"},"content":"7. The product is not required to handle the contacting of customers.","lastModifiedDate":"2022-02-28"},{"lineNumber":821,"author":{"gitId":"Geralddtan"},"content":"8. The product is not required to handle the optimisation of orders fulfilment","lastModifiedDate":"2022-02-28"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"punnyhuimin"},"content":"### Glossary \u003ca name\u003d\"glossary\"/\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"darshan152":66,"Geralddtan":117,"onefangg":60,"declanleeler":38,"-":252,"punnyhuimin":295}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"1. [Setting up the project in your computer](#setting-up)","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"2. [Before writing code](#writing-code)","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"## Setting up the project in your computer \u003ca name\u003d\"setting-up\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"First, **fork** [this](https://github.com/AY2122S2-CS2103-F09-4/tp) repo, and **clone** the fork into your computer.","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"## Before writing code \u003ca name\u003d\"writing-code\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Geralddtan":5,"-":51}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"ReadyBakey is a **desktop app that manages orders and customer contact information, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). It assists small bakeries by consolidating all the necessary requirements and information for successful order management.","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"# Table of Contents","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"2. [Features](#features)","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"   * [Viewing help : help](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#viewing-help--help)","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"   * Person Commands","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"     * [Adding a customer: addp](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#adding-a-customer-addp)","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"     * [Delete a customer: deletep](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#delete-a-customer-deletep)","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * [Listing all customers: listp](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#listing-all-customers-listp)","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * [Editing a customer\u0027s information : editp](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#editing-a-customers-information--editp)","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"     * [Locating customers by specific attribute: findp](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#locating-customers-by-specific-attribute-findp)","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"   * Order Commands","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * [Adding an order : addo](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#adding-an-order--addo)","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     * [Delete an order: deleteo](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#delete-an-order-deleteo)","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"     * [Listing all orders: listo](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#listing-all-orders-listo)","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"     * [Editing an order\u0027s information : edito](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#editing-an-orders-information--edito)","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"     * [Locating orders by specific attribute: findo](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#locating-orders-by-specific-attribute-findo)","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"     * [Mark orders as Complete: marko](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#mark-orders-as-complete-marko)","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"     * [Unmark orders as incomplete: unmarko](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#unmark-orders-as-incomplete-unmarko)","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"     * [Listing all incomplete orders: incompleteo](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#listing-all-incomplete-orders-incompleteo)","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"   * [Clearing all Customers and Orders: clear](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#clearing-all-customers-and-orders-clear)","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"   * [Exiting the program : exit](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#exiting-the-program--exit)","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"   * [Using Natural Dates](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#using-natural-dates)","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"   * [Saving the data](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#saving-the-data)","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"   * [Editing the data file](https://github.com/declanleeler/tp/blob/master/docs/UserGuide.md#editing-the-data-file)","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"3. [FAQ](#faq)","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"4. [Command Summary](#command-summary)","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"## Quick start \u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"2. Download the latest `readybakey.jar` from [here](https://github.com/AY2122S2-CS2103-F09-4/tp/releases).","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your ReadyBakey.","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"4. Open a command window in that folder","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"5. Run the command `java -jar readybakey.jar`  (i.e., run the command in the same folder as the jar file) ","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"6. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"7. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"  * **`listo`** : Lists all orders.","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"  * **`addp`**`n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25` : Adds a customer named `John Doe` to ReadyBakey’s contact list together with the necessary phone number, email and address.","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"  * **`deletep`**`3` : Deletes the 3rd customer from ReadyBakey’s contact list.","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"  * **`clear`** : Clears all data in ReadyBakey.","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"## Features \u003ca name\u003d\"features\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"onefangg"},"content":"* Command keywords i.e. `addo` `editp`, has to be in lowercase.","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"onefangg"},"content":"  e.g. `addo ...` is an acceptable keyword, but `ADDO..` is not acceptable.","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"* Prefixes used in command input has to be in lowercase.","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"  e.g. `add n/NAME...`, uses `n/` but `N/` is not acceptable.","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":96,"author":{"gitId":"onefangg"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `listo`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"declanleeler"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"darshan152"},"content":"### Adding a customer: `addp`","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"darshan152"},"content":"Adds a customer to ReadyBakey’s contact list","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"* A customer\u0027s name and phone number must not have appeared in ReadyBakey\u0027s customer list. If it is not unique, you ","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"  will not be allowed to add the customer.","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"declanleeler"},"content":"Format: `addp n/NAME p/PHONE e/EMAIL a/ADDRESS [r/REMARK] [t/TAG]…`","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"* Names must be between 2 and 50 characters long and must only contain alphanumeric characters and spaces.","lastModifiedDate":"2022-04-01"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"* The length of the `PHONE` must be between 3 and 15 numbers.","lastModifiedDate":"2022-04-01"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"  * It does not allow for spaces or dashes as well.","lastModifiedDate":"2022-04-01"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"* The length of the `EMAIL` must be between 6 and 50 characters.","lastModifiedDate":"2022-04-01"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"  * It should be in the format `local-part@domain` and adhere to the following constraints:","lastModifiedDate":"2022-04-01"},{"lineNumber":121,"author":{"gitId":"onefangg"},"content":"    1. The local-part should only contain alphanumeric characters and these special characters (+_.-), excluding","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"onefangg"},"content":"       the parentheses. The local-part may not start or end with any special characters.","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"      1. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by","lastModifiedDate":"2022-04-01"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"         periods.","lastModifiedDate":"2022-04-01"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"    2. The domain name must:","lastModifiedDate":"2022-04-01"},{"lineNumber":126,"author":{"gitId":"punnyhuimin"},"content":"      - end with a domain label at least 2 characters long","lastModifiedDate":"2022-04-01"},{"lineNumber":127,"author":{"gitId":"punnyhuimin"},"content":"      - have each domain label start and end with alphanumeric characters","lastModifiedDate":"2022-04-01"},{"lineNumber":128,"author":{"gitId":"punnyhuimin"},"content":"      - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2022-04-01"},{"lineNumber":129,"author":{"gitId":"onefangg"},"content":"* The length of the `ADDRESS` must be between 6 (inclusive) and 70 (inclusive) characters.","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"onefangg"},"content":"  * E.g. Keying in `a/short1` is acceptable but not `a/short`.","lastModifiedDate":"2022-04-06"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"* The length of the `REMARK` must be less than or equal to 70 characters.","lastModifiedDate":"2022-04-01"},{"lineNumber":132,"author":{"gitId":"darshan152"},"content":"* The length of a tag must be less than or equal to 70 characters.","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"darshan152"},"content":"  * The tag prefix cannot be left empty E.g.`t/`, an error will be thrown to the user.","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"darshan152"},"content":"Examples:","lastModifiedDate":"2022-02-24"},{"lineNumber":136,"author":{"gitId":"Geralddtan"},"content":"* `addp n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 r/Allergic to Peanuts t/friends t/owesMoney`","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"darshan152"},"content":"### Delete a customer: `deletep`","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"darshan152"},"content":"Removes a customer from ReadyBakey’s contact list ","lastModifiedDate":"2022-02-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"darshan152"},"content":"Format: `deletep INDEX`","lastModifiedDate":"2022-02-24"},{"lineNumber":142,"author":{"gitId":"declanleeler"},"content":"* Deletes the customer at the specified INDEX.","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"declanleeler"},"content":"* The index refers to the index number shown in the displayed customer list.","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"darshan152"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-02-24"},{"lineNumber":145,"author":{"gitId":"declanleeler"},"content":"* Only customers with no orders can be deleted.","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"darshan152"},"content":"* `deletep 2`","lastModifiedDate":"2022-02-24"},{"lineNumber":149,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":150,"author":{"gitId":"darshan152"},"content":"### Listing all customers: `listp`","lastModifiedDate":"2022-02-24"},{"lineNumber":151,"author":{"gitId":"darshan152"},"content":"Shows a list of all customers in ReadyBakey’s contact list","lastModifiedDate":"2022-02-24"},{"lineNumber":152,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"darshan152"},"content":"Format: `listp`","lastModifiedDate":"2022-02-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"darshan152"},"content":"Examples:","lastModifiedDate":"2022-02-24"},{"lineNumber":156,"author":{"gitId":"darshan152"},"content":"* `listp`","lastModifiedDate":"2022-02-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"punnyhuimin"},"content":"### Editing a customer\u0027s information : `editp`","lastModifiedDate":"2022-02-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"punnyhuimin"},"content":"Edits an existing customer in ReadyBakey\u0027s contact list.","lastModifiedDate":"2022-02-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"declanleeler"},"content":"Format: `editp INDEX (must be a positive integer) [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/REMARK] [t/TAG]…`","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"punnyhuimin"},"content":"* Edits the customer at the specified `INDEX`. The index refers to the index number shown in the displayed customer list. ","lastModifiedDate":"2022-04-01"},{"lineNumber":165,"author":{"gitId":"punnyhuimin"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"punnyhuimin"},"content":"* Names must be between 2 and 50 characters long and must only contain alphanumeric characters and spaces.","lastModifiedDate":"2022-04-01"},{"lineNumber":169,"author":{"gitId":"declanleeler"},"content":"* The length of the `PHONE` must be 3 to 15 numbers","lastModifiedDate":"2022-04-01"},{"lineNumber":170,"author":{"gitId":"punnyhuimin"},"content":"* The length of the `EMAIL` must be between 6 and 50 characters.","lastModifiedDate":"2022-04-01"},{"lineNumber":171,"author":{"gitId":"punnyhuimin"},"content":"  * It should be in the format `local-part@domain` and adhere to the following constraints:","lastModifiedDate":"2022-04-01"},{"lineNumber":172,"author":{"gitId":"punnyhuimin"},"content":"    1. The local-part should only contain alphanumeric characters and these special characters, excluding","lastModifiedDate":"2022-04-01"},{"lineNumber":173,"author":{"gitId":"punnyhuimin"},"content":"       the parentheses, (+_.-). The local-part may not start or end with any special characters.","lastModifiedDate":"2022-04-01"},{"lineNumber":174,"author":{"gitId":"punnyhuimin"},"content":"    1. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by","lastModifiedDate":"2022-04-01"},{"lineNumber":175,"author":{"gitId":"punnyhuimin"},"content":"       periods.","lastModifiedDate":"2022-04-01"},{"lineNumber":176,"author":{"gitId":"punnyhuimin"},"content":"    2. The domain name must:","lastModifiedDate":"2022-04-01"},{"lineNumber":177,"author":{"gitId":"punnyhuimin"},"content":"    - end with a domain label at least 2 characters long","lastModifiedDate":"2022-04-01"},{"lineNumber":178,"author":{"gitId":"punnyhuimin"},"content":"    - have each domain label start and end with alphanumeric characters","lastModifiedDate":"2022-04-01"},{"lineNumber":179,"author":{"gitId":"punnyhuimin"},"content":"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2022-04-01"},{"lineNumber":180,"author":{"gitId":"punnyhuimin"},"content":"* The length of the `ADDRESS` must be between 6 and 70 characters","lastModifiedDate":"2022-04-01"},{"lineNumber":181,"author":{"gitId":"declanleeler"},"content":"* The length of the `REMARK` must be less than or equal to 70 characters","lastModifiedDate":"2022-04-01"},{"lineNumber":182,"author":{"gitId":"darshan152"},"content":"* The length of a tag must be less than or equal to 70 characters.","lastModifiedDate":"2022-04-07"},{"lineNumber":183,"author":{"gitId":"darshan152"},"content":"  * If the tag prefix is left empty E.g. `t/`, it will remove all tags that are currently associated to the person","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"darshan152"},"content":"  * If any tags are provided, existing tags will be removed and replaced by the tags provided","lastModifiedDate":"2022-04-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"punnyhuimin"},"content":"*  `editp 1 p/83456789 e/declan@example.com` Edits the phone number and email address of the 1st customer to be `83456789` and `declan@example.com` respectively.","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"punnyhuimin"},"content":"*  `editp 2 n/Declan` Edits the name of the 2nd customer to be `Declan`.","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"onefangg"},"content":"### Locating customers by specific attribute: `findp`","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"punnyhuimin"},"content":"Finds customer(s) whose name(s) contain any of the given keywords.","lastModifiedDate":"2022-02-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"onefangg"},"content":"Format: `findp [ATTRIBUTE] KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"onefangg"},"content":"* The supported attributes are `n/`, `p/`, `e/`, `a/`, `r/`","lastModifiedDate":"2022-03-31"},{"lineNumber":197,"author":{"gitId":"declanleeler"},"content":"* The search is case-insensitive. e.g `gerald` will match `Gerald`","lastModifiedDate":"2022-03-05"},{"lineNumber":198,"author":{"gitId":"declanleeler"},"content":"* The order of the keywords does not matter. e.g. `Gerald Tan` will match `Tan Gerald`","lastModifiedDate":"2022-03-05"},{"lineNumber":199,"author":{"gitId":"onefangg"},"content":"* Only the attribute specified is searched.","lastModifiedDate":"2022-03-31"},{"lineNumber":200,"author":{"gitId":"onefangg"},"content":"  * Multiple attributes searching at the same time is not allowed. e.g. `findp n/Gerald r/Allergic`","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"punnyhuimin"},"content":"* Multiple `[KEYWORDS]` provided will be split up by whitespace and searched individually","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"onefangg"},"content":"  * `findp n/Declan Gerald` will search for both `Declan` and `Gerald`","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"declanleeler"},"content":"* Only full words will be matched e.g. `Gerald` will not match `Geralds`","lastModifiedDate":"2022-03-05"},{"lineNumber":204,"author":{"gitId":"declanleeler"},"content":"* Customers matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"declanleeler"},"content":"  e.g. `Gerald Tan` will return `Gerald Lim`, `Gerald Lee`","lastModifiedDate":"2022-03-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"onefangg"},"content":"* `findp n/Gerald` returns `gerald` and `Gerald Tan`","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"onefangg"},"content":"* `findp n/alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2022-03-31"},{"lineNumber":210,"author":{"gitId":"onefangg"},"content":"* `findp p/90029382` returns `90029382`","lastModifiedDate":"2022-03-31"},{"lineNumber":211,"author":{"gitId":"onefangg"},"content":"* `findp e/alex@abc.com` returns `alex@abc.com`","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"onefangg"},"content":"* `findp a/serangoon` returns `Blk 1 Serangoon Street 5`","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"onefangg"},"content":"* `findp r/Allergic` returns `Allergic to Tomatoes`\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"declanleeler"},"content":"### Adding an order : `addo`","lastModifiedDate":"2022-02-25"},{"lineNumber":216,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":217,"author":{"gitId":"Geralddtan"},"content":"Adds an order to ReadyBakey’s order list.","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":219,"author":{"gitId":"declanleeler"},"content":"Format: `addo p/PHONE d/DETAILS c/DELIVERYDATETIME m/COLLECTION_TYPE [r/REMARK]…`","lastModifiedDate":"2022-04-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":222,"author":{"gitId":"declanleeler"},"content":"* `addo p/98765432 d/1: Jerry Favourite Cheese Cake c/25-12-2022 15:30 m/Delivery r/Add Cheese`","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"Geralddtan"},"content":"* `p/PHONE` must be a phone number that is already stored in ReadyBakey\u0027s person list","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"Geralddtan"},"content":"* `c/DELIVERYDATETIME` accepts dates in the past for record keeping purposes","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"punnyhuimin"},"content":"  * It accepts datetimes in the form of `dd-mm-yyyy HH:mm`. e.g. `01-01-2022 10:30`.","lastModifiedDate":"2022-03-31"},{"lineNumber":226,"author":{"gitId":"punnyhuimin"},"content":"  * It can also accept natural dates with time. e.g. `Monday 10:30` or `Mon 10:30`. Natural dates are not","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"punnyhuimin"},"content":"    case-sensitive.","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"Geralddtan"},"content":"* `d/DETAILS` accept values in the form [quantity]:[description]. It can also take in multiple details","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"onefangg"},"content":"  * A single Order accepts a single detail and up to 5 maximum details.","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"onefangg"},"content":"  * [quantity] is an integer that belongs to a range between 1 to 99.","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"onefangg"},"content":"  * [description] cannot exceed the maximum length of 30 characters.","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"Geralddtan"},"content":"  * `addo p/98765432 r/Add Cheese d/1:Chocolate Cake d/5:Banana Cake c/25-12-2022 15:30 m/Delivery`","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"declanleeler"},"content":"* `m/COLLECTION_TYPE` only accepts [delivery OR pickup] (case-insensitive)","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":235,"author":{"gitId":"declanleeler"},"content":"### Delete an order: `deleteo`","lastModifiedDate":"2022-02-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":237,"author":{"gitId":"declanleeler"},"content":"Removes an order from ReadyBakey","lastModifiedDate":"2022-02-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":239,"author":{"gitId":"declanleeler"},"content":"Format: `deleteo INDEX`","lastModifiedDate":"2022-02-25"},{"lineNumber":240,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":241,"author":{"gitId":"declanleeler"},"content":"* Deletes the order at the specified INDEX","lastModifiedDate":"2022-02-25"},{"lineNumber":242,"author":{"gitId":"declanleeler"},"content":"* The index refers to the index number shown in the displayed orders list.","lastModifiedDate":"2022-02-25"},{"lineNumber":243,"author":{"gitId":"declanleeler"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-02-25"},{"lineNumber":244,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":245,"author":{"gitId":"declanleeler"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":246,"author":{"gitId":"declanleeler"},"content":"* `deleteo 2`","lastModifiedDate":"2022-02-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":248,"author":{"gitId":"Geralddtan"},"content":"### Listing all orders: `listo`","lastModifiedDate":"2022-02-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":250,"author":{"gitId":"declanleeler"},"content":"Shows a list of all orders in ReadyBakey","lastModifiedDate":"2022-02-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":252,"author":{"gitId":"declanleeler"},"content":"Format: `listo`","lastModifiedDate":"2022-02-25"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":254,"author":{"gitId":"declanleeler"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":255,"author":{"gitId":"declanleeler"},"content":"* `listo`","lastModifiedDate":"2022-02-25"},{"lineNumber":256,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":257,"author":{"gitId":"declanleeler"},"content":"### Editing an order\u0027s information : `edito`","lastModifiedDate":"2022-04-08"},{"lineNumber":258,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"declanleeler"},"content":"Edits an existing customer in ReadyBakey\u0027s contact list.","lastModifiedDate":"2022-04-08"},{"lineNumber":260,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"darshan152"},"content":"Format: `edito INDEX [c/DELIVERYDATETIME] [m/COLLECTION_TYPE] [r/REMARKS] [d/DETAILS]…`","lastModifiedDate":"2022-04-08"},{"lineNumber":262,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":263,"author":{"gitId":"declanleeler"},"content":"* Edits the order at the specified `INDEX`. The index refers to the index number shown in the displayed order list.","lastModifiedDate":"2022-04-08"},{"lineNumber":264,"author":{"gitId":"declanleeler"},"content":"  * The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-04-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-04-08"},{"lineNumber":267,"author":{"gitId":"punnyhuimin"},"content":"* It accepts datetimes in the form of `dd-mm-yyyy HH:mm`. e.g. `01-01-2022 10:30`.","lastModifiedDate":"2022-03-31"},{"lineNumber":268,"author":{"gitId":"punnyhuimin"},"content":"* It can also accept natural dates with time. e.g. `Monday 10:30` or `Mon 10:30`. Natural dates are not","lastModifiedDate":"2022-03-31"},{"lineNumber":269,"author":{"gitId":"punnyhuimin"},"content":"  case-sensitive.","lastModifiedDate":"2022-03-31"},{"lineNumber":270,"author":{"gitId":"declanleeler"},"content":"* It accepts dates in the past for record keeping purposes","lastModifiedDate":"2022-04-08"},{"lineNumber":271,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":272,"author":{"gitId":"declanleeler"},"content":"Examples:","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"declanleeler"},"content":"* `edito 1 d/1: black forest cake`","lastModifiedDate":"2022-04-08"},{"lineNumber":274,"author":{"gitId":"declanleeler"},"content":"  * Edits the details of the 1st order to be `1: black forest cake`.","lastModifiedDate":"2022-04-08"},{"lineNumber":275,"author":{"gitId":"declanleeler"},"content":"* `edito 1 d/1: black forest cake d/2: Chocolate Cake`","lastModifiedDate":"2022-04-08"},{"lineNumber":276,"author":{"gitId":"declanleeler"},"content":"  * Edits the details of the 1st order to be `1: black forest","lastModifiedDate":"2022-04-08"},{"lineNumber":277,"author":{"gitId":"declanleeler"},"content":"    cake` and `2: Chocolate Cake`.","lastModifiedDate":"2022-04-08"},{"lineNumber":278,"author":{"gitId":"declanleeler"},"content":"    * In this case, to add two details to the order, each `d/` is for one detail.","lastModifiedDate":"2022-04-08"},{"lineNumber":279,"author":{"gitId":"declanleeler"},"content":"* `edito 2 r/Two candles`","lastModifiedDate":"2022-04-08"},{"lineNumber":280,"author":{"gitId":"declanleeler"},"content":"  * Edits the 2nd order\u0027s remarks to be `Two candles`.","lastModifiedDate":"2022-04-08"},{"lineNumber":281,"author":{"gitId":"declanleeler"},"content":"* `edito 2 m/Delivery`","lastModifiedDate":"2022-04-08"},{"lineNumber":282,"author":{"gitId":"declanleeler"},"content":"  * Edits the 2nd order\u0027s collection type to be `Delivery`.","lastModifiedDate":"2022-04-08"},{"lineNumber":283,"author":{"gitId":"declanleeler"},"content":"* `edito 3 c/Monday 10:30`","lastModifiedDate":"2022-04-08"},{"lineNumber":284,"author":{"gitId":"declanleeler"},"content":"  * Edits the 3rd order\u0027s collection time to be `Monday, 04 Apr 2022, 10:30`.","lastModifiedDate":"2022-04-08"},{"lineNumber":285,"author":{"gitId":"declanleeler"},"content":"* `edito 3 c/04-04-2022 10:30`","lastModifiedDate":"2022-04-08"},{"lineNumber":286,"author":{"gitId":"declanleeler"},"content":"  * Edits the 3rd order\u0027s collection time to be `Monday, 04 Apr 2022, 10:30`.","lastModifiedDate":"2022-04-08"},{"lineNumber":287,"author":{"gitId":"declanleeler"},"content":"* `edito 1 d/1: black forest cake d/1: Cheese cake c/04-04-2022 10:30 m/Delivery r/Two candles`","lastModifiedDate":"2022-04-08"},{"lineNumber":288,"author":{"gitId":"declanleeler"},"content":"  * Edits the first order to have order details with `1: black forest cake` and `1: Cheese cake`.","lastModifiedDate":"2022-04-08"},{"lineNumber":289,"author":{"gitId":"declanleeler"},"content":"  * The order delivery date is also now edited to be `Monday, 04 Apr 2022, 10:30`.","lastModifiedDate":"2022-04-08"},{"lineNumber":290,"author":{"gitId":"declanleeler"},"content":"  * Collection type is changed to `Delivery`.","lastModifiedDate":"2022-04-08"},{"lineNumber":291,"author":{"gitId":"declanleeler"},"content":"  * Detail remarks is also changed to `Two candles`","lastModifiedDate":"2022-04-08"},{"lineNumber":292,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":293,"author":{"gitId":"declanleeler"},"content":"### Locating orders by specific attribute: `findo`","lastModifiedDate":"2022-04-08"},{"lineNumber":294,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":295,"author":{"gitId":"declanleeler"},"content":"Finds order(s) whose specific attribute contain any of the given keywords.","lastModifiedDate":"2022-04-08"},{"lineNumber":296,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":297,"author":{"gitId":"declanleeler"},"content":"Format: `findo [ATTRIBUTE] KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-04-08"},{"lineNumber":298,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":299,"author":{"gitId":"declanleeler"},"content":"* The supported attributes are ","lastModifiedDate":"2022-04-08"},{"lineNumber":300,"author":{"gitId":"declanleeler"},"content":"  * Order\u0027s customer\u0027s name: `n/`","lastModifiedDate":"2022-04-08"},{"lineNumber":301,"author":{"gitId":"declanleeler"},"content":"  * Order\u0027s customer\u0027s phone number:`p/`","lastModifiedDate":"2022-04-08"},{"lineNumber":302,"author":{"gitId":"declanleeler"},"content":"  * Order\u0027s details: `d/`","lastModifiedDate":"2022-04-08"},{"lineNumber":303,"author":{"gitId":"declanleeler"},"content":"  * Order\u0027s collection type: `m/`","lastModifiedDate":"2022-04-08"},{"lineNumber":304,"author":{"gitId":"declanleeler"},"content":"  * Order\u0027s remarks: `r/`","lastModifiedDate":"2022-04-08"},{"lineNumber":305,"author":{"gitId":"declanleeler"},"content":"  * Finding orders based on `c/DELIVERYDATETIME` is not supported in this command because the command `incompleteo` serves this purpose ","lastModifiedDate":"2022-04-08"},{"lineNumber":306,"author":{"gitId":"declanleeler"},"content":"* Only the attribute specified is searched.","lastModifiedDate":"2022-04-08"},{"lineNumber":307,"author":{"gitId":"declanleeler"},"content":"  * Multiple attributes searching at the same time is not allowed. e.g. `findo n/Gerald d/Cake`","lastModifiedDate":"2022-04-08"},{"lineNumber":308,"author":{"gitId":"declanleeler"},"content":"  * For findo `d/[keyword]`, the keyword should only be the description of the detail and not the quantity","lastModifiedDate":"2022-04-08"},{"lineNumber":309,"author":{"gitId":"declanleeler"},"content":"    * Valid Example: `findo d/Cake`","lastModifiedDate":"2022-04-08"},{"lineNumber":310,"author":{"gitId":"declanleeler"},"content":"    * Invalid Example: `findo d/1:Cake`","lastModifiedDate":"2022-04-08"},{"lineNumber":311,"author":{"gitId":"declanleeler"},"content":"* The search is case-insensitive. e.g `cake` will match `Cake`","lastModifiedDate":"2022-04-08"},{"lineNumber":312,"author":{"gitId":"declanleeler"},"content":"* The order of the keywords does not matter. e.g. `banana cake` will match `cake banana`","lastModifiedDate":"2022-04-08"},{"lineNumber":313,"author":{"gitId":"declanleeler"},"content":"* Only full words will be matched e.g. `Cake` will not match `Cakes`","lastModifiedDate":"2022-04-08"},{"lineNumber":314,"author":{"gitId":"declanleeler"},"content":"* Multiple `[KEYWORDS]` provided will be split up by whitespace and searched individually","lastModifiedDate":"2022-04-08"},{"lineNumber":315,"author":{"gitId":"declanleeler"},"content":"  * `findo n/Declan Bob` will search for both `Declan` and `Bob`","lastModifiedDate":"2022-04-08"},{"lineNumber":316,"author":{"gitId":"declanleeler"},"content":"* Orders matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-04-08"},{"lineNumber":317,"author":{"gitId":"declanleeler"},"content":"  e.g. `Banana Cake` will return `Banana Leaf`, `Strawberry Cake`","lastModifiedDate":"2022-04-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-04-08"},{"lineNumber":320,"author":{"gitId":"declanleeler"},"content":"* `findo n/Declan` returns `declan` and `Declan Lee`","lastModifiedDate":"2022-04-08"},{"lineNumber":321,"author":{"gitId":"declanleeler"},"content":"* `findo p/90029382` returns `90029382`","lastModifiedDate":"2022-04-08"},{"lineNumber":322,"author":{"gitId":"declanleeler"},"content":"* `findo d/cake` returns `Cake` and `Banana Cake`","lastModifiedDate":"2022-04-08"},{"lineNumber":323,"author":{"gitId":"declanleeler"},"content":"* `findo m/delivery` returns `Delivery`","lastModifiedDate":"2022-04-08"},{"lineNumber":324,"author":{"gitId":"declanleeler"},"content":"* `findo r/birthday` returns `Birthday` \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":326,"author":{"gitId":"Geralddtan"},"content":"### Mark orders as Complete: `marko`","lastModifiedDate":"2022-02-26"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"Geralddtan"},"content":"Marks an order as complete in ReadyBakey","lastModifiedDate":"2022-02-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"Geralddtan"},"content":"Format: `marko INDEX`","lastModifiedDate":"2022-02-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"declanleeler"},"content":"* Marks the order at the specified `INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":333,"author":{"gitId":"declanleeler"},"content":"* The`INDEX` refers to the index number shown in the displayed orders list.","lastModifiedDate":"2022-03-31"},{"lineNumber":334,"author":{"gitId":"declanleeler"},"content":"* The`INDEX` must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-03-31"},{"lineNumber":335,"author":{"gitId":"Geralddtan"},"content":"* If a complete order is marked again, it will remain as marked and no error will be thrown.","lastModifiedDate":"2022-04-07"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":338,"author":{"gitId":"Geralddtan"},"content":"* `marko 1`","lastModifiedDate":"2022-02-26"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":340,"author":{"gitId":"Geralddtan"},"content":"### Unmark orders as incomplete: `unmarko`","lastModifiedDate":"2022-02-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":342,"author":{"gitId":"Geralddtan"},"content":"Unmarks an order as incomplete in ReadyBakey","lastModifiedDate":"2022-02-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":344,"author":{"gitId":"Geralddtan"},"content":"Format: `unmarko INDEX`","lastModifiedDate":"2022-02-26"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":346,"author":{"gitId":"declanleeler"},"content":"* Unmarks the order at the specified `INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":347,"author":{"gitId":"declanleeler"},"content":"* The `INDEX` refers to the index number shown in the displayed orders list.","lastModifiedDate":"2022-03-31"},{"lineNumber":348,"author":{"gitId":"declanleeler"},"content":"* The `INDEX` must be a positive integer 1, 2, 3, ….","lastModifiedDate":"2022-03-31"},{"lineNumber":349,"author":{"gitId":"Geralddtan"},"content":"* If an incomplete order is unmarked again, it will remain as unmarked and no error will be thrown.","lastModifiedDate":"2022-04-07"},{"lineNumber":350,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":351,"author":{"gitId":"Geralddtan"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":352,"author":{"gitId":"Geralddtan"},"content":"* `unmarko 1`","lastModifiedDate":"2022-02-26"},{"lineNumber":353,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":354,"author":{"gitId":"declanleeler"},"content":"### Listing all incomplete orders: `incompleteo`","lastModifiedDate":"2022-04-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"declanleeler"},"content":"Shows a list of all incomplete orders in ReadyBakey before and during a given date and time","lastModifiedDate":"2022-04-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"declanleeler"},"content":"Format: `incompleteo DELIVERYDATETIME`","lastModifiedDate":"2022-04-08"},{"lineNumber":359,"author":{"gitId":"declanleeler"},"content":"* Orders that are incomplete before and during `DELIVERYDATETIME` will be displayed","lastModifiedDate":"2022-04-08"},{"lineNumber":360,"author":{"gitId":"declanleeler"},"content":"* It accepts datetimes in the form of `dd-mm-yyyy HH:mm`. e.g. `01-01-2022 10:30`.","lastModifiedDate":"2022-04-08"},{"lineNumber":361,"author":{"gitId":"declanleeler"},"content":"* It can also accept natural dates with time. e.g. `Monday 10:30` or `Mon 10:30`. Natural dates are not","lastModifiedDate":"2022-04-08"},{"lineNumber":362,"author":{"gitId":"declanleeler"},"content":"  case-sensitive.","lastModifiedDate":"2022-04-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-26"},{"lineNumber":365,"author":{"gitId":"declanleeler"},"content":"* `incompleteo 25-12-2022 15:30`","lastModifiedDate":"2022-04-08"},{"lineNumber":366,"author":{"gitId":"declanleeler"},"content":"* `incompleteo Monday 15:30`","lastModifiedDate":"2022-04-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":368,"author":{"gitId":"declanleeler"},"content":"### Clearing all Customers and Orders: `clear`","lastModifiedDate":"2022-04-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"declanleeler"},"content":"Removes all customers and orders stored in ReadyBakey","lastModifiedDate":"2022-04-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-04-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":374,"author":{"gitId":"declanleeler"},"content":"Examples:","lastModifiedDate":"2022-04-08"},{"lineNumber":375,"author":{"gitId":"declanleeler"},"content":"* `clear`","lastModifiedDate":"2022-04-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":377,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-04-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2022-04-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-04-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":383,"author":{"gitId":"declanleeler"},"content":"Examples:","lastModifiedDate":"2022-04-08"},{"lineNumber":384,"author":{"gitId":"declanleeler"},"content":"* `exit`","lastModifiedDate":"2022-04-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"declanleeler"},"content":"### Using Natural Dates","lastModifiedDate":"2022-04-06"},{"lineNumber":387,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":388,"author":{"gitId":"declanleeler"},"content":"In order to provide a quicker method of referring to near dates, ReadyBakey allows users to use natural dates to refer to the directly upcoming days of the week.","lastModifiedDate":"2022-04-06"},{"lineNumber":389,"author":{"gitId":"declanleeler"},"content":"The closest upcoming date that corresponds to the natural date\u0027s day input will be used. The time in HH:MM must still be provided by the user, along with the natural date.","lastModifiedDate":"2022-04-06"},{"lineNumber":390,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":391,"author":{"gitId":"declanleeler"},"content":"This can be used in any command where dates are required, such as `incompleteo` and `addo`.","lastModifiedDate":"2022-04-06"},{"lineNumber":392,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":393,"author":{"gitId":"declanleeler"},"content":"Format: `Day HH:mm`","lastModifiedDate":"2022-04-06"},{"lineNumber":394,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":395,"author":{"gitId":"punnyhuimin"},"content":"All potential natural dates that can be used:","lastModifiedDate":"2022-04-07"},{"lineNumber":396,"author":{"gitId":"punnyhuimin"},"content":"* `Mon HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":397,"author":{"gitId":"punnyhuimin"},"content":"* `Monday HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":398,"author":{"gitId":"punnyhuimin"},"content":"* `Tues HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":399,"author":{"gitId":"punnyhuimin"},"content":"* `Tue HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":400,"author":{"gitId":"punnyhuimin"},"content":"* `Tuesday HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":401,"author":{"gitId":"punnyhuimin"},"content":"* `Weds HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":402,"author":{"gitId":"punnyhuimin"},"content":"* `Wed HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":403,"author":{"gitId":"punnyhuimin"},"content":"* `Wednesday HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":404,"author":{"gitId":"punnyhuimin"},"content":"* `Thurs HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":405,"author":{"gitId":"punnyhuimin"},"content":"* `Thur HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":406,"author":{"gitId":"punnyhuimin"},"content":"* `Thursday HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":407,"author":{"gitId":"punnyhuimin"},"content":"* `Fri HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":408,"author":{"gitId":"punnyhuimin"},"content":"* `Friday HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":409,"author":{"gitId":"punnyhuimin"},"content":"* `Sat HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":410,"author":{"gitId":"punnyhuimin"},"content":"* `Saturday HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":411,"author":{"gitId":"punnyhuimin"},"content":"* `Sun HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":412,"author":{"gitId":"punnyhuimin"},"content":"* `Sunday HH:mm`","lastModifiedDate":"2022-04-07"},{"lineNumber":413,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":414,"author":{"gitId":"declanleeler"},"content":"Example of natural date:","lastModifiedDate":"2022-04-06"},{"lineNumber":415,"author":{"gitId":"declanleeler"},"content":"* `Monday 10:30` or `Mon 10:30` will create a datetime in the form of `dd-mm-yyyy HH:mm` that falls on the closest Monday, where `HH:mm` is `10:30`","lastModifiedDate":"2022-04-06"},{"lineNumber":416,"author":{"gitId":"declanleeler"},"content":"* `Sunday 09:30` or `Sun 09:30`will create a datetime in the form of `dd-mm-yyyy HH:mm` that falls on the closest Sunday, where `HH:mm` is `09:30`","lastModifiedDate":"2022-04-06"},{"lineNumber":417,"author":{"gitId":"punnyhuimin"},"content":"* If the current time is `7th April 2022 09:30`, which is a Thursday, inputting `Thurs 08:30` will return `14th April","lastModifiedDate":"2022-04-07"},{"lineNumber":418,"author":{"gitId":"punnyhuimin"},"content":"  2022` as the closest Thursday.","lastModifiedDate":"2022-04-07"},{"lineNumber":419,"author":{"gitId":"punnyhuimin"},"content":"  * Reason: `08:30` has already passed the current time, hence ReadyBakey will look for a future date that is a","lastModifiedDate":"2022-04-07"},{"lineNumber":420,"author":{"gitId":"punnyhuimin"},"content":"    Thursday instead.","lastModifiedDate":"2022-04-07"},{"lineNumber":421,"author":{"gitId":"punnyhuimin"},"content":"* If the current time is `7th April 2022 09:30`, which is a Thursday, inputting `Thurs 10:30` will return `7th April 2022` as the closest Thursday.","lastModifiedDate":"2022-04-07"},{"lineNumber":422,"author":{"gitId":"punnyhuimin"},"content":"  * Reason: `10:30` has not passed the current time, hence ReadyBakey will look at the current day as the closest","lastModifiedDate":"2022-04-07"},{"lineNumber":423,"author":{"gitId":"punnyhuimin"},"content":"    Thursday.","lastModifiedDate":"2022-04-07"},{"lineNumber":424,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":425,"author":{"gitId":"punnyhuimin"},"content":"Example of natural dates in action:","lastModifiedDate":"2022-04-07"},{"lineNumber":426,"author":{"gitId":"declanleeler"},"content":"* `incompleteo Monday 15:30`","lastModifiedDate":"2022-04-06"},{"lineNumber":427,"author":{"gitId":"declanleeler"},"content":"* `addo p/98765432 d/1: Jerry Favourite Cheese Cake c/Tuesday 15:30 m/Delivery r/Add Cheese`","lastModifiedDate":"2022-04-06"},{"lineNumber":428,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":429,"author":{"gitId":"punnyhuimin"},"content":":exclamation: Note: You cannot specify which Natural Date you want. ReadyBakey automatically assigns the closest","lastModifiedDate":"2022-04-07"},{"lineNumber":430,"author":{"gitId":"punnyhuimin"},"content":"Natural Date and it will be shown in the Response Box after the command is executed. (i.e. You cannot specify that","lastModifiedDate":"2022-04-07"},{"lineNumber":431,"author":{"gitId":"punnyhuimin"},"content":"you want the date to be the Monday or any natural date 10 weeks from now)","lastModifiedDate":"2022-04-07"},{"lineNumber":432,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2022-04-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":435,"author":{"gitId":"declanleeler"},"content":"ReadyBakey data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-04-08"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":437,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2022-04-08"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":439,"author":{"gitId":"declanleeler"},"content":"ReadyBakey data are saved as a JSON file `[JAR file location]/data/readybakey.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-04-08"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":441,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-04-08"},{"lineNumber":442,"author":{"gitId":"declanleeler"},"content":"If your changes to the data file makes its format invalid, ReadyBakey will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-04-08"},{"lineNumber":443,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":445,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"Geralddtan"},"content":"## FAQ \u003ca name\u003d\"faq\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"Geralddtan"},"content":"**Q**: Is an order tied to a specific customer in the customer list?\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":450,"author":{"gitId":"punnyhuimin"},"content":"**A**: Yes, an order is tied to the specific customer as per the customers’ ID.","lastModifiedDate":"2022-03-16"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"Geralddtan"},"content":"## Command summary \u003ca name\u003d\"command-summary\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":455,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":456,"author":{"gitId":"punnyhuimin"},"content":"| Action      | Format                                                                           | Example                                                                                                          |","lastModifiedDate":"2022-03-13"},{"lineNumber":457,"author":{"gitId":"darshan152"},"content":"|-------------|----------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":458,"author":{"gitId":"declanleeler"},"content":"| **addp**    | `addp n/NAME p/PHONE e/EMAIL a/ADDRESS [r/REMARK] [t/TAG]…`                      | `addp n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 r/Allergic to Peanuts t/owesMoney` |","lastModifiedDate":"2022-03-31"},{"lineNumber":459,"author":{"gitId":"punnyhuimin"},"content":"| **deletep** | `deletep INDEX`                                                                  | `deletep 2`                                                                                                      |","lastModifiedDate":"2022-03-06"},{"lineNumber":460,"author":{"gitId":"punnyhuimin"},"content":"| **listp**   | `listp`                                                                          | `listp`                                                                                                          |","lastModifiedDate":"2022-03-06"},{"lineNumber":461,"author":{"gitId":"Geralddtan"},"content":"| **editp**   | `editp INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/REMARK] [t/TAG]…`       | `editp 1 p/12345678 n/John Doey a/NUS r/loves chocolate t/member`                                                |","lastModifiedDate":"2022-04-10"},{"lineNumber":462,"author":{"gitId":"onefangg"},"content":"| **findp**   | `findp [ATTRIBUTE_PREFIX] KEYWORD [MORE_KEYWORDS]...`                            | `findp n/Gerald`                                                                                                 |","lastModifiedDate":"2022-04-06"},{"lineNumber":463,"author":{"gitId":"darshan152"},"content":"| **addo**    | `addo p/PHONE_NUM r/REMARK d/DETAILS c/DELIVERYDATETIME m/COLLECTION_TYPE`       | `addo p/87654321 r/no candles d/1:Chocolate Cake c/27-12-2022 12:30 m/Delivery`                                  |","lastModifiedDate":"2022-04-08"},{"lineNumber":464,"author":{"gitId":"punnyhuimin"},"content":"| **deleteo** | `deleteo INDEX`                                                                  | `deleteo 2`                                                                                                      |","lastModifiedDate":"2022-03-06"},{"lineNumber":465,"author":{"gitId":"punnyhuimin"},"content":"| **listo**   | `listo`                                                                          | `listo`                                                                                                          |","lastModifiedDate":"2022-03-06"},{"lineNumber":466,"author":{"gitId":"punnyhuimin"},"content":"| **marko**   | `marko INDEX`                                                                    | `marko 1`                                                                                                        |","lastModifiedDate":"2022-03-06"},{"lineNumber":467,"author":{"gitId":"punnyhuimin"},"content":"| **unmarko** | `unmarko INDEX`                                                                  | `unmarko 1`                                                                                                      |","lastModifiedDate":"2022-03-06"},{"lineNumber":468,"author":{"gitId":"darshan152"},"content":"| **edito**   | `edito INDEX [c/DELIVERYDATETIME] [m/COLLECTION_TYPE] [r/REMARKS] [d/DETAILS]…​` | `edito 1 r/Add Cheese d/1: Jerry Favourite Cheese Cake d/2: Chocolate Cake c/25-12-2022 15:30 m/Delivery`        |","lastModifiedDate":"2022-04-08"},{"lineNumber":469,"author":{"gitId":"onefangg"},"content":"| **findo**   | `findo [ATTRIBUTE_PREFIX] KEYWORD [MORE_KEYWORDS]...`                            | `findo n/Gerald Declan`                                                                                          |","lastModifiedDate":"2022-04-06"},{"lineNumber":470,"author":{"gitId":"Geralddtan"},"content":"| **clear**   | `clear`                                                                          | `clear`                                                                                                          |","lastModifiedDate":"2022-04-07"},{"lineNumber":471,"author":{"gitId":"Geralddtan"},"content":"| **exit**    | `exit`                                                                           | `exit`                                                                                                           |","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"darshan152":23,"Geralddtan":35,"onefangg":30,"declanleeler":165,"-":137,"punnyhuimin":81}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"punnyhuimin"},"content":"    content: \"ReadyBakey\";","lastModifiedDate":"2022-04-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"punnyhuimin":1}},{"path":"docs/diagrams/AddOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"participant \":AddOrderCommandParser\" as AddOrderCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"participant \"a: AddOrderCommand\" as AddOrderCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"[-\u003e LogicManager : execute(\"addo p/ 98324321 \\nd/ 1:chocolatecake \\nm/ delivery c/ 30-06-2022 15:30\")","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addo p/ 98324321 \\nd/ 1:chocolatecake \\nm/ delivery c/ 30-06-2022 15:30\")","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"create AddOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"AddressBookParser -\u003e AddOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"activate AddOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"AddOrderCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"deactivate AddOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"AddressBookParser -\u003e AddOrderCommandParser : parse(\"p/ 98324321 \\nd/ 1:chocolatecake \\nm/ delivery c/ 30-06-2022 15:30\")","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"activate AddOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"create AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"AddOrderCommandParser -\u003e AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"activate AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"AddOrderCommand --\u003e AddOrderCommandParser : a","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"deactivate AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"AddOrderCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"deactivate AddOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"AddOrderCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"destroy AddOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"LogicManager -\u003e AddOrderCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"activate AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"AddOrderCommand -\u003e AddOrderCommand : buildOrder(model)","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"activate AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"AddOrderCommand -\u003e Model : getPersonList()","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"Model --\u003e AddOrderCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"AddOrderCommand --\u003e AddOrderCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"deactivate AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"AddOrderCommand -\u003e Model : addOrder(toAdd)","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"Model --\u003e AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"AddOrderCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"CommandResult --\u003e AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"AddOrderCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"deactivate AddOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"darshan152":8,"Geralddtan":70}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"user -[USER_COLOR]\u003e ui : \"deletep 1\"","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"deletep 1\")","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"darshan152":2,"-":36}},{"path":"docs/diagrams/DataTogglingActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"start","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":":User executes command;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"if () then ([Order])","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"    :Relevant Order data is manipulated;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"    :Relevant Order data is displayed;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"([else]) else if () then ([Help])","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"    :Help window is displayed;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"([else]) else if () then ([is Exit Command])","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"    :Exit information is displayed;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    :Application exits;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"else ([Person])","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    :Relevant Person data is manipulated;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    :Relevant Person data is displayed;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"endif","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"declanleeler":19}},{"path":"docs/diagrams/DeleteOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"@startuml","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"!include style.puml","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"participant \":DeleteOrderCommandParser\" as DeleteOrderCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"participant \"a: DeleteOrderCommand\" as DeleteOrderCommand LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"end box","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"end box","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"[-\u003e LogicManager : execute(\"deleteo 3\")","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"activate LogicManager","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deleteo 3\")","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"create DeleteOrderCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"AddressBookParser -\u003e DeleteOrderCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"activate DeleteOrderCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"DeleteOrderCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"deactivate DeleteOrderCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"AddressBookParser -\u003e DeleteOrderCommandParser : parse(\"deleteo 3\")","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"activate DeleteOrderCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"create DeleteOrderCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"DeleteOrderCommandParser -\u003e DeleteOrderCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"activate DeleteOrderCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"DeleteOrderCommand --\u003e DeleteOrderCommandParser : d","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"deactivate DeleteOrderCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"DeleteOrderCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"deactivate DeleteOrderCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"DeleteOrderCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"destroy DeleteOrderCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"LogicManager -\u003e DeleteOrderCommand : execute()","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"activate DeleteOrderCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"DeleteOrderCommand -\u003e Model : getFilteredOrderList()","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"Model --\u003e DeleteOrderCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"DeleteOrderCommand -\u003e Model : deleteOrder(targetOrder)","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"onefangg"},"content":"activate Model","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"onefangg"},"content":"Model --\u003e DeleteOrderCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"deactivate Model","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"create CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"DeleteOrderCommand -\u003e CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"activate CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"CommandResult --\u003e DeleteOrderCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"DeleteOrderCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"deactivate DeleteOrderCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"onefangg"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"onefangg"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"onefangg"},"content":"@enduml","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"onefangg":73}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"participant \":DeletePersonCommandParser\" as DeletePersonCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"participant \"d:DeletePersonCommand\" as DeletePersonCommand LOGIC_COLOR","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"[-\u003e LogicManager : execute(\"deletep 1\")","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deletep 1\")","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"create DeletePersonCommandParser","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"AddressBookParser -\u003e DeletePersonCommandParser","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"activate DeletePersonCommandParser","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"DeletePersonCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"deactivate DeletePersonCommandParser","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"AddressBookParser -\u003e DeletePersonCommandParser : parse(\"1\")","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"activate DeletePersonCommandParser","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"create DeletePersonCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"DeletePersonCommandParser -\u003e DeletePersonCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"activate DeletePersonCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"DeletePersonCommand --\u003e DeletePersonCommandParser : d","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"DeletePersonCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"deactivate DeletePersonCommandParser","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"DeletePersonCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"destroy DeletePersonCommandParser","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"LogicManager -\u003e DeletePersonCommand : execute()","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"activate DeletePersonCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"DeletePersonCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"Model --\u003e DeletePersonCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"DeletePersonCommand -\u003e CommandResult","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"CommandResult --\u003e DeletePersonCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"darshan152"},"content":"DeletePersonCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"darshan152"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"darshan152":29,"-":41}},{"path":"docs/diagrams/EditOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"participant \":EditOrderCommandParser\" as EditOrderCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"participant \"d:EditOrderCommand\" as EditOrderCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"[-\u003e LogicManager : execute(edito 1 \\n c/30-06-2022 15:30 \\n m/delivery \\n d/1: Cheesecake \\n r/Give me candles)","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edito 1 \\n c/30-06-2022 15:30 \\n m/delivery \\n d/1: Cheesecake \\n r/Give me candles\")","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"create EditOrderCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"AddressBookParser -\u003e EditOrderCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"activate EditOrderCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"EditOrderCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"deactivate EditOrderCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"AddressBookParser -\u003e EditOrderCommandParser : parse(\"c/30-06-2022 15:30 \\n m/delivery \\n d/1: Cheesecake \\n r/Give me candles\")","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"activate EditOrderCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"create EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"EditOrderCommandParser -\u003e EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"activate EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"EditOrderCommand --\u003e EditOrderCommandParser : e","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"deactivate EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"EditOrderCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"deactivate EditOrderCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"EditOrderCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"destroy EditOrderCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"LogicManager -\u003e EditOrderCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"activate EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"EditOrderCommand -\u003e EditOrderCommand : createEditedOrder(orderToEdit, editOrderDescriptor)","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"activate EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"deactivate EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"EditOrderCommand -\u003e Model : setOrder(orderToEdit, editedOrder)","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"Model --\u003e EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"EditOrderCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"CommandResult --\u003e EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"EditOrderCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"deactivate EditOrderCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"punnyhuimin":73}},{"path":"docs/diagrams/FindIncompleteOrdersSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"@startuml","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"!include style.puml","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"participant \":FindIncompleteOrdersCommandParser\" as FindIncompleteOrdersCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"participant \":FindIncompleteOrdersCommand\" as FindIncompleteOrdersCommand LOGIC_COLOR","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"end box","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"end box","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"[-\u003e LogicManager : execute(\"incompleteo 25-12-2022 15:30\")","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"activate LogicManager","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"incompleteo 25-12-2022 15:30\")","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"create FindIncompleteOrdersCommandParser","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"AddressBookParser -\u003e FindIncompleteOrdersCommandParser","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"activate FindIncompleteOrdersCommandParser","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"FindIncompleteOrdersCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"deactivate FindIncompleteOrdersCommandParser","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"AddressBookParser --\u003e FindIncompleteOrdersCommandParser : parse(\"incompleteo 25-12-2022 15:30\")","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"activate FindIncompleteOrdersCommandParser","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"create FindIncompleteOrdersCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"FindIncompleteOrdersCommandParser --\u003e FindIncompleteOrdersCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"activate FindIncompleteOrdersCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"FindIncompleteOrdersCommand --\u003e FindIncompleteOrdersCommandParser : f","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"deactivate FindIncompleteOrdersCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"FindIncompleteOrdersCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"deactivate FindIncompleteOrdersCommandParser","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"FindIncompleteOrdersCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"destroy FindIncompleteOrdersCommandParser","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"LogicManager -\u003e FindIncompleteOrdersCommand : execute()","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"activate FindIncompleteOrdersCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"FindIncompleteOrdersCommand -\u003e Model : updatedSortedFilteredOrderList(Predicate)","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"activate Model","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"Model --\u003e Model : updateFilteredOrderList(predicate)","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"Model --\u003e Model : updatedSortedOrderList(filteredOrders)","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"Model --\u003e FindIncompleteOrdersCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"deactivate Model","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"create CommandResult","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"FindIncompleteOrdersCommand -\u003e CommandResult","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"activate CommandResult","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"CommandResult --\u003e FindIncompleteOrdersCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"FindIncompleteOrdersCommand  --\u003e LogicManager : result","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"deactivate FindIncompleteOrdersCommand","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"declanleeler"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"@enduml","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"declanleeler":73}},{"path":"docs/diagrams/FindOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"participant \":FindOrderCommandParser\" as FindOrderCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"participant \":FindOrderCommand\" as FindOrderCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"[-\u003e LogicManager : execute(\"findo n/Alex\")","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findo n/Alex\")","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"create FindOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"AddressBookParser -\u003e FindOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"activate FindOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"FindOrderCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"deactivate FindOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"AddressBookParser --\u003e FindOrderCommandParser : parse(\"findo n/Alex\")","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"activate FindOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"create FindOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"FindOrderCommandParser --\u003e FindOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"activate FindOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"FindOrderCommand --\u003e FindOrderCommandParser : f","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"deactivate FindOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"FindOrderCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"deactivate FindOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"FindOrderCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"destroy FindOrderCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"LogicManager -\u003e FindOrderCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"activate FindOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"FindOrderCommand -\u003e Model : updateFilteredOrderList(Predicate)","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"onefangg"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"Model --\u003e FindOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"onefangg"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"FindOrderCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"CommandResult --\u003e FindOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"FindOrderCommand  --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"deactivate FindOrderCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"onefangg"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"onefangg":69}},{"path":"docs/diagrams/ListOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"@startuml","lastModifiedDate":"2022-04-09"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"!include style.puml","lastModifiedDate":"2022-04-09"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-09"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"participant \"a: ListOrderCommand\" as ListOrderCommand LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"end box","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-09"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"end box","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"[-\u003e LogicManager : execute(\"listo 3\")","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"activate LogicManager","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"listo 3\")","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"create ListOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"AddressBookParser -\u003e ListOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"activate ListOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"\u0027DeleteOrderCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"\u0027deactivate DeleteOrderCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"\u0027AddressBookParser -\u003e DeleteOrderCommandParser : parse(\"deleteo 3\")","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"\u0027activate DeleteOrderCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"\u0027create DeleteOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"\u0027DeleteOrderCommandParser -\u003e DeleteOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"\u0027activate DeleteOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"ListOrderCommand --\u003e AddressBookParser : d","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"deactivate ListOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"\u0027DeleteOrderCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"\u0027deactivate DeleteOrderCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"\u0027DeleteOrderCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"\u0027destroy DeleteOrderCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"LogicManager -\u003e ListOrderCommand : execute()","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"activate ListOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"ListOrderCommand -\u003e Model : updateFilteredOrderList()","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"Model --\u003e ListOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"create CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"ListOrderCommand -\u003e CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"activate CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"CommandResult --\u003e ListOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"ListOrderCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"deactivate ListOrderCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"@enduml","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"punnyhuimin":67}},{"path":"docs/diagrams/MarkSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"participant \":MarkOrderCommandParser\" as MarkOrderCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"participant \"m:MarkOrderCommand\" as MarkOrderCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"[-\u003e LogicManager : execute(\"marko 1\")","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"marko 1\")","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"create MarkOrderCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"AddressBookParser -\u003e MarkOrderCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"activate MarkOrderCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"MarkOrderCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"deactivate MarkOrderCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"AddressBookParser -\u003e MarkOrderCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"activate MarkOrderCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"create MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"MarkOrderCommandParser -\u003e MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"activate MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"MarkOrderCommand --\u003e MarkOrderCommandParser : m","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"deactivate MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"MarkOrderCommandParser --\u003e AddressBookParser : m","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"deactivate MarkOrderCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"MarkOrderCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"destroy MarkOrderCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"AddressBookParser --\u003e LogicManager : m","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"LogicManager -\u003e MarkOrderCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"activate MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"MarkOrderCommand -\u003e MarkOrderCommand : createMarkedOrder(orderToMark)","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"activate MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"deactivate MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"MarkOrderCommand -\u003e Model : setOrder(orderToMark,editedOrder)","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"darshan152"},"content":"Model --\u003e MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"darshan152"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"darshan152"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"MarkOrderCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"darshan152"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"darshan152"},"content":"CommandResult --\u003e MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"darshan152"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"darshan152"},"content":"MarkOrderCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"darshan152"},"content":"deactivate MarkOrderCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"darshan152"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"darshan152"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"darshan152":75}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"Class UniqueOrderList","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"Class Order","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"Class Remark","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"Class CollectionType","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"Class DeliveryDateTime","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"Class Complete","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"Class Details","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"Class UUID","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"Person *--\u003e UUID","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"Person *--\u003e Remark","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"AddressBook *--\u003e \"1\" UniqueOrderList","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"UniqueOrderList --\u003e \"~* all\" Order","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"Order *--\u003e UUID","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"Order *--\u003e Remark","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"Order *--\u003e CollectionType","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"Order *--\u003e Complete","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"Order *--\u003e DeliveryDateTime","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"Order *--\u003e \"1..5\" Details","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"ModelManager --\u003e\"~* filtered\" Order","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Geralddtan":20,"-":50}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"Class JsonAdaptedOrder","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"Class JsonAdaptedDetails","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"JsonSerializableAddressBook --\u003e \"*\\n\" JsonAdaptedOrder","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"JsonAdaptedOrder --\u003e \"*\" JsonAdaptedDetails","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":42,"punnyhuimin":5}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"Class OrderListPanel","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"Class OrderCard","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"MainWindow *-down-\u003e \"1\" OrderListPanel","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"OrderListPanel -down-\u003e \"*\" OrderCard","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"OrderCard --|\u003e UiPart","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"OrderCard ..\u003e Model","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"darshan152":6,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"title: ReadyBakey Level-3","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F09-4/tp/actions)","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F09-4/tp/branch/master/graph/badge.svg?token\u003dX6MD8SX18U)](https://codecov.io/gh/AY2122S2-CS2103-F09-4/tp)","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"**ReadyBakey is a desktop application for managing your contact details.** While it has a GUI, most of the user ","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"* If you are interested in using ReadyBakey, head over to the [_Quick Start_ section of the **User Guide**](https://github.com/AY2122S2-CS2103-F09-4/tp/blob/master/docs/UserGuide.md#quick-start).","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"* If you are interested about developing ReadyBakey, the [**Developer Guide**](https://github.com/AY2122S2-CS2103-F09-4/tp/blob/master/docs/DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":14,"punnyhuimin":6}},{"path":"docs/team/darshan152.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"title: Darshan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"## Project: ReadyBakey","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"### Overview","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"ReadyBakey is a desktop app for small bakers to manage their orders.  The user interacts with it ","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"### Summary of contributions:","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003ddarshan152\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"* **Enhancements**:","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"  1. Added Mark \u0026 Unmark of Order","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"     * What it does: Allows user to denote whether an order is complete or incomplete","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"     * Justification: The feature provides a way for users to differentiate an order that is already done from one that still needs to be done","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"  2. Implemented the linkage between order and person","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"        * Added the internal logic of the application to allow for a linkage to be made between an order and a person","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"        * This allowed for a single source of the data meaning that there would not be discrepancies in the details","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"        * Modified the way that the UI was displayed in order to allow for the full details to be shown","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"        * Implemented a UUID for each person in order to maintain the link to an order even if his details changed","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"  3. Added dummy data for the application for order as well as modified the existing person\u0027s dummy data to contextualise it to a baker\u0027s context","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"  4. Added a restriction for the phone number of each person to be unique","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"  5. Added a restriction to disallow deletion of person if there are orders still linked to them","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"  6. Refactor EditCommand to EditPersonCommand to allow for addition of Order commands","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"  7. Added improvements to Tags to ensure display on the app works as expected","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"* **Documentation**:","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"  * User Guide","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"    * Removed `clearo` command that was not implemented","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"    * Added original `addp`, `listp` and `deletep` commands","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"    * Updated information on Tags to accurately reflect implementation","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"    * Fixing formatting errors and minor mistakes","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"  * Developer Guide","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"    * Added mark order sequence diagram as well as implementation details","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"    * Updated add order command implementation","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"    * Updated delete person sequence diagram","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"    * Updated the UI class diagram","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"* **Project management and Contributions to team-based tasks**","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"  * Managed release V1.2.1","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"    * Updated screenshots","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"    * Uploading JAR file to github","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"  * Maintaining issue tracker","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"  * Contributed to discussions on direction of the product - how each specific feature should behave","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"* **Review/mentoring contributions:**:","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"  * Reviewed PRs of peers","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"  * Helped fix merge issues in other team members branches [PR link](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/126)","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"  * Helped identify opportunities to implement more defensive programming [PR link](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/134)","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"darshan152":57}},{"path":"docs/team/declanleeler.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"title: Declan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"# Project: ReadyBakey","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"ReadyBakey is a desktop app for small bakers.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"**Code Contribution**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003ddeclanleeler\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ddeclanleeler\u0026tabRepo\u003dAY2122S2-CS2103-F09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"**Enhancements Implemented**","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"1. Data toggling of order / person data","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"   * What it does: Displays only one list of data (order or person) at a time and toggles between lists based on the user\u0027s command.","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"   * Justification: Declutters the UI by only showing one list that is relevant to the user\u0027s interests. Immediate toggling to show relevant data is also important without a specific command to do so - any command related to orders will show order data, and any command related to persons will show person data. ","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"   * Highlights: This feature affects all CommandResults as they now need to be assigned a type to indicate which data list to display to the user. ","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"         It was challenging as it required understanding how the different components worked together to display the initial Persons list, before coming up with a solution to tweak this setup to include another list of data,","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"         and the functionality to toggle between them.","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"   ","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"2. Sorted list functionality in Model","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"   * What it does: Allows for the sorting of persons or orders through a comparator wherever required. ","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"   * Justification: There are various features, exiting and potential, that could leverage on a sorting function to enhance their results. Specifically, this was required in the FindIncompleteOrders command. ","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"   * Highlights: Challenging to implement as it introduced SortedList as a return type when previously the application only worked with FilteredList.","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"      This meant relying on polymorphism to use the parent interface, ObservableList, in place of where previously FilteredList was expected.","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"   ","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"3. Find and sort by date incomplete orders before a given date","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"   * What it does: Highlights and sorts by date incomplete orders before a given date. ","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"   * Justification: The user can use this simple command to get important information that pertains to punctual order delivery. ","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"   * Highlights: Challenging to implement as it required using both FilteredLists and SortedLists.","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"   ","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"4. CSS changes to enhance the application\u0027s theme","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"**UG Contributions**","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"1. Added feature guides for`addo`, `listo`, `deleteo`, `incompleteo`, and natural dates","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"2. Resolved bugs related to Quick Start, `findo`, and command case-sensitivity requirement","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"3. Update User Guide\u0027s naming, formatting, and organisation of features","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"**DG Contributions**","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"1. DataTogglingActivityDiagram","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"2. FindIncompleteOrdersSequenceDiagram","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"**Team-based Tasks**","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"1. Renamed product to Readybakey to better suit the new target user profile","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"2. Maintained issue tracker","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"3. Release management for V1.1","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"4. Informal demo of V1.2 [(Google doc link)](https://docs.google.com/document/d/1XVM0yKcbUT28I7p_NQd5p5lgvAUocCPFuJ3BB7s63lk/edit#heading\u003dh.4y8l5hhmuf6g)","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"   * Added screenshots of features","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"   * Added explanations of features","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"5. Informal demo of V1.3 [(Google doc link)](https://docs.google.com/document/d/1tTXY-lm5M15URXhf_RbOpxJCVG8-GQD86Q2zDqTp1tM/edit)","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"   * Updated guide for some features based on the changes made in V1.3","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"6. Update UG for V1.3","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"   * Went through features to update their user guide based on the changes made in V1.3","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"**Review/mentoring contributions**","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"1. [Caught violation of SLAP](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/234)","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"2. [Helped debug cause of test failures](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/117)","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"3. [Caught naming error](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/235)","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"4. [Clarified Natural Date\u0027s capabilities](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/141)","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"**Contributions beyond the project team**","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"1. Participation in [PE-D](https://github.com/declanleeler/ped/issues) to help [HackNet](https://github.com/AY2122S2-CS2103T-W13-3/tp) spot bugs in V1.3","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"2. Helped classmate who had issues launching jar application [(Forum issue here)](https://github.com/nus-cs2103-AY2122S2/forum/issues/156#issuecomment-1040412152)","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"3. Helped classmate who had issues with Gradle Checkstyles [(Forum issue here)](https://github.com/nus-cs2103-AY2122S2/forum/issues/95#issuecomment-1029092057)","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"declanleeler":68}},{"path":"docs/team/geralddtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"title: Gerald\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"### Project: ReadyBakey","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"ReadyBakey is a desktop order management application created for bakers who handle a lot of different orders. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"**Code contributed**: ","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"[RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dgeralddtan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dGeralddtan\u0026tabRepo\u003dAY2122S2-CS2103-F09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"**Enhancements implemented**","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"1. Implementation and testing of order class","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"   * Implementation and testing for the overall order class containing its relevant components such as:","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     * Order Details ","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     * Order Deliver/Pickup Enum (Collection Type)","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * Order Remark ","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     * Order Delivery Date \u0026 Time ","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"     * Justification: The order class forms the basis of our application - a baker needs to key in their orders with its relevant details.","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"2. Implementation and testing for order functionality ","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"   * Implemented and performed test for Delete Order, List Order ","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"   * Justification: It is necessary to be able to list out and delete orders ","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"3. Implementation and testing of additional functionality for find order","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"   * Implemented and performed test for Find Order with the attributes order details, collectionType and remarks. ","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"   * Justification: It is a vital component of our application for a baker to search for their orders through different attributes","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"4. Implementation of additional attributes for Person Class","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"   * Implemented and performed test for the Remark attribute in the Person Class, refactored Add Command to Add Person Command","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"**Contributions to the UG**","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"1. Added feature guides for listo, addp, marko, unmarko, findo, addo","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"2. Added Table of Contents \u0026 FAQ","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"3. Fix formatting errors and minor mistakes","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"**Contributions to the DG**","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"1. Added in non-functional requirements ","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"2. Add user story and use case for marko, unmarko, clear","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"3. Add in AddOrderCommandSequenceDiagram and its design considerations","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"4. Edit ModelComponentClassDiagram","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"5. Add Table of Contents","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"**Contributions to team-based tasks**","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"1. Contributed in team discussion for overall product direction","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"2. Maintained Issue Tracker","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"3. Informal Demo of [V1.3 Demo Link](https://docs.google.com/document/d/1tTXY-lm5M15URXhf_RbOpxJCVG8-GQD86Q2zDqTp1tM/edit)","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"4. Release Management for V1.3","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"   1. Took Screenshots","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"**Review/mentoring contributions**","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"1. Helped with edit order command test when teammate had some issues ([Link Here](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/107))","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"2. Reviewed PRs of peers","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"Geralddtan":54}},{"path":"docs/team/onefangg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"title: Chua Yi Fang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"### Project: ReadyBakey","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"ReadyBakey is a desktop order management application created for CS2103 . The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003donefangg\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003donefangg\u0026tabRepo\u003dAY2122S2-CS2103-F09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"**Enhancements implemented**:","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"1. Adding tests to prepare for implementation of Order and validation checks.","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"   * As part of PR [#83](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/83) and [#119](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/119).","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"   * Added tests for classes such as `AddOrderCommand`, `AddOrderCommandParserTest`.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"   * Improved coverage by +0.87% as seen in [#119](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/119).","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"2. Implemented find orders/persons based on attributes","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"   * As part of PR [#112](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/112) and [#164](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/164). ","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"   * Search orders based on attributes: name, phone, (remark, collection_type and details subsequently added by another team member)","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"   * Search persons based on attributes: name, phone, email, address and remark.","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"   ","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"3. Implemented formatting and parsing of details in Order","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"  * As part of PR [#142](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/142).","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"  * Standardised formatting of `d/` details item in Order to follow format `\u003cquantity\u003e:\u003corderItem\u003e`","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"  * `Details` can now hold parse `quantity` and `orderItem` as attributes, as opposed to a single string.","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"  * Added stronger validation checks for details item. e.g. A single Order cannot exceed having more than 5 items.","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"  ","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"**Contributions to the UG**: ","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"* Updated UG with new functionalities such as updated findp command [#171](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/171), and updated details implementation [#177](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/177)","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"* Fixed different bugs in UG found during PE-D. [#240](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/240)","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"**Contributions to the DG**:","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"* Updated user stories. [#78](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/78)","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"* Updated use cases for adding customer and order. [#77](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/77) ","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"* Updated implementation details for `FindOrderCommand` based on attribute search. [#135](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/135) ","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"**Contributions to team-based tasks**:","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"* Contributed in team discussion for overall product direction","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"* Maintained Issue Tracker","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"* Helped update on bug fixing process for v1.4 to tutor.","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"**Review/mentoring contributions**:","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"* Participated in reviews for PRs.","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"onefangg":46}},{"path":"docs/team/punnyhuimin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"title: Hui Min\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"### Project: ReadyBakey","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"ReadyBakey is an application built for busy home bakers or small bakeries.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"* **New Feature**: Added EditOrder command `edito` [\\#107](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/107)","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"  * _What it does_: allows the user to that edits an order\u0027s details, remarks, delivery date time, and collection type.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"  * _Justification_: This feature improves the product significantly because a user can rectify any changes made by ","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    their customer without deleting and adding a new order. ","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"  ","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dpunnyhuimin\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dpunnyhuimin\u0026tabRepo\u003dAY2122S2-CS2103-F09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"  1. CSS changes to ","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     * Address bugs such as blue boxes populating the application. (Pull Requests: [\\#130](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/130), ","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        [\\#120](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/120))","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"     * Update scrollbar look.","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"     * Change the color of the details in orders list. [\\#166](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/166)","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        * Change the color of the HelpWindow [\\#123](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/123)","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"  2. Added natural date capability to enhance existing datetime capability. (Pull Requests: [\\#141](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/141),","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     [\\#234](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/234))","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     * _What it does_: allows the user to make use of natural dates (i.e. Monday, Mon, Tues) to input as dates for the","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"       AddOrder and EditOrder commands. This is built alongside the DeliveryDateTime capability, which only takes in","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"       dates in the form of `dd-MM-yyyy`.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"     * _Justification_: This feature improves the product significantly by speeding up the users\u0027 ability to type in the","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"       date without having to look at their calendar to find the day and month that the order is to be completed.","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"     * _Credits_: Used a formula from https://coderanch.com/t/385117/java/date-Monday that gets the next date based ","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"       on specified NaturalDate input.","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"  3. Update ExitCommand [\\#96](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/96)","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"     * _What it does_: It sets a 3-second timer before closing the application","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"     * _Justification_: This provides a smoother closure of the application compared to being closed abruptly. There ","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"       was also a message in the response box that cannot be read by the user once the exit command is passed. ","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"  4. Wrote additional tests for dates, increasing the code coverage by 0.04% [\\#141](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/141)","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"  5. Added character limits for person prefix inputs [\\#179](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/179)","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"* **Contributions to team based tasks**:","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"  * Set up Github team repository, team organisation, and Gradle for repository.","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"  * Added a new logo for ReadyBakey.[\\#110](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/110) ","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"  * [UI draft](https://www.figma.com/file/g10mAn5vFDXQXABQPh9U9M/ReadyBakey-UI-mockup?node-id\u003d0%3A1) image made with ","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"    Figma to plan out how the final product will look like.","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"  * Set up Github Projects to track User Stories completed and in progress.","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"  * Refactor ListCommand to ListPersonCommand. [\\#85](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/85)","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"  * Update `index.md` to match ReadyBakey. [\\#158](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/158)","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"  * Releasing of JAR file [v1.3.2](https://github.com/AY2122S2-CS2103-F09-4/tp/releases/tag/v1.3.2)","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"  * Updating App Version in MainApp.java [\\#183](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/183)","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"  * Updating UI image. (Pull Requests: [\\#181](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/181), ","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"    [\\#70](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/70))","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"  * Update target user profile and value proposition in Developer Guide. ","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"    [\\#81](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/81/files)","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"* **Contributions to Developer Guide**:","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"  * Added user story and use case for editing customers\u0027 phone number, name, email address, exiting ReadyBakey, and ","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"    address. [\\#73](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/73/files)","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"  * Added EditOrderSequenceDiagram and EditOrder design considerations. [\\#140](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/140)","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"  * Edited Storage Component and StorageClassDiagram to include Orders. [\\#238](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/238)","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"* **Contributions to User Guide**:","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"  * Created [v1.2 Documentation on Google Docs](https://docs.google.com/document/d/1XVM0yKcbUT28I7p_NQd5p5lgvAUocCPFuJ3BB7s63lk/edit#heading\u003dh.mvpxa98zj810)","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"  * Updated [v1.3 Documentation on Google Docs](https://docs.google.com/document/d/1tTXY-lm5M15URXhf_RbOpxJCVG8-GQD86Q2zDqTp1tM/edit)","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"  * Updated `editp`, `edito`, `findp`, and `clear` in User Guide (Pull Requests: [\\#43](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/43),","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"    [\\#99](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/99))","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"  * Updated usage of Natural Dates for delivery date time. [\\#174](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/174)","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"  * Updated information about character limits for person prefix inputs. [\\#180](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/180)","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"  * Fixed up various formatting and phrasing errors. (Pull Requests: [\\#174](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/174),","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"    [\\#99](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/99))","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"  * Helped catch JavaFX issue with Mac [\\#50](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/50#discussion_r815455829)","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"  * PRs reviewed:","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"    [\\#46](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/46#discussion_r814508758),","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"    [\\#50](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/50#discussion_r815458156),","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"    [\\#83](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/83#discussion_r820242099),","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"    [\\#98](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/98#discussion_r825582867),","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"    [\\#119](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/119#discussion_r830622022),","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"    [\\#131](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/131#discussion_r832902592),","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"    [\\#152](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/152#discussion_r838490864),","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"    [\\#178](https://github.com/AY2122S2-CS2103-F09-4/tp/pull/178#discussion_r839780713)","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"  * Added on to tip about [setting up PlantUML for Mac](https://github.com/nus-cs2103-AY2122S2/forum/issues/232)","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"punnyhuimin":87}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"punnyhuimin"},"content":"ReadyBakey stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson.","lastModifiedDate":"2022-04-06"},{"lineNumber":293,"author":{"gitId":"punnyhuimin"},"content":"Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2022-04-06"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"punnyhuimin"},"content":":exclamation: You must delete ReadyBakey’s storage file located at `/data/readybakey.json` before running it! Not ","lastModifiedDate":"2022-04-06"},{"lineNumber":300,"author":{"gitId":"punnyhuimin"},"content":"doing so will cause ReadyBakey to default to show an empty ReadyBakey list!","lastModifiedDate":"2022-04-06"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":380,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":399,"punnyhuimin":4}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ReadyBakey ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Geralddtan":2,"-":181}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"    public static final String MESSAGE_ORDERS_LISTED_OVERVIEW \u003d \"%1$d orders listed!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"    public static final String MESSAGE_FIND_PERSONS_OVERVIEW \u003d \"Listed %1$d persons by searching through attribute\"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"            + \" \u0027%2$s\u0027 with keyword(s): %3$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    public static final String MESSAGE_FIND_ORDERS_OVERVIEW \u003d \"Listed %1$d orders by searching through attribute\"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"            + \" \u0027%2$s\u0027 with keyword(s): %3$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid\";","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public static final String MESSAGE_MAX_SIZE_LIMIT \u003d \"Command takes in \u0027%s\u0027 prefix for a maximum of %d values!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    public static final String MESSAGE_MAX_INPUT_LIMIT \u003d \"Invalid values passed in for prefix \u0027%s\u0027!\\n %s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Geralddtan":1,"onefangg":7,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"    /** Returns an unmodifiable view of the filtered list of orders */","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"    /** Returns an unmodifiable view of the list of persons */","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"    /** Returns an unmodifiable view of the list of orders */","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"darshan152":6,"Geralddtan":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"darshan152"},"content":"        return model.getPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"darshan152"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"darshan152"},"content":"        return model.getOrderList();","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"darshan152":10,"Geralddtan":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COLLECTION_TYPE;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELIVERYDATETIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":" * Changes the remark of an existing person in ReadyBakey.","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    public static final String COMMAND_WORD \u003d \"addo\";","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an order to ReadyBakey. \"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"            + PREFIX_DETAILS + \"DETAILS \"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"            + PREFIX_DELIVERYDATETIME + \"DELIVERYDATETIME \"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"            + PREFIX_COLLECTION_TYPE + \"COLLECTION_TYPE \"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]... \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"            + PREFIX_DETAILS + \"1: Jerry Favourite Cheese Cake \"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"            + PREFIX_DELIVERYDATETIME + \"25-12-2022 15:30 \"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"            + PREFIX_COLLECTION_TYPE + \"Delivery \"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"            + PREFIX_REMARK + \"Add Cheese \";","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_ORDER_SUCCESS \u003d \"New order added: %1$s\";","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in the address book\";","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"    public static final String MESSAGE_NO_PERSON_FOUND \u003d \"No person found with the same phone number, \"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"            + \"please enter a valid phone number.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"    private final List\u003cDetails\u003e details;","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"    private final Phone phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"    private final CollectionType collectionType;","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"    private final DeliveryDateTime deliveryDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"    private final Remark remark;","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"     * Creates an AddOrderCommand to add the specified {@code Order}","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"    public AddOrderCommand(Phone phone, Remark remark, List\u003cDetails\u003e details, DeliveryDateTime deliveryDateTime,","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"                           CollectionType collectionType) {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"darshan152"},"content":"        requireAllNonNull(phone, remark, details, deliveryDateTime, collectionType);","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"darshan152"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"darshan152"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"darshan152"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"        this.deliveryDateTime \u003d deliveryDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"darshan152"},"content":"        this.collectionType \u003d collectionType;","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"darshan152"},"content":"        Order toAdd \u003d buildOrder(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"        if (model.hasOrder(toAdd)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"        model.addOrder(toAdd);","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(String.format(MESSAGE_ORDER_SUCCESS, toAdd), true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"darshan152"},"content":"    private Order buildOrder(Model model) throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"darshan152"},"content":"        ArrayList\u003cString\u003e phoneKeywords \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"darshan152"},"content":"        phoneKeywords.add(phone.value);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"darshan152"},"content":"        FilteredList\u003cPerson\u003e filteredPersons \u003d model.getPersonList()","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"darshan152"},"content":"                .filtered(new PhoneContainsKeywordsPredicate(phoneKeywords));","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"darshan152"},"content":"        if (filteredPersons.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"darshan152"},"content":"            throw new CommandException(MESSAGE_NO_PERSON_FOUND);","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"darshan152"},"content":"        Person p \u003d filteredPersons.get(0);","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"darshan152"},"content":"        UUID uuid \u003d p.getUuid();","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"darshan152"},"content":"        Order toAdd \u003d new Order(remark, details, deliveryDateTime, collectionType, uuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"darshan152"},"content":"        return toAdd;","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof AddOrderCommand // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 details.equals(((AddOrderCommand) other).details)","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 phone.equals(((AddOrderCommand) other).phone)","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 remark.equals(((AddOrderCommand) other).remark)","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 deliveryDateTime.equals(((AddOrderCommand) other).deliveryDateTime)","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 collectionType.equals(((AddOrderCommand) other).collectionType));","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":46,"Geralddtan":59,"onefangg":4,"declanleeler":1}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    public static final String COMMAND_WORD \u003d \"addp\";","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]... \"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"            + PREFIX_REMARK + \"Allergic to Peanuts \"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), false, true);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Geralddtan":9,"declanleeler":1,"-":60}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"declanleeler":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    private final boolean isHelpCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    private final boolean isExitCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    /** The command is related to orders */","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    private final boolean isOrderCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    /** The command is related to persons */","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    private final boolean isPersonCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    public CommandResult(String feedbackToUser, boolean isOrderCommand, boolean isPersonCommand, boolean isHelpCommand,","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"                         boolean isExitCommand) {","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        this.isOrderCommand \u003d isOrderCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"        this.isPersonCommand \u003d isPersonCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"        this.isHelpCommand \u003d isHelpCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"        this.isExitCommand \u003d isExitCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"    public CommandResult(String feedbackToUser, boolean isOrderCommand, boolean isPersonCommand) {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        this(feedbackToUser, isOrderCommand, isPersonCommand, false, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"    public boolean isHelpCommand() {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"        return isHelpCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"        return isExitCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"    public boolean isOrderCommand() {","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"        return isOrderCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"    public boolean isPersonCommand() {","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"        return isPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"declanleeler"},"content":"                \u0026\u0026 isHelpCommand \u003d\u003d otherCommandResult.isHelpCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"declanleeler"},"content":"                \u0026\u0026 isExitCommand \u003d\u003d otherCommandResult.isExitCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"declanleeler"},"content":"        return Objects.hash(feedbackToUser, isHelpCommand, isExitCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"onefangg":4,"declanleeler":22,"-":62}},{"path":"src/main/java/seedu/address/logic/commands/DeleteOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"public class DeleteOrderCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    public static final String COMMAND_WORD \u003d \"deleteo\";","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"            + \": Deletes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted Order: %1$s\";","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    public DeleteOrderCommand(Index targetIndex) {","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        Order orderToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"        model.deleteOrder(orderToDelete);","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete), true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof DeleteOrderCommand // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteOrderCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Geralddtan":52,"declanleeler":1}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.OrderUuidContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    public static final String COMMAND_WORD \u003d \"deletep\";","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"    public static final String MESSAGE_DELETE_PERSON_FAILED_ORDER_FOUND \u003d \"This person cannot be deleted \"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"            + \"as they have orders linked to them, please delete the orders first before deleting this person\";","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"        List\u003cString\u003e uuidList \u003d Arrays.asList(new String[]{personToDelete.getUuid().toString()});","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"        FilteredList\u003cOrder\u003e orderList \u003d model.getOrderList()","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"                .filtered(new OrderUuidContainsKeywordsPredicate(uuidList));","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"        if (!orderList.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"            throw new CommandException(MESSAGE_DELETE_PERSON_FAILED_ORDER_FOUND);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete), false, true);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"darshan152":16,"declanleeler":6,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/EditOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COLLECTION_TYPE;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELIVERYDATETIME;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Complete;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":" * Edits the information of an existing order in the ReadyBakey.","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"public class EditOrderCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    public static final String COMMAND_WORD \u003d \"edito\";","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the information of the order identified \"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"            + \"by the index number used in the displayed order list. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"            + PREFIX_DETAILS + \"DETAILS \"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            + PREFIX_DELIVERYDATETIME + \"DELIVERYDATETIME \"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"            + PREFIX_COLLECTION_TYPE + \"COLLECTION_TYPE \\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"            + PREFIX_REMARK + \"Add Cheese \"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"            + PREFIX_DETAILS + \"1: Jerry Favourite Cheese Cake \"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"            + PREFIX_DETAILS + \"2: Chocolate Cake \"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"            + PREFIX_DELIVERYDATETIME + \"25-12-2022 15:30 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"            + PREFIX_COLLECTION_TYPE + \"Delivery\";","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_EDIT_ORDER_SUCCESS \u003d \"Edited Order: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"    private final Index index;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"    private final EditOrderDescriptor editOrderDescriptor;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"     * @param index of the order in the filtered order list to edit","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"     * @param editOrderDescriptor details to edit the order with","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"    public EditOrderCommand(Index index, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"        requireNonNull(editOrderDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"        this.editOrderDescriptor \u003d new EditOrderDescriptor(editOrderDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, editOrderDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"        model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ORDER_SUCCESS, editedOrder), true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"     * Creates and returns a {@code Order} with the details of {@code orderToEdit}","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"     * edited with {@code editOrderDescriptor}.","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"    private static Order createEditedOrder(Order orderToEdit, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"onefangg"},"content":"        List\u003cDetails\u003e updatedDetails \u003d editOrderDescriptor.getDetails().orElse(orderToEdit.getDetails());","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"darshan152"},"content":"        Complete complete \u003d orderToEdit.getComplete();","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"darshan152"},"content":"        UUID uuid \u003d orderToEdit.getUuid();","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"        Remark updatedRemarks \u003d editOrderDescriptor.getRemark().orElse(orderToEdit.getRemark());","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"        DeliveryDateTime updatedDeliveryDateTime \u003d editOrderDescriptor.getDeliveryDateTime()","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"                .orElse(orderToEdit.getDeliveryDateTime());","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"        CollectionType updatedCollectionType \u003d editOrderDescriptor.getCollectionType()","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"                .orElse(orderToEdit.getCollectionType());","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"darshan152"},"content":"        return new Order(updatedRemarks, updatedDetails,","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"darshan152"},"content":"                updatedDeliveryDateTime, updatedCollectionType, complete, uuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"        if (!(other instanceof EditOrderCommand)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderCommand e \u003d (EditOrderCommand) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"                \u0026\u0026 editOrderDescriptor.equals(e.editOrderDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"punnyhuimin"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"    public static class EditOrderDescriptor {","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"onefangg"},"content":"        private List\u003cDetails\u003e details;","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"Geralddtan"},"content":"        private Remark remark;","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"Geralddtan"},"content":"        private DeliveryDateTime deliveryDateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"        private CollectionType collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"        public EditOrderDescriptor() {}","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"punnyhuimin"},"content":"        /**","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"punnyhuimin"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"punnyhuimin"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"punnyhuimin"},"content":"         */","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"punnyhuimin"},"content":"        public EditOrderDescriptor(EditOrderDescriptor toCopy) {","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"punnyhuimin"},"content":"            setDetails(toCopy.details);","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"Geralddtan"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"Geralddtan"},"content":"            setDeliveryDateTime(toCopy.deliveryDateTime);","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"Geralddtan"},"content":"            setCollectionType(toCopy.collectionType);","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"punnyhuimin"},"content":"        /**","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"punnyhuimin"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"punnyhuimin"},"content":"         */","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"punnyhuimin"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"darshan152"},"content":"            return CollectionUtil.isAnyNonNull(details, remark, deliveryDateTime, collectionType);","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"onefangg"},"content":"        public void setDetails(List\u003cDetails\u003e details) {","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"punnyhuimin"},"content":"            this.details \u003d details;","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"onefangg"},"content":"        public Optional\u003cList\u003cDetails\u003e\u003e getDetails() {","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"punnyhuimin"},"content":"            return Optional.ofNullable(details);","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"Geralddtan"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"Geralddtan"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"Geralddtan"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"Geralddtan"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"Geralddtan"},"content":"        public void setDeliveryDateTime(DeliveryDateTime deliveryDateTime) {","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"Geralddtan"},"content":"            this.deliveryDateTime \u003d deliveryDateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"Geralddtan"},"content":"        public Optional\u003cDeliveryDateTime\u003e getDeliveryDateTime() {","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"Geralddtan"},"content":"            return Optional.ofNullable(deliveryDateTime);","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"Geralddtan"},"content":"        public void setCollectionType(CollectionType collectionType) {","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"Geralddtan"},"content":"            this.collectionType \u003d collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"Geralddtan"},"content":"        public Optional\u003cCollectionType\u003e getCollectionType() {","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"Geralddtan"},"content":"            return Optional.ofNullable(collectionType);","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"punnyhuimin"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"punnyhuimin"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"punnyhuimin"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"punnyhuimin"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":187,"author":{"gitId":"punnyhuimin"},"content":"                return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":189,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":190,"author":{"gitId":"punnyhuimin"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":191,"author":{"gitId":"punnyhuimin"},"content":"            if (!(other instanceof EditOrderDescriptor)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"punnyhuimin"},"content":"                return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":195,"author":{"gitId":"punnyhuimin"},"content":"            // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"punnyhuimin"},"content":"            EditOrderDescriptor e \u003d (EditOrderDescriptor) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"darshan152"},"content":"            return getDetails().equals(e.getDetails())","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"Geralddtan"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2022-03-17"},{"lineNumber":201,"author":{"gitId":"Geralddtan"},"content":"                    \u0026\u0026 getDeliveryDateTime().equals(e.getDeliveryDateTime())","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"Geralddtan"},"content":"                    \u0026\u0026 getCollectionType().equals(e.getCollectionType());","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"darshan152":11,"Geralddtan":41,"onefangg":6,"punnyhuimin":147}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"    public static final String COMMAND_WORD \u003d \"editp\";","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), false,","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"declanleeler"},"content":"                true);","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"        UUID updatedUuid \u003d personToEdit.getUuid();","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"darshan152"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"darshan152"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"darshan152"},"content":"                updatedRemark, updatedTags, updatedUuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"darshan152"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"Geralddtan"},"content":"        private Remark remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"Geralddtan"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"Geralddtan"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, remark, tags);","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"Geralddtan"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"Geralddtan"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"Geralddtan"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"Geralddtan"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"Geralddtan"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2022-03-14"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"darshan152":11,"Geralddtan":15,"declanleeler":2,"-":218}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting ReadyBakey as requested ...\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, false, true);","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"declanleeler":1,"-":17,"punnyhuimin":1}},{"path":"src/main/java/seedu/address/logic/commands/FindIncompleteOrdersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":" *  Finds and lists all orders in ReadyBakey who is incomplete as of the given date","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"public class FindIncompleteOrdersCommand extends FindOrderCommand {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    public static final String COMMAND_WORD \u003d \"incompleteo\";","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all incomplete orders\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all incomplete orders before the given date\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"            + \"Parameters: DELIVERYDATETIME\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"            + \"Example: \" + COMMAND_WORD + \" 25-12-2022 15:30\";","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    private final Predicate\u003cOrder\u003e predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"    public FindIncompleteOrdersCommand(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"        model.updatedSortedFilteredOrderList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"                String.format(Messages.MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size()),","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"                true, false);","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"                || (other instanceof FindIncompleteOrdersCommand // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"                \u0026\u0026 predicate.equals(((FindIncompleteOrdersCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"declanleeler":46}},{"path":"src/main/java/seedu/address/logic/commands/FindOrderCollectionTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COLLECTION_TYPE;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.CollectionTypeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all orders in ReadyBakey whose predicate (collectionType) contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"public class FindOrderCollectionTypeCommand extends FindOrderCommand {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + PREFIX_COLLECTION_TYPE","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"            + \"[Keyword]: Finds all orders based on CollectionType attribute \\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"            + \"[Keyword] can only be delivery or pickup (case-insensitive)\"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_COLLECTION_TYPE + \"delivery\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"collectionType\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"    private final CollectionTypeContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    public FindOrderCollectionTypeCommand(CollectionTypeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_ORDERS_OVERVIEW, model.getFilteredOrderList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"                true, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof FindOrderCollectionTypeCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 predicate.equals(((FindOrderCollectionTypeCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":36,"onefangg":7}},{"path":"src/main/java/seedu/address/logic/commands/FindOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all orders in ReadyBakey whose predicate (attribute) contains any of the argument keywords.","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":" *  Search orders based on attributes is only current supported by {@code name} and {@code phone}.","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"public abstract class FindOrderCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"    public static final String COMMAND_WORD \u003d \"findo\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"            + \": Finds all orders based on attributes (name/phone/details/collection_type/remark) \"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"            + \"whose attributes contain any of the specified keywords (case-insensitive)\"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"            + \" and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"            + \"The command does not allow multiple attributes to be filtered at the same time.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"            + \"Parameters: (n|p|d|m|r)/ KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice bob charlie\";","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"darshan152":1,"Geralddtan":3,"onefangg":13}},{"path":"src/main/java/seedu/address/logic/commands/FindOrderDetailsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.DetailsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all orders in ReadyBakey whose predicate (details) contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"public class FindOrderDetailsCommand extends FindOrderCommand {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"details\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    private final DetailsContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    public FindOrderDetailsCommand(DetailsContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_ORDERS_OVERVIEW, model.getFilteredOrderList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"                true, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof FindOrderDetailsCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 predicate.equals(((FindOrderDetailsCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":30,"onefangg":7}},{"path":"src/main/java/seedu/address/logic/commands/FindOrderNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.OrderUuidContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all orders in ReadyBakey whose predicate (name) contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"public class FindOrderNameCommand extends FindOrderCommand {","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"name\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    public FindOrderNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList().filtered(predicate);","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"        String[] uuidKeywords \u003d filteredList.stream().map(person-\u003eperson.getUuid().toString()).toArray(String[]::new);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"        model.updateFilteredOrderList(new OrderUuidContainsKeywordsPredicate(Arrays.asList(uuidKeywords)));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_ORDERS_OVERVIEW, model.getFilteredOrderList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"                true, false);","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"                || (other instanceof FindOrderNameCommand // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 predicate.equals(((FindOrderNameCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"darshan152":37,"onefangg":7}},{"path":"src/main/java/seedu/address/logic/commands/FindOrderPhoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.OrderUuidContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":" *  Finds and lists all orders in ReadyBakey whose predicate (phone) contains any of the argument keywords.","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"public class FindOrderPhoneCommand extends FindOrderCommand {","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"phone\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    private final PhoneContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    public FindOrderPhoneCommand(PhoneContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList().filtered(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"        String[] uuidKeywords \u003d filteredList.stream().map(person-\u003eperson.getUuid().toString()).toArray(String[]::new);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"        model.updateFilteredOrderList(new OrderUuidContainsKeywordsPredicate(Arrays.asList(uuidKeywords)));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_ORDERS_OVERVIEW, model.getFilteredOrderList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"                true, false);","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"                || (other instanceof FindOrderPhoneCommand // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 predicate.equals(((FindOrderPhoneCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"darshan152":38,"onefangg":6}},{"path":"src/main/java/seedu/address/logic/commands/FindOrderRemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.RemarkContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all orders in ReadyBakey whose predicate (remark) contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"public class FindOrderRemarkCommand extends FindOrderCommand {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"remark\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    private final RemarkContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    public FindOrderRemarkCommand(RemarkContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_ORDERS_OVERVIEW, model.getFilteredOrderList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"                true, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof FindOrderRemarkCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 predicate.equals(((FindOrderRemarkCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":30,"onefangg":7}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonAddressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all persons in ReadyBakey whose predicate (address) contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"public class FindPersonAddressCommand extends FindPersonCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    private AddressContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"address\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    public FindPersonAddressCommand(AddressContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_PERSONS_OVERVIEW, model.getFilteredPersonList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"                false, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"                || (other instanceof FindPersonAddressCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"                \u0026\u0026 predicate.equals(((FindPersonAddressCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"onefangg":37}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":" * Finds and lists all persons in ReadyBakey whose attributes contains any of the argument keywords.","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"public abstract class FindPersonCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"    public static final String COMMAND_WORD \u003d \"findp\";","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons based on attributes \"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"            + \"(name/phone/email/address/remark) whose attributes contain any of the specified keywords \"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"            + \"(case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"            + \"The command does not allow multiple attributes to be filtered at the same time.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"            + \"Parameters: (n|p|e|a|r)/ KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/ alice bob charlie\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"onefangg":9,"-":9}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonEmailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all persons in ReadyBakey whose predicate (email) contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"public class FindPersonEmailCommand extends FindPersonCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    private EmailContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"email\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    public FindPersonEmailCommand(EmailContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_PERSONS_OVERVIEW, model.getFilteredPersonList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"                false, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"                || (other instanceof FindPersonEmailCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"                \u0026\u0026 predicate.equals(((FindPersonEmailCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"onefangg":37}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all persons in ReadyBakey whose predicate (name) contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"public class FindPersonNameCommand extends FindPersonCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    private NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"name\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    public FindPersonNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_PERSONS_OVERVIEW, model.getFilteredPersonList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"                false, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"                || (other instanceof FindPersonNameCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"                \u0026\u0026 predicate.equals(((FindPersonNameCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"onefangg":38}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonPhoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all persons in ReadyBakey whose predicate (phone) contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"public class FindPersonPhoneCommand extends FindPersonCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    private PhoneContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"phone\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    public FindPersonPhoneCommand(PhoneContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_PERSONS_OVERVIEW, model.getFilteredPersonList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"                false, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"                || (other instanceof FindPersonPhoneCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"                \u0026\u0026 predicate.equals(((FindPersonPhoneCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"onefangg":37}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonRemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.RemarkContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" *  Finds and lists all persons in ReadyBakey whose predicate (remark) contains any of the argument keywords.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":" *  Keyword matching is case insensitive.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"public class FindPersonRemarkCommand extends FindPersonCommand {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    private RemarkContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"    private final String attributeName \u003d \"remark\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public FindPersonRemarkCommand(RemarkContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"                String.format(Messages.MESSAGE_FIND_PERSONS_OVERVIEW, model.getFilteredPersonList().size(),","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"                        attributeName, predicate.getKeywordsString()),","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"                false, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"                || (other instanceof FindPersonRemarkCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"                \u0026\u0026 predicate.equals(((FindPersonRemarkCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"onefangg":38}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, false, false,","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"                true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"declanleeler":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, true);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"declanleeler":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/ListOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":" * Lists all orders in the address book to the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"public class ListOrderCommand extends Command {","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    public static final String COMMAND_WORD \u003d \"listo\";","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all orders\";","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(MESSAGE_SUCCESS, true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Geralddtan":23,"declanleeler":1}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"public class ListPersonCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    public static final String COMMAND_WORD \u003d \"listp\";","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, true);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"declanleeler":1,"punnyhuimin":23}},{"path":"src/main/java/seedu/address/logic/commands/MarkOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Complete;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"public class MarkOrderCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"    public static final String COMMAND_WORD \u003d \"marko\";","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"            + \": Marks the order identified by the index number used in the displayed order list as complete.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"    public static final String MESSAGE_MARK_ORDER_SUCCESS \u003d \"Completed Order: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"    public MarkOrderCommand(Index targetIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"        Order orderToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"        Order editedOrder \u003d createMarkedOrder(orderToMark);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"        model.setOrder(orderToMark, editedOrder);","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_ORDER_SUCCESS, editedOrder), true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"    private Order createMarkedOrder(Order orderToMark) {","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"        assert orderToMark !\u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"        Remark updatedRemark \u003d orderToMark.getRemark();","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"        List\u003cDetails\u003e updatedDetails \u003d orderToMark.getDetails();","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"        DeliveryDateTime updatedDeliveryDateTime \u003d orderToMark.getDeliveryDateTime();","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"        CollectionType updatedCollectionType \u003d orderToMark.getCollectionType();","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"        Complete updatedComplete \u003d new Complete(true);","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"darshan152"},"content":"        UUID uuid \u003d orderToMark.getUuid();","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"darshan152"},"content":"        return new Order(updatedRemark, updatedDetails,","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"darshan152"},"content":"                updatedDeliveryDateTime, updatedCollectionType, updatedComplete, uuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"darshan152"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"darshan152"},"content":"                || (other instanceof MarkOrderCommand // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 targetIndex.equals(((MarkOrderCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"darshan152":65,"Geralddtan":9,"onefangg":1,"declanleeler":1}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Complete;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"public class UnmarkOrderCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"    public static final String COMMAND_WORD \u003d \"unmarko\";","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"            + \": Marks the order identified by the index number used in the displayed order list as incomplete.\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"    public static final String MESSAGE_UNMARK_ORDER_SUCCESS \u003d \"Order Incomplete: %1$s\";","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"    public UnmarkOrderCommand(Index targetIndex) {","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"        Order orderToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"        Order editedOrder \u003d createUnmarkedOrder(orderToUnmark);","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"        model.setOrder(orderToUnmark, editedOrder);","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_ORDER_SUCCESS, editedOrder), true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"     * Creates order that is not completed","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"     * @param orderToUnmark Order to copy","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"     * @return Order that is incomplete","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"darshan152"},"content":"    private Order createUnmarkedOrder(Order orderToUnmark) {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"        assert orderToUnmark !\u003d null;","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"        Remark updatedRemark \u003d orderToUnmark.getRemark();","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"        List\u003cDetails\u003e updatedDetails \u003d orderToUnmark.getDetails();","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"        DeliveryDateTime updatedDeliveryDateTime \u003d orderToUnmark.getDeliveryDateTime();","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"        CollectionType updatedCollectionType \u003d orderToUnmark.getCollectionType();","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"        Complete updatedComplete \u003d new Complete(false);","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"darshan152"},"content":"        UUID uuid \u003d orderToUnmark.getUuid();","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"darshan152"},"content":"        return new Order(updatedRemark, updatedDetails,","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"                updatedDeliveryDateTime, updatedCollectionType, updatedComplete, uuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"darshan152"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"darshan152"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"darshan152"},"content":"                || (other instanceof UnmarkOrderCommand // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkOrderCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"darshan152":76,"Geralddtan":6,"onefangg":1,"declanleeler":1}},{"path":"src/main/java/seedu/address/logic/parser/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COLLECTION_TYPE;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELIVERYDATETIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"public class AddOrderCommandParser implements Parser\u003cAddOrderCommand\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     * and returns an AddOrderCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_REMARK,","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"                        PREFIX_DETAILS, PREFIX_DELIVERYDATETIME, PREFIX_COLLECTION_TYPE);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PHONE, PREFIX_DETAILS,","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"                PREFIX_DELIVERYDATETIME, PREFIX_COLLECTION_TYPE)","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"        List\u003cDetails\u003e details \u003d ParserUtil.parseDetails(argMultimap.getAllValues(PREFIX_DETAILS));","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        DeliveryDateTime deliveryDateTime \u003d ParserUtil.parseDeliveryDateTime(argMultimap","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"                .getValue(PREFIX_DELIVERYDATETIME).get());","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        CollectionType collectionType \u003d ParserUtil.parseCollectionType(","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"                argMultimap.getValue(PREFIX_COLLECTION_TYPE).get());","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"        return new AddOrderCommand(phone, remark, details, deliveryDateTime, collectionType);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":3,"Geralddtan":53,"onefangg":2}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"                        PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Geralddtan":14,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.logic.commands.EditOrderCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"import seedu.address.logic.commands.FindIncompleteOrdersCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindOrderCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.ListOrderCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.MarkOrderCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.UnmarkOrderCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"darshan152"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"        case EditOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"            return new EditOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"        case DeleteOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"            return new DeleteOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"onefangg"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"        case FindOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"onefangg"},"content":"            return new FindOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"onefangg"},"content":"        case ListPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"onefangg"},"content":"            return new ListPersonCommand();","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"        case ListOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"            return new ListOrderCommand();","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"darshan152"},"content":"        case MarkOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"darshan152"},"content":"            return new MarkOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"darshan152"},"content":"        case UnmarkOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"darshan152"},"content":"            return new UnmarkOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":100,"author":{"gitId":"declanleeler"},"content":"        case FindIncompleteOrdersCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"declanleeler"},"content":"            return new FindIncompleteOrdersCommandParser().parse(arguments);","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"darshan152":9,"Geralddtan":12,"onefangg":9,"declanleeler":7,"-":66,"punnyhuimin":5}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"    /** Returns all {@code prefix} values.","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"    public ArrayList\u003cPrefix\u003e getAllPrefixes() {","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"        return new ArrayList\u003c\u003e(argMultimap.keySet());","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"onefangg":6,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    public static final Prefix PREFIX_DETAILS \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    public static final Prefix PREFIX_DELIVERYDATETIME \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    public static final Prefix PREFIX_COLLECTION_TYPE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public static final Prefix PREFIX_BLANK \u003d new Prefix(\"\");","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Geralddtan":4,"onefangg":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.DeleteOrderCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"public class DeleteOrderCommandParser implements Parser\u003cDeleteOrderCommand\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    public DeleteOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"            return new DeleteOrderCommand(index);","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Geralddtan":5,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"declanleeler":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/EditOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COLLECTION_TYPE;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELIVERYDATETIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.logic.commands.EditOrderCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.logic.commands.EditOrderCommand.EditOrderDescriptor;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":" * Parses input arguments and creates a new EditOrderCommand object","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"public class EditOrderCommandParser implements Parser\u003cEditOrderCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    public EditOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DETAILS, PREFIX_REMARK,","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"                        PREFIX_DELIVERYDATETIME, PREFIX_COLLECTION_TYPE);","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        Index index;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"                    pe","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"            );","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderDescriptor editOrderDescriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        if (argMultimap.getValue(PREFIX_DETAILS).isPresent()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"            editOrderDescriptor.setDetails(ParserUtil.parseDetails(argMultimap.getAllValues(PREFIX_DETAILS)));","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"            editOrderDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"        if (argMultimap.getValue(PREFIX_DELIVERYDATETIME).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"            editOrderDescriptor.setDeliveryDateTime(ParserUtil.parseDeliveryDateTime(","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"                    argMultimap.getValue(PREFIX_DELIVERYDATETIME).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        if (argMultimap.getValue(PREFIX_COLLECTION_TYPE).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"            editOrderDescriptor.setCollectionType(ParserUtil.parseCollectionType(","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"                    argMultimap.getValue(PREFIX_COLLECTION_TYPE).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"        if (!editOrderDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"            throw new ParseException(EditOrderCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"        return new EditOrderCommand(index, editOrderDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"darshan152":3,"Geralddtan":14,"onefangg":1,"punnyhuimin":47}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"                        PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"                    pe","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"            );","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"darshan152":10,"Geralddtan":9,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/FindIncompleteOrdersCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import seedu.address.logic.commands.FindIncompleteOrdersCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.order.OrderIncompleteBeforeDeliveryDateTimePredicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"public class FindIncompleteOrdersCommandParser {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"     * Parses the given {@code String} of arguments in the context of the FindIncompleteOrdersCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"     * and returns a FindIncompleteOrdersCommand object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    public FindIncompleteOrdersCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindIncompleteOrdersCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"            Predicate\u003cOrder\u003e orderBeforeDeliveryDateTimePredicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"            DeliveryDateTime deliveryDateTime \u003d ParserUtil.parseDeliveryDateTime(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"            orderBeforeDeliveryDateTimePredicate \u003d new OrderIncompleteBeforeDeliveryDateTimePredicate(deliveryDateTime);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"            return new FindIncompleteOrdersCommand(orderBeforeDeliveryDateTimePredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindIncompleteOrdersCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"declanleeler":38}},{"path":"src/main/java/seedu/address/logic/parser/FindOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COLLECTION_TYPE;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.ParserUtil.isOnlyOnePrefixPresent;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.FindOrderCollectionTypeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindOrderCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.FindOrderDetailsCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.FindOrderNameCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.FindOrderPhoneCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.FindOrderRemarkCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionTypeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DetailsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.RemarkContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":" * Parses input arguments and creates a new FindOrderCommand object","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"public class FindOrderCommandParser implements Parser\u003cFindOrderCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"     * Parses the given {@code String} of arguments in the context of the FindOrderCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"     * and returns a FindOrderCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"    public FindOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_NAME,","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"                        PREFIX_REMARK, PREFIX_DETAILS, PREFIX_COLLECTION_TYPE);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"        if (isOnlyOnePrefixPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"            String[] nameKeywords \u003d getKeywords(argMultimap, PREFIX_NAME);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"            return new FindOrderNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"        } else if (isOnlyOnePrefixPresent(argMultimap, PREFIX_PHONE)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"            String[] phoneKeywords \u003d getKeywords(argMultimap, PREFIX_PHONE);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"            return new FindOrderPhoneCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(phoneKeywords)));","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        } else if (isOnlyOnePrefixPresent(argMultimap, PREFIX_REMARK)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"            String[] remarkKeywords \u003d getKeywords(argMultimap, PREFIX_REMARK);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"            return new FindOrderRemarkCommand(new RemarkContainsKeywordsPredicate(Arrays.asList(remarkKeywords)));","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        } else if (isOnlyOnePrefixPresent(argMultimap, PREFIX_DETAILS)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"            checkDetailsItemKeyword(argMultimap, PREFIX_DETAILS);","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"            String[] detailsKeywords \u003d getKeywords(argMultimap, PREFIX_DETAILS);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"            return new FindOrderDetailsCommand(new DetailsContainsKeywordsPredicate(Arrays.asList(detailsKeywords)));","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"        } else if (isOnlyOnePrefixPresent(argMultimap, PREFIX_COLLECTION_TYPE)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"            String collectionTypeKeyword \u003d argMultimap.getValue(PREFIX_COLLECTION_TYPE).get().trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"            return new FindOrderCollectionTypeCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"                    new CollectionTypeContainsKeywordsPredicate(collectionTypeKeyword));","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"        } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"onefangg"},"content":"    private static String[] getKeywords(ArgumentMultimap argMultiMap, Prefix findPrefix) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"onefangg"},"content":"        String keywordString \u003d argMultiMap.getValue(findPrefix).get().trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"onefangg"},"content":"        if (keywordString.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"onefangg"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"onefangg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"onefangg"},"content":"        return keywordString.split(\"\\\\s+\");","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"    private static void checkDetailsItemKeyword(ArgumentMultimap argMultiMap, Prefix findPrefix) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"        if (!Details.isValidFindDetailsItem(argMultiMap.getValue(findPrefix).get().trim())) {","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, Details.FIND_ITEM_MESSAGE_CONSTRAINTS));","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"darshan152":4,"Geralddtan":25,"onefangg":57}},{"path":"src/main/java/seedu/address/logic/parser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.ParserUtil.isOnlyOnePrefixPresent;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonAddressCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonEmailCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonNameCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonPhoneCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonRemarkCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.RemarkContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":" * Parses input arguments and creates a new FindPersonCommand object","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"public class FindPersonCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonCommand","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"     * and returns a FindPersonCommand object for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_NAME, PREFIX_EMAIL,","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"                        PREFIX_REMARK, PREFIX_ADDRESS);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"        if (isOnlyOnePrefixPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"            String[] nameKeywords \u003d getKeywords(argMultimap, PREFIX_NAME);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"            return new FindPersonNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"        } else if (isOnlyOnePrefixPresent(argMultimap, PREFIX_PHONE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"            String[] phoneKeywords \u003d getKeywords(argMultimap, PREFIX_PHONE);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"            return new FindPersonPhoneCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(phoneKeywords)));","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"onefangg"},"content":"        } else if (isOnlyOnePrefixPresent(argMultimap, PREFIX_EMAIL)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"            String[] emailKeywords \u003d getKeywords(argMultimap, PREFIX_EMAIL);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"            return new FindPersonEmailCommand(new EmailContainsKeywordsPredicate(Arrays.asList(emailKeywords)));","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"onefangg"},"content":"        } else if (isOnlyOnePrefixPresent(argMultimap, PREFIX_REMARK)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"onefangg"},"content":"            String[] remarkKeywords \u003d getKeywords(argMultimap, PREFIX_REMARK);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"            return new FindPersonRemarkCommand(new RemarkContainsKeywordsPredicate(Arrays.asList(remarkKeywords)));","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"        } else if (isOnlyOnePrefixPresent(argMultimap, PREFIX_ADDRESS)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"            String[] addressKeywords \u003d getKeywords(argMultimap, PREFIX_ADDRESS);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"            return new FindPersonAddressCommand(new AddressContainsKeywordsPredicate(Arrays.asList(addressKeywords)));","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"    private static String[] getKeywords(ArgumentMultimap argMultiMap, Prefix findPrefix) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"onefangg"},"content":"        String keywordString \u003d argMultiMap.getValue(findPrefix).get().trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"onefangg"},"content":"        if (keywordString.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"onefangg"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"onefangg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"onefangg"},"content":"        return keywordString.split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"onefangg":52,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/MarkOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.MarkOrderCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"public class MarkOrderCommandParser implements Parser\u003cMarkOrderCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"    public MarkOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"            return new MarkOrderCommand(index);","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"darshan152":25}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MAX_INPUT_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MAX_SIZE_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLANK;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.order.Details.ITEM_MESSAGE_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.order.Details.ITEM_SIZE_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.order.Details.QUANTITY_MESSAGE_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.order.Details.QUANTITY_SIZE_MAX_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.order.Details.QUANTITY_SIZE_MIN_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Address.ADDRESS_SIZE_MAX_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Address.ADDRESS_SIZE_MIN_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Address.MESSAGE_ADDRESS_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Email.EMAIL_SIZE_MAX_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Email.EMAIL_SIZE_MIN_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Email.MESSAGE_EMAIL_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Name.MESSAGE_NAME_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Name.NAME_SIZE_MAX_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Name.NAME_SIZE_MIN_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Phone.MESSAGE_PHONE_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Phone.PHONE_SIZE_MAX_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.model.person.Phone.PHONE_SIZE_MIN_LIMIT;","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"import static seedu.address.model.tag.Tag.MESSAGE_TAG_LIMIT;","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"import static seedu.address.model.tag.Tag.TAG_SIZE_MAX_LIMIT;","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.order.DateChecker;","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"        int trimmedNameLength \u003d trimmedName.length();","lastModifiedDate":"2022-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"        } else if (trimmedNameLength \u003c NAME_SIZE_MIN_LIMIT || trimmedNameLength \u003e NAME_SIZE_MAX_LIMIT) {","lastModifiedDate":"2022-04-01"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"            throw new ParseException(String.format(MESSAGE_NAME_LIMIT, PREFIX_NAME));","lastModifiedDate":"2022-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"        int trimmedPhoneLength \u003d trimmedPhone.length();","lastModifiedDate":"2022-04-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"        } else if (trimmedPhoneLength \u003c PHONE_SIZE_MIN_LIMIT || trimmedPhoneLength \u003e PHONE_SIZE_MAX_LIMIT) {","lastModifiedDate":"2022-04-01"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"            throw new ParseException(String.format(MESSAGE_PHONE_LIMIT, PREFIX_PHONE));","lastModifiedDate":"2022-04-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"        int trimmedAddressLength \u003d trimmedAddress.length();","lastModifiedDate":"2022-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"        } else if (trimmedAddressLength \u003c ADDRESS_SIZE_MIN_LIMIT || trimmedAddressLength \u003e ADDRESS_SIZE_MAX_LIMIT) {","lastModifiedDate":"2022-04-01"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"            throw new ParseException(String.format(MESSAGE_ADDRESS_LIMIT, PREFIX_ADDRESS));","lastModifiedDate":"2022-04-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"Geralddtan"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"Geralddtan"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"Geralddtan"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"Geralddtan"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"Geralddtan"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"Geralddtan"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"punnyhuimin"},"content":"        int trimmedEmailLength \u003d trimmedEmail.length();","lastModifiedDate":"2022-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":156,"author":{"gitId":"punnyhuimin"},"content":"        } else if (trimmedEmailLength \u003c EMAIL_SIZE_MIN_LIMIT || trimmedEmailLength \u003e EMAIL_SIZE_MAX_LIMIT) {","lastModifiedDate":"2022-04-01"},{"lineNumber":157,"author":{"gitId":"punnyhuimin"},"content":"            throw new ParseException(String.format(MESSAGE_EMAIL_LIMIT, PREFIX_EMAIL));","lastModifiedDate":"2022-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":163,"author":{"gitId":"onefangg"},"content":"     * Parses {@code Collection\u003cString\u003e detail} into a {@code List\u003cDetail\u003e}.","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":165,"author":{"gitId":"onefangg"},"content":"    public static List\u003cDetails\u003e parseDetails(Collection\u003cString\u003e details) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(details);","lastModifiedDate":"2022-03-03"},{"lineNumber":167,"author":{"gitId":"onefangg"},"content":"        if (details.size() \u003e Order.MAX_DETAIL_SIZE) {","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"onefangg"},"content":"            throw new ParseException(String.format(MESSAGE_MAX_SIZE_LIMIT, PREFIX_DETAILS, Order.MAX_DETAIL_SIZE));","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"onefangg"},"content":"        final List\u003cDetails\u003e detailsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"onefangg"},"content":"        for (String detailInput : details) {","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"onefangg"},"content":"            detailsList.add(parseDetail(detailInput));","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"onefangg"},"content":"        return detailsList;","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"onefangg"},"content":"     * Parses a {@code String detail} into a {@code Details}.","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"onefangg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"onefangg"},"content":"     * @throws ParseException if the given {@code detail} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"onefangg"},"content":"    public static Details parseDetail(String detail) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"onefangg"},"content":"        requireNonNull(detail);","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"onefangg"},"content":"        String trimmedDetails \u003d detail.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"Geralddtan"},"content":"        if (!Details.isValidDetails(trimmedDetails)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":187,"author":{"gitId":"Geralddtan"},"content":"            throw new ParseException(Details.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":189,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"onefangg"},"content":"        // parse and validate input quantity","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"onefangg"},"content":"        String parseInputQuantity \u003d Details.parseValidatedQuantity(trimmedDetails);","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"onefangg"},"content":"        int inputQuantity \u003d Integer.parseInt(parseInputQuantity);","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"onefangg"},"content":"        assert inputQuantity \u003e\u003d 0; // negative numbers must be rejected in regex case","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"onefangg"},"content":"        if (inputQuantity \u003c QUANTITY_SIZE_MIN_LIMIT || inputQuantity \u003e QUANTITY_SIZE_MAX_LIMIT) {","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"onefangg"},"content":"            throw new ParseException(String.format(MESSAGE_MAX_INPUT_LIMIT, PREFIX_DETAILS,","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"onefangg"},"content":"                    QUANTITY_MESSAGE_LIMIT));","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"onefangg"},"content":"        String parseInputItem \u003d Details.parseValidatedItem(trimmedDetails);","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"onefangg"},"content":"        if (parseInputItem.length() \u003e ITEM_SIZE_LIMIT) {","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"onefangg"},"content":"            throw new ParseException(String.format(MESSAGE_MAX_INPUT_LIMIT, PREFIX_DETAILS,","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"onefangg"},"content":"                    ITEM_MESSAGE_LIMIT));","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"onefangg"},"content":"        return new Details(trimmedDetails, parseInputItem, inputQuantity);","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":206,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":207,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"Geralddtan"},"content":"     * Parses a {@code String deliveryDateTime} into an {@code Address}.","lastModifiedDate":"2022-03-16"},{"lineNumber":209,"author":{"gitId":"Geralddtan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"Geralddtan"},"content":"     * @throws ParseException if the given {@code deliveryDateTime} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"Geralddtan"},"content":"    public static DeliveryDateTime parseDeliveryDateTime(String deliveryDateTime) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(deliveryDateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"Geralddtan"},"content":"        String trimmedDeliveryDateTime \u003d deliveryDateTime.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"punnyhuimin"},"content":"        String parsedDeliveryDateTime \u003d DateChecker.parsePotentialNaturalDate(trimmedDeliveryDateTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"punnyhuimin"},"content":"        if (!DeliveryDateTime.isValidDeliveryDateTime(parsedDeliveryDateTime)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"Geralddtan"},"content":"            throw new ParseException(DeliveryDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"Geralddtan"},"content":"        } else if (!DeliveryDateTime.isValidLeapYearDeliveryDateTimeValue(parsedDeliveryDateTime)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"Geralddtan"},"content":"            throw new ParseException(DeliveryDateTime.MESSAGE_CONSTRAINTS_LEAP_YEAR);","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"punnyhuimin"},"content":"        return new DeliveryDateTime(parsedDeliveryDateTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"Geralddtan"},"content":"     * Parses a {@code String collectionType} into an {@code Address}.","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"Geralddtan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"Geralddtan"},"content":"     * @throws ParseException if the given {@code collectionType} is invalid.","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"Geralddtan"},"content":"    public static CollectionType parseCollectionType(String collectionType) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(collectionType);","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"Geralddtan"},"content":"        String trimmedCollectionType \u003d collectionType.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"Geralddtan"},"content":"        String trimmedCollectionTypeCapital \u003d trimmedCollectionType.substring(0, 1).toUpperCase()","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"Geralddtan"},"content":"                + trimmedCollectionType.substring(1).toLowerCase(); // Make it Capitalised","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"Geralddtan"},"content":"        if (!CollectionType.isValidCollectionTypeValue(trimmedCollectionTypeCapital)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"Geralddtan"},"content":"            throw new ParseException(CollectionType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"Geralddtan"},"content":"        if (trimmedCollectionTypeCapital.equals(CollectionType.DELIVERY.getValue())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"Geralddtan"},"content":"            return CollectionType.DELIVERY;","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"Geralddtan"},"content":"        } else if (trimmedCollectionTypeCapital.equals(CollectionType.PICKUP.getValue())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"Geralddtan"},"content":"            return CollectionType.PICKUP;","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"Geralddtan"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"Geralddtan"},"content":"            throw new ParseException(CollectionType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":247,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":248,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":249,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":261,"author":{"gitId":"darshan152"},"content":"        } else if (trimmedTag.length() \u003e TAG_SIZE_MAX_LIMIT) {","lastModifiedDate":"2022-04-05"},{"lineNumber":262,"author":{"gitId":"darshan152"},"content":"            throw new ParseException(String.format(MESSAGE_TAG_LIMIT, PREFIX_TAG));","lastModifiedDate":"2022-04-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":278,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":279,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"onefangg"},"content":"     * Returns true if only {@code searchPrefix} is the only prefix in {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-29"},{"lineNumber":281,"author":{"gitId":"onefangg"},"content":"     * Checks ignore all other prefixes not passed in initial {@code tokenize()}  method.","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":283,"author":{"gitId":"onefangg"},"content":"    public static boolean isOnlyOnePrefixPresent(ArgumentMultimap argumentMultimap, Prefix searchPrefix) {","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"onefangg"},"content":"        ArrayList\u003cPrefix\u003e argPrefixes \u003d argumentMultimap.getAllPrefixes();","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"onefangg"},"content":"        // check that prefix exists","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"onefangg"},"content":"        boolean isSearchPrefixExists \u003d argPrefixes.stream().filter(prefix -\u003e prefix.equals(searchPrefix)).count() \u003d\u003d 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"onefangg"},"content":"        // check no other prefix exists except for blank prefix as by-product of tokenizing","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"onefangg"},"content":"        boolean noOtherPrefixExists \u003d argPrefixes.stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"onefangg"},"content":"                .filter(prefix -\u003e !prefix.equals(searchPrefix) || prefix.equals(PREFIX_BLANK))","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"onefangg"},"content":"                .count() \u003d\u003d 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"onefangg"},"content":"        return isSearchPrefixExists \u0026\u0026 noOtherPrefixExists;","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"darshan152":5,"Geralddtan":67,"onefangg":63,"-":124,"punnyhuimin":35}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.UnmarkOrderCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"public class UnmarkOrderCommandParser implements Parser\u003cUnmarkOrderCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"     * and returns a UnmarkCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"    public UnmarkOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"            return new UnmarkOrderCommand(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"darshan152":25}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.UniqueOrderList;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    private final UniqueOrderList orders;","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"        orders \u003d new UniqueOrderList();","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"     * Replaces the contents of the order list with {@code orders}.","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"        this.orders.setOrders(orders);","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"        setOrders(newData.getOrderList());","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"Geralddtan"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(order);","lastModifiedDate":"2022-03-03"},{"lineNumber":115,"author":{"gitId":"Geralddtan"},"content":"        return orders.contains(order);","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":117,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"Geralddtan"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"Geralddtan"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"Geralddtan"},"content":"    public void removeOrder(Order key) {","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"        orders.remove(key);","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":127,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"Geralddtan"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":130,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"        orders.add(order);","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"Geralddtan"},"content":"     * Replaces the given order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"Geralddtan"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"Geralddtan"},"content":"     * The person identity of {@code editedOrder} must not be the same as another existing order in the address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":140,"author":{"gitId":"Geralddtan"},"content":"    public void setOrder(Order targetOrder, Order editedOrder) {","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(editedOrder);","lastModifiedDate":"2022-03-03"},{"lineNumber":142,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":143,"author":{"gitId":"Geralddtan"},"content":"        orders.setOrder(targetOrder, editedOrder);","lastModifiedDate":"2022-03-03"},{"lineNumber":144,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":145,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"Geralddtan"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons, \"","lastModifiedDate":"2022-03-03"},{"lineNumber":151,"author":{"gitId":"Geralddtan"},"content":"                + orders.asUnmodifiableObservableList().size() + \" orders\";","lastModifiedDate":"2022-03-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":161,"author":{"gitId":"Geralddtan"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":162,"author":{"gitId":"Geralddtan"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-03"},{"lineNumber":163,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":164,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Geralddtan":57,"-":119}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    Predicate\u003cOrder\u003e PREDICATE_SHOW_ALL_ORDERS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"     * Returns the user prefs\u0027 ReadyBakey file path.","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"     * Sets the user prefs\u0027 ReadyBakey file path.","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"     * Replaces ReadyBakey data with the data in {@code addressBook}.","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the ReadyBakey.","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"     * The person must exist in the ReadyBakey.","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"onefangg"},"content":"     * {@code person} must not already exist in the ReadyBakey.","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"     * {@code target} must exist in the ReadyBakey.","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the ReadyBakey.","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if an order with the same identity as {@code order} exists in ReadyBakey.","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"    boolean hasOrder(Order order);","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"     * Adds the given order.","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"darshan152"},"content":"     * {@code order} must not already exist in the ReadyBakey.","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"    void addOrder(Order order);","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"     * Deletes the given order.","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"darshan152"},"content":"     * The {@code order} must exist in the ReadyBakey.","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"    void deleteOrder(Order target);","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"darshan152"},"content":"     * Replaces the given order {@code target} with {@code editedOrder}.","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"darshan152"},"content":"     * {@code target} must exist in the ReadyBakey.","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"darshan152"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the ReadyBakey.","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"    void setOrder(Order target, Order editedOrder);","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"    /** Returns an unmodifiable view of the filtered order list */","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"Geralddtan"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"Geralddtan"},"content":"     * Updates the filter of the filtered orders list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"Geralddtan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"    void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"darshan152"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"darshan152"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"darshan152"},"content":"     * Returns an unmodifiable view of the filtered order list","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"darshan152"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"declanleeler"},"content":"     * Updates the filter of the filtered orders list to filter by the given {@code predicate}","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"declanleeler"},"content":"     * and sorts it by DeliveryDateTime","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"declanleeler"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"declanleeler"},"content":"    void updatedSortedFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"declanleeler"},"content":"     * Sorts a given {@code orderList} by DeliveryDateTime","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"declanleeler"},"content":"     * @throws NullPointerException if {@code orderList} is null.","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"declanleeler"},"content":"    void updatedSortedOrderList(ObservableList\u003cOrder\u003e orderList);","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"darshan152":21,"Geralddtan":28,"onefangg":8,"declanleeler":12,"-":79}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.order.OrderDateComparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    private final FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    private final OrderDateComparator orderDateComparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    private ObservableList\u003cOrder\u003e orders;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"        this.orderDateComparator \u003d new OrderDateComparator();","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.addressBook.getOrderList());","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"        orders \u003d filteredOrders;","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ReadyBakey Person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ReadyBakey Order \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"Geralddtan"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2022-03-03"},{"lineNumber":127,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(order);","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"Geralddtan"},"content":"        return addressBook.hasOrder(order);","lastModifiedDate":"2022-03-03"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":130,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"    public void deleteOrder(Order target) {","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"        addressBook.removeOrder(target);","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":137,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"Geralddtan"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"Geralddtan"},"content":"        addressBook.addOrder(order);","lastModifiedDate":"2022-03-03"},{"lineNumber":140,"author":{"gitId":"Geralddtan"},"content":"        updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":142,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":143,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"darshan152"},"content":"    public void setOrder(Order target, Order editedPerson) {","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"darshan152"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"darshan152"},"content":"        addressBook.setOrder(target, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"darshan152"},"content":"     * Returns the full list of {@code Person} in the AddressBook","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"darshan152"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"darshan152"},"content":"        return addressBook.getPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"Geralddtan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Order List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":176,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":177,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":178,"author":{"gitId":"declanleeler"},"content":"     * Returns a view of the list of {@code Order} backed by the internal list of","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"Geralddtan"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-03"},{"lineNumber":180,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":181,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":182,"author":{"gitId":"Geralddtan"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":183,"author":{"gitId":"declanleeler"},"content":"        return orders;","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":185,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":186,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"darshan152"},"content":"     * Returns the full list of {@code Order} in the AddressBook","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"darshan152"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"darshan152"},"content":"        return addressBook.getOrderList();","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":196,"author":{"gitId":"Geralddtan"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2022-03-03"},{"lineNumber":197,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-03"},{"lineNumber":198,"author":{"gitId":"Geralddtan"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2022-03-03"},{"lineNumber":199,"author":{"gitId":"declanleeler"},"content":"        orders \u003d filteredOrders;","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"declanleeler"},"content":"    public void updatedSortedOrderList(ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"declanleeler"},"content":"        requireNonNull(orderList);","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"declanleeler"},"content":"        orders \u003d new SortedList\u003c\u003e(orderList, orderDateComparator);","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"declanleeler"},"content":"    public void updatedSortedFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"declanleeler"},"content":"        updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"declanleeler"},"content":"        updatedSortedOrderList(filteredOrders);","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":213,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":230,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-11"},{"lineNumber":231,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 filteredOrders.equals(other.filteredOrders);","lastModifiedDate":"2022-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darshan152":24,"Geralddtan":41,"declanleeler":21,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"     * Returns an unmodifiable view of the orders list.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Geralddtan":7,"-":17}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"readybakey.json\");","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":86,"punnyhuimin":1}},{"path":"src/main/java/seedu/address/model/order/CollectionType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":" * Represents an order\u0027s CollectionType in ReadyBakey.","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"public enum CollectionType {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    DELIVERY(\"Delivery\"),","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    PICKUP(\"Pickup\");","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"CollectionType can only be either Delivery or Pickup\";","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    /*","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * Must either be Delivery or Pickup","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(Delivery|Pickup)$\";","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    public final String value;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"     * Constructs an {@code CollectionType}.","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     * @param collectionType A valid CollectionType","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    CollectionType(String collectionType) {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(collectionType);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        checkArgument(isValidCollectionTypeValue(collectionType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"        value \u003d collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if a given string is a valid CollectionTypeValue.","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"    public static boolean isValidCollectionTypeValue(String test) {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"    public String getValue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        return value;","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Geralddtan":45}},{"path":"src/main/java/seedu/address/model/order/CollectionTypeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":" * Tests that a {@code Order}\u0027s {@code CollectionType} matches any of the keywords given.","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"public class CollectionTypeContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"    private final String keyword;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    public CollectionTypeContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    public String getKeywordsString() {","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"        return keyword;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"        return order.getCollectionType().getValue().equalsIgnoreCase(keyword);","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof CollectionTypeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 keyword.equals(((CollectionTypeContainsKeywordsPredicate) other).keyword)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":26,"onefangg":4}},{"path":"src/main/java/seedu/address/model/order/Complete.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"public class Complete {","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Complete can take only boolean values\";","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"    public final Boolean isCompleted;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"     * Constructs a {@code Complete}.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"     * @param value A valid boolean.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"    public Complete(Boolean value) {","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"        this.isCompleted \u003d value;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"     * Constructs a {@code Complete}.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"     * @param value A valid string of a boolean.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"    public Complete(String value) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"        if (value.equals(Boolean.TRUE.toString())) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"            this.isCompleted \u003d true;","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"        } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"            this.isCompleted \u003d false;","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"     * Returns true if a given string is a valid complete value.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"    public static boolean isValidComplete(String details) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"        return details.equals(Boolean.FALSE.toString())","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"                || details.equals(Boolean.TRUE.toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"    public boolean isComplete() {","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"        return this.isCompleted;","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"        return (isCompleted) ? \"Complete\" : \"Incomplete\";","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"                || (other instanceof Complete // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 isCompleted.equals(((Complete) other).isCompleted)); // state check","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"darshan152"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"darshan152"},"content":"        return isCompleted.hashCode();","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"darshan152":65,"declanleeler":1}},{"path":"src/main/java/seedu/address/model/order/DateChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import java.text.DateFormat;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Calendar;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.order.NaturalDateParser.Dates;","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" * DateChecker is used to help convert Strings into the proper date time formats.","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":" * It also helps to check for the validity of the date inputted.","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":" * If the date input is invalid, (e.g. missing the day, short form months), it throws a DukeException.","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"public class DateChecker {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    private static String dateFormat;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    private static String dateToCheck;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    private static String timeToCheck;","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    // boolean which says if the input date is before the current time (true) or after or if the time provided is","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    // invalid (false).","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    private static boolean isTimeBeforeCurrentTime;","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    private static final int NUM_DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     * Method meant to detect what type of date user inputs.","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     * Format inputs that are not valid date types, but are natural dates.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     * Returns the original input if it notices that it is not a natural date.","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"    private static void naturalDateCheck() {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"        // add case to check for time provided","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        NaturalDateParser dateChecked \u003d new NaturalDateParser(dateToCheck);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"        Dates inputtedDay \u003d dateChecked.getDate(); // This gives the enum date which is like \"MONDAY\"","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"        // Solution to get current day of week and next required natural date adapted from:","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        // https://coderanch.com/t/385117/java/date-Monday","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        Calendar now \u003d Calendar.getInstance();","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        int dayToday \u003d now.get(Calendar.DAY_OF_WEEK);","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"        int nextMonday \u003d (Calendar.SATURDAY - dayToday + 2) % NUM_DAYS_IN_WEEK;","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"        int nextTuesday \u003d (Calendar.SATURDAY - dayToday + 3) % NUM_DAYS_IN_WEEK;","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        int nextWednesday \u003d (Calendar.SATURDAY - dayToday + 4) % NUM_DAYS_IN_WEEK;","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        int nextThursday \u003d (Calendar.SATURDAY - dayToday + 5) % NUM_DAYS_IN_WEEK;","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        int nextFriday \u003d (Calendar.SATURDAY - dayToday + 6) % NUM_DAYS_IN_WEEK;","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"        int nextSaturday \u003d (Calendar.SATURDAY - dayToday) % NUM_DAYS_IN_WEEK;","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"        int nextSunday \u003d (Calendar.SATURDAY - dayToday + 1) % NUM_DAYS_IN_WEEK;","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        boolean isValidDate \u003d true;","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"        int daysAfter \u003d 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"        switch (inputtedDay) {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"        case MONDAY:","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"            daysAfter \u003d getNumDaysAfter(dayToday, Calendar.MONDAY, nextMonday);","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"        case TUESDAY:","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"            daysAfter \u003d getNumDaysAfter(dayToday, Calendar.TUESDAY, nextTuesday);","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"        case WEDNESDAY:","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"            daysAfter \u003d getNumDaysAfter(dayToday, Calendar.WEDNESDAY, nextWednesday);","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"        case THURSDAY:","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"            daysAfter \u003d getNumDaysAfter(dayToday, Calendar.THURSDAY, nextThursday);","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"        case FRIDAY:","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"            daysAfter \u003d getNumDaysAfter(dayToday, Calendar.FRIDAY, nextFriday);","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"        case SATURDAY:","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"            daysAfter \u003d getNumDaysAfter(dayToday, Calendar.SATURDAY, nextSaturday);","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"        case SUNDAY:","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"            daysAfter \u003d getNumDaysAfter(dayToday, Calendar.SUNDAY, nextSunday);","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"        default:","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d dateToCheck;","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"            isValidDate \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"        if (isValidDate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d formatDate(now, daysAfter);","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"     * Formats the natural date input with a time as a proper datetime.","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"     * @param input Input is the date string provided by the user.","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"     * @return returns a properly formatted date string with the time","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"    public static String parsePotentialNaturalDate(String input) {","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"            processInput(input);","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"            inputTimeBeforeCurrentTimeChecker();","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"            naturalDateCheck();","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"            return dateFormat + \" \" + timeToCheck;","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"        } catch (ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"            dateToCheck \u003d input;","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"            return input;","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"     * Takes in the input and splits it into two strings, date and time.","lastModifiedDate":"2022-04-06"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"     * @param input Inputted date time from the user.","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"    private static void processInput(String input) {","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"        String[] inputSplit \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"        String date \u003d inputSplit[0];","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"        String time \u003d inputSplit[1];","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"        dateToCheck \u003d date;","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"        timeToCheck \u003d time;","lastModifiedDate":"2022-04-06"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the number of days after today that corresponds with the inputted natural date.","lastModifiedDate":"2022-04-06"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"     * @param dayToday This is an integer that ranges from 1-7. It is based on Calendar and 1 is the start of the","lastModifiedDate":"2022-04-06"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"     *                 week, which is Sunday. 7 is the end of the week, which is Saturday.","lastModifiedDate":"2022-04-06"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"     * @param testingDay This is an integer provided by Calendar as well. It is the Calendar.xday, which returns the","lastModifiedDate":"2022-04-06"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"     *                   day that the system should use to check if today is xday.","lastModifiedDate":"2022-04-06"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"     * @param nextNaturalDayAfterToday This is the calculated field e.g. nextMonday, nextTuesday. Since this method","lastModifiedDate":"2022-04-06"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"     *                                 is being used in the switch case, this input provides flexibility for usage in","lastModifiedDate":"2022-04-06"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"     *                                 the switch cases.","lastModifiedDate":"2022-04-06"},{"lineNumber":121,"author":{"gitId":"punnyhuimin"},"content":"     * @return the number of days after today that corresponds with the inputted natural date.","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"    private static int getNumDaysAfter(int dayToday, int testingDay, int nextNaturalDayAfterToday) {","lastModifiedDate":"2022-04-06"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"        if (dayToday \u003d\u003d testingDay \u0026\u0026 isTimeBeforeCurrentTime) {","lastModifiedDate":"2022-04-06"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"            return NUM_DAYS_IN_WEEK;","lastModifiedDate":"2022-04-06"},{"lineNumber":126,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-04-06"},{"lineNumber":127,"author":{"gitId":"punnyhuimin"},"content":"            return nextNaturalDayAfterToday;","lastModifiedDate":"2022-04-06"},{"lineNumber":128,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":132,"author":{"gitId":"punnyhuimin"},"content":"     * Checks if the current time is already past the specified time.","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"punnyhuimin"},"content":"     * Mainly used to handle natural dates that match with today\u0027s day.","lastModifiedDate":"2022-04-06"},{"lineNumber":134,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":135,"author":{"gitId":"punnyhuimin"},"content":"    // @@K.D punnyhuimin-reused","lastModifiedDate":"2022-04-06"},{"lineNumber":136,"author":{"gitId":"punnyhuimin"},"content":"    // Reused from https://stackoverflow.com/questions/18186680/java-check-time-is-greater-time","lastModifiedDate":"2022-04-06"},{"lineNumber":137,"author":{"gitId":"punnyhuimin"},"content":"    // Minor modifications made to fit implementation needs.","lastModifiedDate":"2022-04-06"},{"lineNumber":138,"author":{"gitId":"punnyhuimin"},"content":"    private static void inputTimeBeforeCurrentTimeChecker() {","lastModifiedDate":"2022-04-06"},{"lineNumber":139,"author":{"gitId":"punnyhuimin"},"content":"        Date timeNow \u003d new Date();","lastModifiedDate":"2022-04-06"},{"lineNumber":140,"author":{"gitId":"punnyhuimin"},"content":"        SimpleDateFormat timeFormat \u003d new SimpleDateFormat(\"HH:mm\");","lastModifiedDate":"2022-04-06"},{"lineNumber":141,"author":{"gitId":"punnyhuimin"},"content":"        timeFormat.format(timeNow);","lastModifiedDate":"2022-04-06"},{"lineNumber":142,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-04-06"},{"lineNumber":143,"author":{"gitId":"punnyhuimin"},"content":"            if (timeFormat.parse(timeFormat.format(timeNow)).after(timeFormat.parse(timeToCheck))) {","lastModifiedDate":"2022-04-06"},{"lineNumber":144,"author":{"gitId":"punnyhuimin"},"content":"                isTimeBeforeCurrentTime \u003d true;","lastModifiedDate":"2022-04-06"},{"lineNumber":145,"author":{"gitId":"punnyhuimin"},"content":"            } else {","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"punnyhuimin"},"content":"                isTimeBeforeCurrentTime \u003d false;","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"punnyhuimin"},"content":"            // @@K.D","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"punnyhuimin"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":150,"author":{"gitId":"punnyhuimin"},"content":"            isTimeBeforeCurrentTime \u003d false;","lastModifiedDate":"2022-04-06"},{"lineNumber":151,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":152,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":153,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":154,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"punnyhuimin"},"content":"     * This formats the Date to String. Used in DateChecker only.","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"punnyhuimin"},"content":"     * @param now Calendar class object meant to format the date.","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"punnyhuimin"},"content":"     * @return Date in String format.","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"punnyhuimin"},"content":"    private static String formatDate(Calendar now, int daysAfterToday) {","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"punnyhuimin"},"content":"        now.add(Calendar.DAY_OF_YEAR, daysAfterToday);","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"punnyhuimin"},"content":"        Date date \u003d now.getTime();","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"punnyhuimin"},"content":"        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"punnyhuimin"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"punnyhuimin"},"content":"        return dateFormat.format(date);","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"punnyhuimin":167}},{"path":"src/main/java/seedu/address/model/order/DeliveryDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":" * Represents an Orders\u0027s deliveryDateTime in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeliveryDateTime(String)}","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"public class DeliveryDateTime {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"DeliveryDateTime should be in the format dd-MM-yyyy HH:mm \"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"            + \"or a natural date (e.g. Mon 22:30, Wednesday 10:20) \";","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    public static final String MESSAGE_CONSTRAINTS_LEAP_YEAR \u003d \"Your current input represents a leap day but the \"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"            + \"year is not a leap year! Please check the date again!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"     * The first character of the deliveryDateTime must not be a whitespace,","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]{2}-[0-9]{2}-[0-9]{4} [0-9]{2}:[0-9]{2}\";","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    public static final DateTimeFormatter PARSER_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    public static final DateTimeFormatter STRING_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy, hh:mm a\");","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"     * Constructs an {@code DeliveryDateTime}.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"     * @param deliveryDateTime A valid deliveryDateTime.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"    public DeliveryDateTime(String deliveryDateTime) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(deliveryDateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        checkArgument(isValidDeliveryDateTime(deliveryDateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        checkArgument(isValidLeapYearDeliveryDateTimeValue(deliveryDateTime), MESSAGE_CONSTRAINTS_LEAP_YEAR);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        value \u003d LocalDateTime.parse(deliveryDateTime, PARSER_FORMATTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"    public static boolean isValidDeliveryDateTimeFormat(String test) {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"    public static boolean isValidDeliveryDateTimeValue(String test) {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"            LocalDateTime.parse(test, PARSER_FORMATTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"    public static boolean isValidLeapYearDeliveryDateTimeValue(String test) {","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"        String[] date \u003d test.split(\" \");","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"        String[] dateSplit \u003d date[0].split(\"-\");","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"        int day \u003d Integer.parseInt(dateSplit[0]);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"        int month \u003d Integer.parseInt(dateSplit[1]);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"        int year \u003d Integer.parseInt(dateSplit[2]);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"        boolean onLeapDay \u003d (month \u003d\u003d 2) \u0026\u0026 (day \u003d\u003d 29);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"        if (onLeapDay) {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"            if (isLeapYear(year)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"                return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"            } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"                return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"        return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"    public static boolean isLeapYear(int year) {","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"        //@@author {Geralddtan} - reused","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"        //Reused from https://www.geeksforgeeks.org/java-program-to-find-if-a-given-year-is-a-leap-year/","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"        return ((year % 400 \u003d\u003d 0)","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"                || ((year % 4 \u003d\u003d 0) \u0026\u0026 (year % 100 !\u003d 0)));","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid datetime.","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static boolean isValidDeliveryDateTime(String test) {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return isValidDeliveryDateTimeFormat(test) \u0026\u0026 isValidDeliveryDateTimeValue(test);","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toJsonSavedString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return value.format(PARSER_FORMATTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return value.format(STRING_FORMATTER);","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                || (other instanceof DeliveryDateTime // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((DeliveryDateTime) other).value)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public LocalDateTime getValue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this.value;","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"Geralddtan":85,"-":36,"punnyhuimin":2}},{"path":"src/main/java/seedu/address/model/order/Details.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":" * Represents an order\u0027s details in ReadyBakey.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDetails(String)}","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"public class Details {","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    public static final int ITEM_SIZE_LIMIT \u003d 30;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"    public static final int QUANTITY_SIZE_MIN_LIMIT \u003d 1;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    public static final int QUANTITY_SIZE_MAX_LIMIT \u003d 99;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public static final String ITEM_MESSAGE_LIMIT \u003d \"An order item cannot contain more than \"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"            + ITEM_SIZE_LIMIT + \" characters.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    public static final String QUANTITY_MESSAGE_LIMIT \u003d \"Details can have a minimum quantity of \"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"            + QUANTITY_SIZE_MIN_LIMIT + \" up to a maximum of \"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"            + QUANTITY_SIZE_MAX_LIMIT + \".\";","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Details consists of a number (quantity), \"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"            + \"followed by a colon (:) and by alphabetical or whitespace characters (order item). \"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"            + \"\\n EXAMPLE: d/1: vanilla cake\";","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    public static final String FIND_ITEM_MESSAGE_CONSTRAINTS \u003d \"findo only supports finding items and not quantities\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"            + \"EXAMPLE: findo d/Cake\";","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    /*","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"     * Details passed in should follow convention eg. \"1 : chocolate cake with sprinkles\".","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"     * Characters preceding the colon should only be numerical. This is parsed as the quantity.","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"     * Characters following the colon should be either alphabets or whitespace. This is parsed as the order item.","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"    private static final String ORDER_QUANTITY_REGEX_KEYWORD \u003d \"orderQuantity\";","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"    private static final String ORDER_ITEM_REGEX_KEYWORD \u003d \"orderItem\";","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"    private static final String VALIDATION_REGEX \u003d String.format(","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"            \"^(\\\\s+)?(?\u003c%s\u003e\\\\d+)\\\\s*:{1}\\\\s*(?\u003c%s\u003e((\\\\w|\\\\w +)+))(\\\\s+)?$\",","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"            ORDER_QUANTITY_REGEX_KEYWORD, ORDER_ITEM_REGEX_KEYWORD);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    private static final String VALIDATION_REGEX_QUANTITY \u003d \"^([0-9]+:).*\";","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"    private static final Pattern DETAIL_PATTERN \u003d Pattern.compile(VALIDATION_REGEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"    public final String value;","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"    public final String item;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"    public final int quantity;","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"     * Constructs an {@code Details}.","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"     * @param inputDetails A valid details.","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"     * @param item A valid order item.","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"     * @param quantity A valid order quantity.","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"    public Details(String inputDetails, String item, int quantity) {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"onefangg"},"content":"        value \u003d inputDetails;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"     * Constructs an {@code Details}. For backwards compatability with SampleDataUtil and test cases","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"     * @param details A valid details.","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"    public Details(String details) {","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(details);","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"        checkArgument(isValidDetails(details), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"        value \u003d details;","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"        quantity \u003d Integer.parseInt(parseValidatedQuantity(value));","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"        item \u003d parseValidatedItem(value);","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"onefangg"},"content":"     * Returns a valid quantity passed in input.","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"onefangg"},"content":"    public static String parseValidatedQuantity(String inputDetails) {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"onefangg"},"content":"        String quantityParsed \u003d parseDetails(inputDetails, ORDER_QUANTITY_REGEX_KEYWORD);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"onefangg"},"content":"        assert quantityParsed !\u003d null; // shouldn\u0027t return null due to isValidDetails and trim checks","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"        return quantityParsed;","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"onefangg"},"content":"     * Returns a valid item passed in input.","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"onefangg"},"content":"    public static String parseValidatedItem(String inputDetails) {","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"onefangg"},"content":"        String itemParsed \u003d parseDetails(inputDetails, ORDER_ITEM_REGEX_KEYWORD);","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"onefangg"},"content":"        assert itemParsed !\u003d null; // shouldn\u0027t return null due to isValidDetails and trim checks","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"onefangg"},"content":"        return itemParsed;","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"onefangg"},"content":"     * Returns true if a given string is a valid detail.","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"onefangg"},"content":"    public static boolean isValidDetails(String test) {","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"onefangg"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if a given string is a valid detail item.","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"    public static boolean isValidFindDetailsItem(String test) {","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"        return !test.matches(VALIDATION_REGEX_QUANTITY);","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"onefangg"},"content":"     * Returns matching string based on {@code regexKeyword} specified in {@code DETAIL_PATTERN}.","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"onefangg"},"content":"    public static String parseDetails(String regexInput, String regexKeyword) {","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"onefangg"},"content":"        // only allowed these two keywords to be queried","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"onefangg"},"content":"        assert regexKeyword.equals(ORDER_QUANTITY_REGEX_KEYWORD) || regexKeyword.equals(ORDER_ITEM_REGEX_KEYWORD);","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"onefangg"},"content":"        assert isValidDetails(regexInput); // should have been executed in Parser","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"onefangg"},"content":"        final Matcher matcher \u003d DETAIL_PATTERN.matcher(regexInput);","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"onefangg"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"onefangg"},"content":"            return null;","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"onefangg"},"content":"        return matcher.group(regexKeyword);","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"Geralddtan"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"Geralddtan"},"content":"        return String.valueOf(quantity) + \": \" + item;","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":127,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof Details // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 value.equalsIgnoreCase(((Details) other).value)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":130,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Geralddtan":53,"onefangg":83}},{"path":"src/main/java/seedu/address/model/order/DetailsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":" * Tests that a {@code Order}\u0027s {@code Details} matches any of the keywords given.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"public class DetailsContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    public DetailsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"    private boolean testKeywordInDetails(Details details) {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(details.item, keyword));","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    public String getKeywordsString() {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        return keywords.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        return order.getDetails().stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"                .anyMatch(details -\u003e testKeywordInDetails(details));","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof DetailsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 keywords.equals(((DetailsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":36,"onefangg":4}},{"path":"src/main/java/seedu/address/model/order/NaturalDateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":" * Checks the date inputted by the user and filters it into the various Enum dates.","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"public class NaturalDateParser {","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"    private String dateInput;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    private Dates date;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    public enum Dates {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"        MONDAY,","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"        TUESDAY,","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"        WEDNESDAY,","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"        THURSDAY,","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"        FRIDAY,","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        SATURDAY,","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"        SUNDAY,","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"        NODAYS","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor of the NaturalDateParser class.","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"     * Used to classify the types of dates to be passed into DateChecker.","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"     * @param input Day inputted by the user. E.g. Mon, Sun, Thur","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    public NaturalDateParser(String input) {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"        dateInput \u003d input.toLowerCase();","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        boolean isMonday \u003d dateInput.equals(\"mon\") || dateInput.equals(\"monday\");","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"        boolean isTuesday \u003d dateInput.equals(\"tues\") || dateInput.equals(\"tuesday\") || dateInput.equals(\"tue\");","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        boolean isWednesday \u003d dateInput.equals(\"weds\") || dateInput.equals(\"wednesday\") || dateInput.equals(\"wed\");","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"        boolean isThursday \u003d dateInput.equals(\"thurs\") || dateInput.equals(\"thursday\") || dateInput.equals(\"thur\");","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        boolean isFriday \u003d dateInput.equals(\"fri\") || dateInput.equals(\"friday\");","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"        boolean isSaturday \u003d dateInput.equals(\"sat\") || dateInput.equals(\"saturday\");","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        boolean isSunday \u003d dateInput.equals(\"sun\") || dateInput.equals(\"sunday\");","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        if (isMonday) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.MONDAY;","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isTuesday) {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.TUESDAY;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isWednesday) {","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.WEDNESDAY;","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isThursday) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.THURSDAY;","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isFriday) {","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.FRIDAY;","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isSaturday) {","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.SATURDAY;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isSunday) {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.SUNDAY;","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.NODAYS;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the enum date generated from the input date.","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"     * @return Date based on the input. E.g. mon, tues, thurs.","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"    public Dates getDate() {","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"        return date;","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"punnyhuimin":65}},{"path":"src/main/java/seedu/address/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":" * Represents an Order in the ReadyBakey.","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"public class Order {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"    // Limits for list-type fields","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    public static final int MAX_DETAIL_SIZE \u003d 5;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    // Identity fields","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"    private final UUID uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    // Data fields","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    private final Remark remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    private final List\u003cDetails\u003e details \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    private final DeliveryDateTime deliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"    private final Complete complete;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    private final CollectionType collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"    public Order(Remark remark, List\u003cDetails\u003e details,","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"                 DeliveryDateTime deliveryDateTime, CollectionType collectionType, UUID uuid) {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"        requireAllNonNull(remark, details, deliveryDateTime, collectionType, uuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"        this.details.addAll(details);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"        this.complete \u003d new Complete(false);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        this.deliveryDateTime \u003d deliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        this.collectionType \u003d collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"    public Order(Remark remark, List\u003cDetails\u003e details,","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"                 DeliveryDateTime deliveryDateTime, CollectionType collectionType, Complete complete, UUID uuid) {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"        requireAllNonNull(remark, details, deliveryDateTime, collectionType, complete, uuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"onefangg"},"content":"        this.details.addAll(details);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"        this.deliveryDateTime \u003d deliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"        this.collectionType \u003d collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"darshan152"},"content":"        this.complete \u003d complete;","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"darshan152"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"    public List\u003cDetails\u003e getDetails() {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"        return Collections.unmodifiableList(details);","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"    public Remark getRemark() {","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"        return remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"    public DeliveryDateTime getDeliveryDateTime() {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"darshan152"},"content":"        return deliveryDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"    public LocalDateTime getDeliveryDateTimeValue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"        return deliveryDateTime.getValue();","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"darshan152"},"content":"    public Complete getComplete() {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"darshan152"},"content":"        return complete;","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"declanleeler"},"content":"    public boolean isComplete() {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"declanleeler"},"content":"        return complete.isComplete();","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"darshan152"},"content":"    public UUID getUuid() {","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"darshan152"},"content":"        return uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"    public CollectionType getCollectionType() {","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"        return collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if both orders have the same identity and data fields.","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"     * This defines a stronger notion of equality between two orders.","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"            return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"            return false;","lastModifiedDate":"2022-03-03"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":109,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"darshan152"},"content":"        return otherOrder.getUuid().equals(getUuid())","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 new HashSet\u003c\u003e(otherOrder.getDetails()).equals(new HashSet\u003c\u003e(getDetails()))","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 otherOrder.getDeliveryDateTime().equals(getDeliveryDateTime());","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":117,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"Geralddtan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"Geralddtan"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"darshan152"},"content":"        return Objects.hash(remark, details, deliveryDateTime, collectionType, uuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"Geralddtan"},"content":"    public String toString() {","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"Geralddtan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"darshan152"},"content":"        builder.append(\"Remark: \")","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"Geralddtan"},"content":"                .append(getRemark())","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"                .append(\"; Details: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":130,"author":{"gitId":"darshan152"},"content":"                .append(getDetails())","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"                .append(\"; Delivery Date: \")","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"                .append(getDeliveryDateTime())","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"                .append(\"; Collection Type: \")","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"Geralddtan"},"content":"                .append(getCollectionType())","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"darshan152"},"content":"                .append(\"; Complete: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"darshan152"},"content":"                .append(getComplete());","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"Geralddtan"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":140,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":38,"Geralddtan":81,"onefangg":14,"declanleeler":8}},{"path":"src/main/java/seedu/address/model/order/OrderDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"public class OrderDateComparator implements Comparator\u003cOrder\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"    public int compare(Order firstOrder, Order secondOrder) {","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"        return firstOrder.getDeliveryDateTimeValue().compareTo(secondOrder.getDeliveryDateTimeValue());","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"declanleeler":10}},{"path":"src/main/java/seedu/address/model/order/OrderIncompleteBeforeDeliveryDateTimePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":" * Tests that a {@code Order}\u0027s {@code DeliveryDateTime} is before the given date and its","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":" * {@code Complete} status is incomplete.","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"public class OrderIncompleteBeforeDeliveryDateTimePredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"    private final DeliveryDateTime deliveryDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"    public OrderIncompleteBeforeDeliveryDateTimePredicate(DeliveryDateTime deliveryDateTime) {","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"        this.deliveryDateTime \u003d deliveryDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"        return !order.isComplete()","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"                \u0026\u0026 !order.getDeliveryDateTimeValue().isAfter(deliveryDateTime.getValue());","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"                || (other instanceof OrderIncompleteBeforeDeliveryDateTimePredicate // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"                \u0026\u0026 deliveryDateTime.equals(((OrderIncompleteBeforeDeliveryDateTimePredicate) other).deliveryDateTime));","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"declanleeler":28}},{"path":"src/main/java/seedu/address/model/order/OrderUuidContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":" * Tests that a {@code Order}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"public class OrderUuidContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"    public OrderUuidContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(order.getUuid().toString(), keyword));","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"                || (other instanceof OrderUuidContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 keywords.equals(((OrderUuidContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"darshan152":5,"onefangg":25}},{"path":"src/main/java/seedu/address/model/order/RemarkContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"public class RemarkContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    public RemarkContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public String getKeywordsString() {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"        return keywords.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(order.getRemark().value, keyword));","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof RemarkContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 keywords.equals(((RemarkContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":30,"onefangg":4}},{"path":"src/main/java/seedu/address/model/order/UniqueOrderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.exceptions.DuplicateOrderException;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.exceptions.OrderNotFoundException;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":" * A list of orders that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":" * A order is considered unique by comparing using {@code Order#isSameOrder(Order)}. As such, adding and updating of","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":" * orders uses Order#isSameOrder(Order) for equality so as to ensure that the order being added or updated is","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":" * unique in terms of identity in the UniqueOrderList. However, the removal of a order uses Order#equals(Object) so","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":" * as to ensure that the order with exactly the same fields will be removed.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":" *","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":" *","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":" * @see Order#isSameOrder(Order)","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"public class UniqueOrderList implements Iterable\u003cOrder\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    private final ObservableList\u003cOrder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if the list contains an equivalent order as the given argument.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    public boolean contains(Order toCheck) {","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"     * Adds a order to the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"     * The order must not already exist in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"    public void add(Order toAdd) {","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"     * Replaces the order {@code target} in the list with {@code editedOrder}.","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"        if (!target.equals(editedOrder) \u0026\u0026 contains(editedOrder)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"        internalList.set(index, editedOrder);","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"     * Removes the equivalent order from the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"     * The order must exist in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"    public void remove(Order toRemove) {","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"            throw new OrderNotFoundException();","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"    public void setOrders(UniqueOrderList replacement) {","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"     * Replaces the contents of this list with {@code orders}.","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"        requireAllNonNull(orders);","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"        if (!ordersAreUnique(orders)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"            throw new DuplicateOrderException();","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"        internalList.setAll(orders);","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"    public Iterator\u003cOrder\u003e iterator() {","lastModifiedDate":"2022-03-03"},{"lineNumber":109,"author":{"gitId":"Geralddtan"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-03"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":115,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof UniqueOrderList // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 internalList.equals(((UniqueOrderList) other).internalList));","lastModifiedDate":"2022-03-03"},{"lineNumber":117,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"Geralddtan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"Geralddtan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if {@code orders} contains only unique orders.","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":127,"author":{"gitId":"Geralddtan"},"content":"    private boolean ordersAreUnique(List\u003cOrder\u003e orders) {","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"Geralddtan"},"content":"        for (int i \u003d 0; i \u003c orders.size() - 1; i++) {","lastModifiedDate":"2022-03-03"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"            for (int j \u003d i + 1; j \u003c orders.size(); j++) {","lastModifiedDate":"2022-03-03"},{"lineNumber":130,"author":{"gitId":"onefangg"},"content":"                if (orders.get(i).equals(orders.get(j))) {","lastModifiedDate":"2022-03-07"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"                    return false;","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"Geralddtan"},"content":"        return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":137,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Geralddtan":134,"onefangg":3}},{"path":"src/main/java/seedu/address/model/order/exceptions/DuplicateOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order.exceptions;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":" * identity).","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"public class DuplicateOrderException extends RuntimeException {","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"    public DuplicateOrderException() {","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"        super(\"Operation would result in duplicate orders\");","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Geralddtan":11}},{"path":"src/main/java/seedu/address/model/order/exceptions/OrderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order.exceptions;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"public class OrderNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Geralddtan":6}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    public static final int ADDRESS_SIZE_MIN_LIMIT \u003d 6;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    public static final int ADDRESS_SIZE_MAX_LIMIT \u003d 70;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_ADDRESS_LIMIT \u003d \"An address cannot be shorter than \" + ADDRESS_SIZE_MIN_LIMIT","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"            + \" characters and cannot be longer than \" + ADDRESS_SIZE_MAX_LIMIT + \". \";","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":57,"punnyhuimin":4}},{"path":"src/main/java/seedu/address/model/person/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    public String getKeywordsString() {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"        return keywords.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getAddress().value, keyword));","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"                || (other instanceof AddressContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"                \u0026\u0026 keywords.equals(((AddressContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"onefangg":35}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    public static final int EMAIL_SIZE_MIN_LIMIT \u003d 6;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    public static final int EMAIL_SIZE_MAX_LIMIT \u003d 50;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_EMAIL_LIMIT \u003d \"Customer\u0027s email cannot be shorter than \" + EMAIL_SIZE_MIN_LIMIT","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"            + \" characters and cannot be longer than \" + EMAIL_SIZE_MAX_LIMIT + \". \";","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":71,"punnyhuimin":4}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public String getKeywordsString() {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"        return keywords.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        // containsWordIgnoreCase method splits sentence into words and checks if equals (case-insensitive)","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"onefangg":36}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    public static final int NAME_SIZE_MIN_LIMIT \u003d 2;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    public static final int NAME_SIZE_MAX_LIMIT \u003d 50;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_NAME_LIMIT \u003d \"Customer\u0027s name cannot be shorter than \" + NAME_SIZE_MIN_LIMIT","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"            + \" characters and cannot be longer than \" + NAME_SIZE_MAX_LIMIT + \". \";","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":58,"punnyhuimin":4}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public String getKeywordsString() {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"        return keywords.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"onefangg":4,"-":31}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"    private final UUID uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    private final Remark remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"     * Specified fields must be present and not null.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        requireAllNonNull(name, phone, email, address, remark, tags);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"        this.uuid \u003d UUID.randomUUID();","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"     * Specified fields must be present and not null.","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags, UUID uuid) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"        requireAllNonNull(name, phone, email, address, tags, uuid);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"    public UUID getUuid() {","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"darshan152"},"content":"        return uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"    public Remark getRemark() {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"        return remark;","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"darshan152"},"content":"     * Returns true if both persons have the same phone number.","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark())","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"Geralddtan"},"content":"        return Objects.hash(name, phone, email, address, remark, tags);","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"Geralddtan"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"Geralddtan"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"Geralddtan"},"content":"                .append(getRemark());","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"darshan152":22,"Geralddtan":16,"-":116}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    public static final int PHONE_SIZE_MIN_LIMIT \u003d 3;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    public static final int PHONE_SIZE_MAX_LIMIT \u003d 15;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_PHONE_LIMIT \u003d \"Customer\u0027s phone cannot be shorter than \" + PHONE_SIZE_MIN_LIMIT","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"            + \" characters and cannot be longer than \" + PHONE_SIZE_MAX_LIMIT + \". \";","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"            \"Phone numbers should only contain numbers\";","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":50,"punnyhuimin":6}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":" * Tests that a {@code Person}\u0027s {@code PhoneNum} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public String getKeywordsString() {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"        return keywords.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"darshan152":31,"onefangg":4}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":" * Represents a Person\u0027s remark in the remark book.","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"public class Remark {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    public static final int REMARK_SIZE_MAX_LIMIT \u003d 70;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, but only up to \"","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"            + REMARK_SIZE_MAX_LIMIT + \" characters\";","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"     * The first character of the remark must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALIDATION_REGEX \u003d \".{0,70}\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    public final String value;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"     * Constructs an {@code Remark}.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"        value \u003d remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        return value;","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Geralddtan":54,"punnyhuimin":3}},{"path":"src/main/java/seedu/address/model/person/RemarkContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":" * Tests that a {@code Person}\u0027s {@code Remark} matches any of the keywords given.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"public class RemarkContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    public RemarkContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public String getKeywordsString() {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"        return keywords.toString();","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getRemark().value, keyword));","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"                || (other instanceof RemarkContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"                \u0026\u0026 keywords.equals(((RemarkContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"onefangg":34}},{"path":"src/main/java/seedu/address/model/person/UuidContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":" * Tests that a {@code Person}\u0027s {@code PhoneNum} matches any of the keywords given.","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"public class UuidContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"    public UuidContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getUuid().toString(), keyword));","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"                || (other instanceof UuidContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"                \u0026\u0026 keywords.equals(((UuidContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"darshan152":31}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"    public static final int TAG_SIZE_MAX_LIMIT \u003d 70;","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"    public static final String MESSAGE_TAG_LIMIT \u003d \"A tag cannot be longer than \" + TAG_SIZE_MAX_LIMIT","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"            + \" characters. \";","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"darshan152":4,"-":54}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Remark(\"Allergic to Peanuts\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"                getTagSet(\"Regular\"), UUID.fromString(\"6ea390c0-242c-4643-a547-21cc85773f88\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Remark(\"Allergic to Chicken\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"                getTagSet(\"Member\", \"Regular\"), UUID.fromString(\"0d13afaa-db95-4a2a-b64d-5270e39d243d\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"Enjoys a pun or two\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"                getTagSet(\"Member\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"My really close friend\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"                getTagSet(\"Member\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"Hates Pistachios\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"                getTagSet(\"Member\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"Loves Games and Anime\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"                getTagSet(\"NonMember\"))","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"    public static Order[] getSampleOrders() {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"        return new Order[]{","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"            new Order(new Remark(\"No Peanuts\"), getDetailsList(\"3:Strawberry Cupcakes\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"                    new DeliveryDateTime(\"25-12-2022 15:30\"), CollectionType.DELIVERY,","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"                    UUID.fromString(\"6ea390c0-242c-4643-a547-21cc85773f88\")),","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"            new Order(new Remark(\"Please make delivery by 4pm latest\"), getDetailsList(\"1:Chocolate Cake\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"                    new DeliveryDateTime(\"22-12-2022 16:00\"), CollectionType.DELIVERY,","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"                    UUID.fromString(\"6ea390c0-242c-4643-a547-21cc85773f88\")),","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"            new Order(new Remark(\"No candles needed\"), getDetailsList(\"1:Cake\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"                    new DeliveryDateTime(\"12-12-2022 12:30\"), CollectionType.PICKUP,","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"darshan152"},"content":"                    UUID.fromString(\"0d13afaa-db95-4a2a-b64d-5270e39d243d\"))","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"        for (Order sampleOrder : getSampleOrders()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"darshan152"},"content":"            sampleAb.addOrder(sampleOrder);","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"onefangg"},"content":"    public static List\u003cDetails\u003e getDetailsList(String... strings) {","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"onefangg"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"onefangg"},"content":"                .map(Details::new)","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"onefangg"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"darshan152":21,"Geralddtan":7,"onefangg":11,"-":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":" * Jackson-friendly version of {@link Details}.","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"public class JsonAdaptedDetails {","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"    private final String detailsName;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"     * Constructs a {@code JsonAdaptedDetails} with the given {@code detailsName}.","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    public JsonAdaptedDetails(String detailsName) {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"        this.detailsName \u003d detailsName;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"     * Converts a given {@code Details} into this class for Jackson use.","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"    public JsonAdaptedDetails(Details source) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"        detailsName \u003d source.value;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"    @JsonValue","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"    public String getDetailsName() {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"        return detailsName;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"     * Converts this Jackson-friendly adapted details object into the model\u0027s {@code Details} object.","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted details.","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"    public Details toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"        if (!Details.isValidDetails(detailsName)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"            throw new IllegalValueException(Details.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"        return new Details(detailsName);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"onefangg":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Complete;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"class JsonAdaptedOrder {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Order\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"    public static final String UUID_MESSAGE_CONSTRAINTS \u003d \"UUID needs to be a valid UUID from Java\u0027s UUID package\";","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    private final String remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    private final String deliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    private final String collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"    private final String complete;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"    private final String uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"    private final List\u003cJsonAdaptedDetails\u003e details \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given order details.","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"remark\") String remark,","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"                            @JsonProperty(\"details\") List\u003cJsonAdaptedDetails\u003e details,","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"                            @JsonProperty(\"deliveryDateTime\") String deliveryDateTime,","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"                            @JsonProperty(\"collectionType\") String collectionType,","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"                            @JsonProperty(\"complete\") String complete,","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"                            @JsonProperty(\"uuid\") String uuid) {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"        if (details !\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"            this.details.addAll(details);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"        this.deliveryDateTime \u003d deliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        this.collectionType \u003d collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"        this.complete \u003d complete;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"        deliveryDateTime \u003d source.getDeliveryDateTime().toJsonSavedString();","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        collectionType \u003d source.getCollectionType().value;","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"        complete \u003d source.getComplete().isCompleted.toString();","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"darshan152"},"content":"        uuid \u003d source.getUuid().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"        details.addAll(source.getDetails().stream()","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"                .map(JsonAdaptedDetails::new)","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"     * Converts this Jackson-friendly adapted order object into the model\u0027s {@code Order} object.","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"        final List\u003cDetails\u003e orderDetails \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"        for (JsonAdaptedDetails detail: details) {","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"            orderDetails.add(detail.toModelType());","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"onefangg"},"content":"        final List\u003cDetails\u003e modelDetails \u003d new ArrayList\u003c\u003e(orderDetails);","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"        if (deliveryDateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"                    DeliveryDateTime.class.getSimpleName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"        if (!DeliveryDateTime.isValidDeliveryDateTime(deliveryDateTime)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"            throw new IllegalValueException(DeliveryDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"        final DeliveryDateTime modelDeliveryDateTime \u003d new DeliveryDateTime(deliveryDateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"        if (collectionType \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"                    CollectionType.class.getSimpleName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"        if (!CollectionType.isValidCollectionTypeValue(collectionType)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"            throw new IllegalValueException(CollectionType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"        final CollectionType modelCollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"        if (collectionType.equals(CollectionType.DELIVERY.getValue())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"            modelCollectionType \u003d CollectionType.DELIVERY;","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"        } else if (collectionType.equals(CollectionType.PICKUP.getValue())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"            modelCollectionType \u003d CollectionType.PICKUP;","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"Geralddtan"},"content":"            throw new IllegalValueException(CollectionType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"darshan152"},"content":"        if (complete \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"darshan152"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"darshan152"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Complete.class.getSimpleName())","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"darshan152"},"content":"            );","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"darshan152"},"content":"        if (!Complete.isValidComplete(complete)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"darshan152"},"content":"            throw new IllegalValueException(Complete.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"darshan152"},"content":"        final Complete modelComplete \u003d new Complete(complete);","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"darshan152"},"content":"        final UUID modelUuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"darshan152"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"darshan152"},"content":"            modelUuid \u003d UUID.fromString(uuid);","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"darshan152"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"darshan152"},"content":"            throw new IllegalValueException(UUID_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-08"},{"lineNumber":127,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"darshan152"},"content":"        return new Order(modelRemark, modelDetails, modelDeliveryDateTime,","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"darshan152"},"content":"                modelCollectionType, modelComplete, modelUuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":34,"Geralddtan":82,"onefangg":17}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"    public static final String UUID_MESSAGE_CONSTRAINTS \u003d \"UUID must contain a valid UUID.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"    private final String uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    private final String remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"                             @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"                             @JsonProperty(\"uuid\") String uuid,","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"darshan152"},"content":"        uuid \u003d source.getUuid().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Geralddtan"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"darshan152"},"content":"        if (uuid \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"darshan152"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"darshan152"},"content":"        final UUID modelUuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"darshan152"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"darshan152"},"content":"            modelUuid \u003d UUID.fromString(uuid);","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"darshan152"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"darshan152"},"content":"            throw new IllegalValueException(UUID_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"darshan152"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags, modelUuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"darshan152":20,"Geralddtan":11,"-":106}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.AddOrderCommand.MESSAGE_DUPLICATE_ORDER;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        orders.addAll(source.getOrderList().stream().map(JsonAdaptedOrder::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"        // Adding orders","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"        for (JsonAdaptedOrder jsonAdaptedOrder : orders) {","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"            Order order \u003d jsonAdaptedOrder.toModelType();","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"            if (addressBook.hasOrder(order)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"            addressBook.addOrder(order);","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Geralddtan":16,"-":60}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath()); //Obtaining file path","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Geralddtan":1,"-":77}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103-f09-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"punnyhuimin":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"    private OrderListPanel orderListPanel;","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    private ResponseDisplay responseDisplay;","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"    private VBox resultList;","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"    private StackPane responseDisplayPlaceholder;","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"declanleeler"},"content":"         * ResponseDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"declanleeler"},"content":"         * in CommandBox or ResponseDisplay.","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"declanleeler"},"content":"        resultList.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"declanleeler"},"content":"        responseDisplay \u003d new ResponseDisplay();","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"declanleeler"},"content":"        responseDisplayPlaceholder.getChildren().add(responseDisplay.getRoot());","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"declanleeler"},"content":"     * Handles the displayed list of results in MainWindow when the command refers to orders","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"declanleeler"},"content":"    public void handleOrderCommand() {","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"darshan152"},"content":"        orderListPanel \u003d new OrderListPanel(logic.getFilteredOrderList(), logic.getPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"declanleeler"},"content":"        resultList.getChildren().setAll(orderListPanel.getRoot());","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"declanleeler"},"content":"     * Handles the displayed list of results in MainWindow when the command refers to persons","lastModifiedDate":"2022-03-12"},{"lineNumber":162,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"declanleeler"},"content":"    public void handlePersonCommand() {","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"declanleeler"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"declanleeler"},"content":"        resultList.getChildren().setAll(personListPanel.getRoot());","lastModifiedDate":"2022-03-12"},{"lineNumber":166,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"punnyhuimin"},"content":"        commandBoxPlaceholder.setDisable(true);","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"punnyhuimin"},"content":"        javafx.animation.PauseTransition delay \u003d new javafx.animation.PauseTransition(javafx.util.Duration.seconds(2));","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"punnyhuimin"},"content":"        delay.setOnFinished(event -\u003e javafx.application.Platform.exit());","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"punnyhuimin"},"content":"        delay.play();","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"declanleeler"},"content":"            responseDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"declanleeler"},"content":"            if (commandResult.isHelpCommand()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"declanleeler"},"content":"            if (commandResult.isExitCommand()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"declanleeler"},"content":"            if (commandResult.isPersonCommand()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":207,"author":{"gitId":"declanleeler"},"content":"                handlePersonCommand();","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":209,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":210,"author":{"gitId":"declanleeler"},"content":"            if (commandResult.isOrderCommand()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"declanleeler"},"content":"                handleOrderCommand();","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"declanleeler"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":213,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"declanleeler"},"content":"            responseDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"darshan152":1,"Geralddtan":1,"declanleeler":36,"-":179,"punnyhuimin":4}},{"path":"src/main/java/seedu/address/ui/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":" * An UI component that displays information of a {@code Order}.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    private static final String FXML \u003d \"OrderListCard.fxml\";","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"     *","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    public final Order order;","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    private Label name;","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    private Label id;","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"    private Label phone;","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    private Label address;","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"    private Label remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"    private FlowPane details;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"    private Label deliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"    private Label collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"    private Label complete;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"     * Creates a {@code OrderCard} with the given {@code Order}, {@code Person} and index to display.","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"    public OrderCard(Order order, int displayedIndex, Person person) {","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"        super(FXML);","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"darshan152"},"content":"        complete.setText(order.getComplete().toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"darshan152"},"content":"        remark.setText(order.getRemark().value);","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"        deliveryDateTime.setText(order.getDeliveryDateTime().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"darshan152"},"content":"        collectionType.setText(order.getCollectionType().getValue());","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"        order.getDetails().stream()","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"                        .map(Details::toString)","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"                        .forEach(detail -\u003e details.getChildren().add(new Label(detail)));","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"darshan152"},"content":"     * Creates a {@code OrderCard} with the given {@code Order} and index to display.","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"        super(FXML);","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"darshan152"},"content":"        name.setText(\"Null\");","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"darshan152"},"content":"        phone.setText(\"Null\");","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"darshan152"},"content":"        address.setText(\"Null\");","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"        remark.setText(order.getRemark().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"        deliveryDateTime.setText(order.getDeliveryDateTime().toString());","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"        collectionType.setText(order.getCollectionType().getValue());","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"darshan152"},"content":"        complete.setText(order.getComplete().toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"onefangg"},"content":"        order.getDetails().stream()","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"onefangg"},"content":"                .map(Details::toString)","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"onefangg"},"content":"                .forEach(detail -\u003e details.getChildren().add(new Label(detail)));","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"            return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"            return false;","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"        // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"        OrderCard card \u003d (OrderCard) other;","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"                \u0026\u0026 order.equals(card.order);","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":25,"Geralddtan":72,"onefangg":10}},{"path":"src/main/java/seedu/address/ui/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.UuidContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"public class OrderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    private static final String FXML \u003d \"OrderListPanel.fxml\";","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"     * Creates a {@code OrderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList, ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"        super(FXML);","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"        orderListView.setItems(orderList);","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"        orderListView.setCellFactory(listView -\u003e new OrderListViewCell(personList));","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Order} using a {@code OrderCard}.","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"        private final ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"        OrderListViewCell(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"            this.personList \u003d personList;","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"                setText(null);","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"            } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"                ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"                list.add(order.getUuid().toString());","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"                List\u003cPerson\u003e singlePersonList \u003d personList.filtered(new UuidContainsKeywordsPredicate(list));","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"                if (!singlePersonList.isEmpty()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"                    Person person \u003d singlePersonList.get(0);","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"                    setGraphic(new OrderCard(order, getIndex() + 1, person).getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"                } else {","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"                    setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"                }","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"            }","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":19,"Geralddtan":47}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"    private Label remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Geralddtan":3,"-":77}},{"path":"src/main/java/seedu/address/ui/ResponseDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"public class ResponseDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    private static final String FXML \u003d \"ResponseDisplay.fxml\";","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    private TextArea responseDisplay;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"    public ResponseDisplay() {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        responseDisplay.setText(feedbackToUser);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"declanleeler":5,"-":23}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ReadyBakeyBread.png\";","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"declanleeler":1,"-":87}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background: white;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"punnyhuimin":1}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"#helpMessage {","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-color: derive(#735555, 50%);","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-color: derive(#735555, 70%);","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-color: derive(#F5EDDA, 20%);","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"-":14,"punnyhuimin":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ReadyBakey\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    \u003cImage url\u003d\"@/images/ReadyBakeyBread.png\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"        \u003cURL value\u003d\"@ReadyBakeyTheme.css\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" style\u003d\"-fx-text-fill-fx-te: #66462F;\" text\u003d\"File\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"        \u003cVBox fx:id\u003d\"resultList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"result-list-pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"        \u003cStackPane fx:id\u003d\"responseDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"                   styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxHeight\u003d\"50\" minHeight\u003d\"50\" prefHeight\u003d\"50\"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"                   styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" maxHeight\u003d\"30\" minHeight\u003d\"30\"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"                   prefHeight\u003d\"30\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"darshan152":1,"declanleeler":12,"-":37,"punnyhuimin":1}},{"path":"src/main/resources/view/OrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"            \u003cFlowPane fx:id\u003d\"details\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"            \u003cLabel fx:id\u003d\"deliveryDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deliveryDateTime\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"            \u003cLabel fx:id\u003d\"collectionType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$collectionType\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"            \u003cLabel fx:id\u003d\"complete\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$complete\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":9,"Geralddtan":32,"onefangg":2}},{"path":"src/main/resources/view/OrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"    \u003cListView fx:id\u003d\"orderListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"Geralddtan":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Geralddtan":1,"-":36}},{"path":"src/main/resources/view/ReadyBakeyTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":".background {","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"    background-color: white; /* Used in the default.html file */","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":".label {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":".label-bright {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":".label-header {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":".text-field {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":".tab-pane {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":".table-view {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"    -fx-control-inner-background: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"    -fx-border-color:","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"        transparent","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"        transparent","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"        transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"declanleeler"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"declanleeler"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"declanleeler"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"declanleeler"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"declanleeler"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"declanleeler"},"content":".split-pane {","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"declanleeler"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"declanleeler"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"declanleeler"},"content":".list-view {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"declanleeler"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"declanleeler"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: F5EEDC;","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"declanleeler"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"declanleeler"},"content":".list-cell {","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"declanleeler"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #735555;","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"declanleeler"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #CA9E7B;","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"declanleeler"},"content":".list-cell .label {","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"declanleeler"},"content":".cell_big_label {","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"declanleeler"},"content":".cell_small_label {","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"declanleeler"},"content":".stack-pane {","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"declanleeler"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"declanleeler"},"content":".pane-with-border {","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"declanleeler"},"content":"     -fx-background-color: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"declanleeler"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"declanleeler"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"declanleeler"},"content":".status-bar {","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #F5EDDA;","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"declanleeler"},"content":".response-display {","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #F5EDDA;","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"declanleeler"},"content":".response-display .label {","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"declanleeler"},"content":".status-bar .label {","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: #66462F;","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"declanleeler"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"declanleeler"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"declanleeler"},"content":".status-bar-with-border {","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #F5EDDA;","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"declanleeler"},"content":"    -fx-border-color: #F5EDDA;","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"declanleeler"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"declanleeler"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"declanleeler"},"content":".grid-pane {","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"declanleeler"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"declanleeler"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"declanleeler"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"declanleeler"},"content":".context-menu {","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #F5EDDA;;","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"declanleeler"},"content":".context-menu .label {","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"declanleeler"},"content":".menu-bar {","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #F5EEDC;","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"declanleeler"},"content":".menu-bar .label {","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: #66462F;","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"declanleeler"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"declanleeler"},"content":".menu .left-container {","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"declanleeler"},"content":"/*","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"declanleeler"},"content":" * Metro style Push Button","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"declanleeler"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"declanleeler"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"declanleeler"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"declanleeler"},"content":".button {","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"declanleeler"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"declanleeler"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-03-16"},{"lineNumber":209,"author":{"gitId":"declanleeler"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"declanleeler"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"declanleeler"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"declanleeler"},"content":".button:hover {","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"declanleeler"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"declanleeler"},"content":"  -fx-background-color: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"declanleeler"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"declanleeler"},"content":".button:focused {","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"declanleeler"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"declanleeler"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"declanleeler"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"declanleeler"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"declanleeler"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"declanleeler"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"declanleeler"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":239,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":241,"author":{"gitId":"declanleeler"},"content":".button:default {","lastModifiedDate":"2022-03-16"},{"lineNumber":242,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-16"},{"lineNumber":243,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-16"},{"lineNumber":244,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"declanleeler"},"content":".button:default:hover {","lastModifiedDate":"2022-03-16"},{"lineNumber":247,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-03-16"},{"lineNumber":248,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":249,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":250,"author":{"gitId":"declanleeler"},"content":".dialog-pane {","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":253,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"declanleeler"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"declanleeler"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-03-16"},{"lineNumber":259,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"declanleeler"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":262,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"declanleeler"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-03-16"},{"lineNumber":265,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-03-16"},{"lineNumber":266,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":267,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":268,"author":{"gitId":"declanleeler"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-03-16"},{"lineNumber":269,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-16"},{"lineNumber":270,"author":{"gitId":"declanleeler"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-03-16"},{"lineNumber":271,"author":{"gitId":"declanleeler"},"content":"    -fx-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":272,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":273,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":274,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":275,"author":{"gitId":"punnyhuimin"},"content":"/* @@JKostikiadis punnyhuimin-reused","lastModifiedDate":"2022-04-05"},{"lineNumber":276,"author":{"gitId":"punnyhuimin"},"content":"Reused from: https://stackoverflow.com/questions/48048943/javafx-8-scroll-bar-css","lastModifiedDate":"2022-04-05"},{"lineNumber":277,"author":{"gitId":"punnyhuimin"},"content":"Creates a scroll bar that looks like a typical UI on Mac/ Windows. A more visually appealing scrollbar compared to the","lastModifiedDate":"2022-04-05"},{"lineNumber":278,"author":{"gitId":"punnyhuimin"},"content":"previous default.","lastModifiedDate":"2022-04-05"},{"lineNumber":279,"author":{"gitId":"punnyhuimin"},"content":"*/","lastModifiedDate":"2022-04-05"},{"lineNumber":280,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:horizontal .track,","lastModifiedDate":"2022-03-20"},{"lineNumber":281,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:vertical .track{","lastModifiedDate":"2022-03-20"},{"lineNumber":282,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-color :transparent;","lastModifiedDate":"2022-03-20"},{"lineNumber":283,"author":{"gitId":"punnyhuimin"},"content":"    -fx-border-color :transparent;","lastModifiedDate":"2022-03-20"},{"lineNumber":284,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-radius : 0.0em;","lastModifiedDate":"2022-03-20"},{"lineNumber":285,"author":{"gitId":"punnyhuimin"},"content":"    -fx-border-radius :2.0em;","lastModifiedDate":"2022-03-20"},{"lineNumber":286,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":287,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":288,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":289,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:horizontal .increment-button ,","lastModifiedDate":"2022-03-20"},{"lineNumber":290,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:horizontal .decrement-button {","lastModifiedDate":"2022-03-20"},{"lineNumber":291,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-color :transparent;","lastModifiedDate":"2022-03-20"},{"lineNumber":292,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-radius : 0.0em;","lastModifiedDate":"2022-03-20"},{"lineNumber":293,"author":{"gitId":"punnyhuimin"},"content":"    -fx-padding :0.0 0.0 10.0 0.0;","lastModifiedDate":"2022-03-20"},{"lineNumber":294,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":295,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":296,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:vertical .increment-button ,","lastModifiedDate":"2022-03-20"},{"lineNumber":298,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:vertical .decrement-button {","lastModifiedDate":"2022-03-20"},{"lineNumber":299,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color :transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-radius : 0.0em;","lastModifiedDate":"2022-03-20"},{"lineNumber":301,"author":{"gitId":"punnyhuimin"},"content":"    -fx-padding :0.0 10.0 0.0 0.0;","lastModifiedDate":"2022-03-20"},{"lineNumber":302,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":303,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":304,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2022-03-20"},{"lineNumber":305,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar .decrement-arrow{","lastModifiedDate":"2022-03-20"},{"lineNumber":306,"author":{"gitId":"punnyhuimin"},"content":"    -fx-shape : \" \";","lastModifiedDate":"2022-03-20"},{"lineNumber":307,"author":{"gitId":"punnyhuimin"},"content":"    -fx-padding :0.15em 0.0;","lastModifiedDate":"2022-03-20"},{"lineNumber":308,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":309,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2022-03-20"},{"lineNumber":311,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:vertical .decrement-arrow{","lastModifiedDate":"2022-03-20"},{"lineNumber":312,"author":{"gitId":"declanleeler"},"content":"    -fx-shape : \" \";","lastModifiedDate":"2022-03-16"},{"lineNumber":313,"author":{"gitId":"punnyhuimin"},"content":"    -fx-padding :0.0 0.15em;","lastModifiedDate":"2022-03-20"},{"lineNumber":314,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":315,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":316,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:horizontal .thumb,","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:vertical .thumb {","lastModifiedDate":"2022-03-20"},{"lineNumber":318,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-color :derive(black,95.0%);","lastModifiedDate":"2022-03-20"},{"lineNumber":319,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-insets : 2.0, 0.0, 0.0;","lastModifiedDate":"2022-03-20"},{"lineNumber":320,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-radius : 2.0em;","lastModifiedDate":"2022-03-20"},{"lineNumber":321,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":322,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":323,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:horizontal .thumb:hover,","lastModifiedDate":"2022-03-20"},{"lineNumber":324,"author":{"gitId":"punnyhuimin"},"content":".scroll-bar:vertical .thumb:hover {","lastModifiedDate":"2022-03-20"},{"lineNumber":325,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-color :derive(#4D4C4F,10.0%);","lastModifiedDate":"2022-03-20"},{"lineNumber":326,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-insets : 2.0, 0.0, 0.0;","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-radius : 2.0em;","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":329,"author":{"gitId":"punnyhuimin"},"content":"/* @@JKostikiadis */","lastModifiedDate":"2022-04-05"},{"lineNumber":330,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":331,"author":{"gitId":"declanleeler"},"content":"#cardPane {","lastModifiedDate":"2022-03-16"},{"lineNumber":332,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":333,"author":{"gitId":"declanleeler"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":334,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":335,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":336,"author":{"gitId":"declanleeler"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-03-16"},{"lineNumber":337,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-03-16"},{"lineNumber":338,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-03-16"},{"lineNumber":339,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":340,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":341,"author":{"gitId":"declanleeler"},"content":"#commandTextField {","lastModifiedDate":"2022-03-16"},{"lineNumber":342,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2022-03-16"},{"lineNumber":343,"author":{"gitId":"declanleeler"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":344,"author":{"gitId":"declanleeler"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2022-03-16"},{"lineNumber":345,"author":{"gitId":"declanleeler"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":346,"author":{"gitId":"declanleeler"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":347,"author":{"gitId":"declanleeler"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-16"},{"lineNumber":348,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-16"},{"lineNumber":349,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":350,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":351,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":352,"author":{"gitId":"declanleeler"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2022-03-16"},{"lineNumber":353,"author":{"gitId":"declanleeler"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-03-16"},{"lineNumber":354,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":355,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":356,"author":{"gitId":"declanleeler"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-03-16"},{"lineNumber":357,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #F5EDDA;","lastModifiedDate":"2022-03-16"},{"lineNumber":358,"author":{"gitId":"declanleeler"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":359,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":360,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":361,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":362,"author":{"gitId":"declanleeler"},"content":"#responseDisplayPlaceholder {","lastModifiedDate":"2022-03-16"},{"lineNumber":363,"author":{"gitId":"declanleeler"},"content":"     -fx-background-color: #F5EDDA;","lastModifiedDate":"2022-03-16"},{"lineNumber":364,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":365,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":366,"author":{"gitId":"onefangg"},"content":"#details, #tags {","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"declanleeler"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-16"},{"lineNumber":368,"author":{"gitId":"declanleeler"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-16"},{"lineNumber":369,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":370,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":371,"author":{"gitId":"punnyhuimin"},"content":"#details .label{","lastModifiedDate":"2022-03-31"},{"lineNumber":372,"author":{"gitId":"punnyhuimin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-31"},{"lineNumber":373,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-color: #c27227;","lastModifiedDate":"2022-03-31"},{"lineNumber":374,"author":{"gitId":"punnyhuimin"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-31"},{"lineNumber":375,"author":{"gitId":"punnyhuimin"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-31"},{"lineNumber":376,"author":{"gitId":"punnyhuimin"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-31"},{"lineNumber":377,"author":{"gitId":"punnyhuimin"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-31"},{"lineNumber":378,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":379,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":380,"author":{"gitId":"punnyhuimin"},"content":"#tags .label {","lastModifiedDate":"2022-03-31"},{"lineNumber":381,"author":{"gitId":"declanleeler"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-16"},{"lineNumber":382,"author":{"gitId":"declanleeler"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2022-03-16"},{"lineNumber":383,"author":{"gitId":"declanleeler"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-16"},{"lineNumber":384,"author":{"gitId":"declanleeler"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":385,"author":{"gitId":"declanleeler"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":386,"author":{"gitId":"declanleeler"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-16"},{"lineNumber":387,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"onefangg":1,"declanleeler":333,"punnyhuimin":53}},{"path":"src/main/resources/view/ResponseDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"  \u003cTextArea fx:id\u003d\"responseDisplay\" editable\u003d\"false\" styleClass\u003d\"response-display\"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"            promptText\u003d\"Hello! Welcome to ReadyBakey!\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"declanleeler":2,"-":8,"punnyhuimin":2}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"readybakey.json\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"        String deletePersonCommand \u003d \"deletep 9\";","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"        assertCommandException(deletePersonCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"        String listCommand \u003d seedu.address.logic.commands.ListPersonCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"        assertCommandSuccess(listCommand, seedu.address.logic.commands.ListPersonCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"        String addPersonCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"                + ADDRESS_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"        assertCommandFailure(addPersonCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"darshan152"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"darshan152"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredOrderList().remove(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"darshan152"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"darshan152"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getPersonList().remove(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"darshan152"},"content":"    public void getFilteredList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"darshan152"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getOrderList().remove(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"darshan152":15,"Geralddtan":5,"declanleeler":2,"-":152,"punnyhuimin":3}},{"path":"src/test/java/seedu/address/logic/commands/AddOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.util.SampleDataUtil.getDetailsList;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.ModelStub;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"public class AddOrderCommandTest {","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"    public void constructor_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddOrderCommand(null, null,","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"                null, null, null));","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"    public void execute_orderAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"        AddOrderCommandTest.ModelStubAcceptingOrderAdded modelStub \u003d new AddOrderCommandTest","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"                .ModelStubAcceptingOrderAdded();","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"        CommandResult commandResult \u003d new AddOrderCommand(new Phone(OrderBuilder.DEFAULT_PHONE),","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"                new Remark(OrderBuilder.DEFAULT_REMARK), getDetailsList(OrderBuilder.DEFAULT_DETAILS),","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"                new DeliveryDateTime(OrderBuilder.DEFAULT_DELIVERYDATETIME), CollectionType.DELIVERY)","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"                .execute(modelStub);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"        assertEquals(String.format(AddOrderCommand.MESSAGE_ORDER_SUCCESS, validOrder),","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"        assertEquals(Arrays.asList(validOrder).toString(), modelStub.ordersAdded.toString());","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"    public void execute_duplicateOrder_throwsCommandException() {","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"        Order validOrder \u003d new OrderBuilder().withUuid(PersonBuilder.DEFAULT_UUID).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand((new Phone(OrderBuilder.DEFAULT_PHONE)),","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"                new Remark(OrderBuilder.DEFAULT_REMARK), getDetailsList(OrderBuilder.DEFAULT_DETAILS),","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"                new DeliveryDateTime(OrderBuilder.DEFAULT_DELIVERYDATETIME), CollectionType.DELIVERY);","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"        ModelStub modelStub \u003d new AddOrderCommandTest.ModelStubWithOrder(validOrder);","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"                AddOrderCommand.MESSAGE_DUPLICATE_ORDER, () -\u003e addOrderCommand.execute(modelStub));","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"    public void equals() {","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"        AddOrderCommand addAliceOrderCommand \u003d new AddOrderCommand((new Phone(OrderBuilder.DEFAULT_PHONE)),","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"onefangg"},"content":"                new Remark(OrderBuilder.DEFAULT_REMARK), getDetailsList(OrderBuilder.DEFAULT_DETAILS),","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"darshan152"},"content":"                new DeliveryDateTime(OrderBuilder.DEFAULT_DELIVERYDATETIME), CollectionType.DELIVERY);","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"        AddOrderCommand addBobOrderCommand \u003d new AddOrderCommand((new Phone(\"12345\")),","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"onefangg"},"content":"                new Remark(OrderBuilder.DEFAULT_REMARK), getDetailsList(OrderBuilder.DEFAULT_DETAILS),","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"                new DeliveryDateTime(OrderBuilder.DEFAULT_DELIVERYDATETIME), CollectionType.DELIVERY);","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"onefangg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"        assertTrue(addAliceOrderCommand.equals(addAliceOrderCommand));","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"darshan152"},"content":"        AddOrderCommand addAliceOrderCommandCopy \u003d new AddOrderCommand((new Phone(OrderBuilder.DEFAULT_PHONE)),","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"onefangg"},"content":"                new Remark(OrderBuilder.DEFAULT_REMARK), getDetailsList(OrderBuilder.DEFAULT_DETAILS),","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"darshan152"},"content":"                new DeliveryDateTime(OrderBuilder.DEFAULT_DELIVERYDATETIME), CollectionType.DELIVERY);","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"onefangg"},"content":"        assertTrue(addAliceOrderCommand.equals(addAliceOrderCommandCopy));","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"onefangg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"onefangg"},"content":"        assertFalse(addAliceOrderCommand.equals(1));","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":88,"author":{"gitId":"onefangg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":89,"author":{"gitId":"onefangg"},"content":"        assertFalse(addAliceOrderCommand.equals(null));","lastModifiedDate":"2022-03-04"},{"lineNumber":90,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":91,"author":{"gitId":"onefangg"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-04"},{"lineNumber":92,"author":{"gitId":"onefangg"},"content":"        assertFalse(addAliceOrderCommand.equals(addBobOrderCommand));","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"onefangg"},"content":"     * A Model stub that contains a single Order.","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"onefangg"},"content":"    private class ModelStubWithOrder extends ModelStub {","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"onefangg"},"content":"        private final Order order;","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"onefangg"},"content":"        ModelStubWithOrder(Order order) {","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"onefangg"},"content":"            requireNonNull(order);","lastModifiedDate":"2022-03-04"},{"lineNumber":103,"author":{"gitId":"onefangg"},"content":"            this.order \u003d order;","lastModifiedDate":"2022-03-04"},{"lineNumber":104,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":105,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":106,"author":{"gitId":"onefangg"},"content":"        @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":107,"author":{"gitId":"onefangg"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"onefangg"},"content":"            requireNonNull(order);","lastModifiedDate":"2022-03-04"},{"lineNumber":109,"author":{"gitId":"onefangg"},"content":"            return this.order.equals(order);","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":111,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"darshan152"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"darshan152"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"darshan152"},"content":"            ObservableList\u003cPerson\u003e list \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"darshan152"},"content":"            list.add(new PersonBuilder().build());","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"darshan152"},"content":"            FilteredList\u003cPerson\u003e filteredPersons \u003d new FilteredList\u003cPerson\u003e(list);","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"darshan152"},"content":"            return filteredPersons;","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-04"},{"lineNumber":122,"author":{"gitId":"onefangg"},"content":"     * A Model stub that always accept the order being added.","lastModifiedDate":"2022-03-04"},{"lineNumber":123,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-04"},{"lineNumber":124,"author":{"gitId":"onefangg"},"content":"    private class ModelStubAcceptingOrderAdded extends ModelStub {","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"onefangg"},"content":"        final ArrayList\u003cOrder\u003e ordersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"onefangg"},"content":"        @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"onefangg"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2022-03-04"},{"lineNumber":129,"author":{"gitId":"onefangg"},"content":"            requireNonNull(order);","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"onefangg"},"content":"            return ordersAdded.stream().anyMatch(order::equals);","lastModifiedDate":"2022-03-07"},{"lineNumber":131,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":132,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":133,"author":{"gitId":"onefangg"},"content":"        @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":134,"author":{"gitId":"onefangg"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2022-03-04"},{"lineNumber":135,"author":{"gitId":"onefangg"},"content":"            requireNonNull(order);","lastModifiedDate":"2022-03-04"},{"lineNumber":136,"author":{"gitId":"onefangg"},"content":"            ordersAdded.add(order);","lastModifiedDate":"2022-03-04"},{"lineNumber":137,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":138,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":139,"author":{"gitId":"onefangg"},"content":"        @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":140,"author":{"gitId":"onefangg"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"onefangg"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-04"},{"lineNumber":142,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-04"},{"lineNumber":143,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"darshan152"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"darshan152"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"darshan152"},"content":"            ObservableList\u003cPerson\u003e list \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"darshan152"},"content":"            list.add(new PersonBuilder().build());","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"darshan152"},"content":"            FilteredList\u003cPerson\u003e filteredPersons \u003d new FilteredList\u003cPerson\u003e(list);","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"darshan152"},"content":"            return filteredPersons;","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":152,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":153,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"darshan152":41,"Geralddtan":1,"onefangg":111}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"        model \u003d new ModelManager(getTypicalAddressBookPersons(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"darshan152":2,"Geralddtan":4,"declanleeler":2,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.ModelStub;","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Geralddtan":10,"onefangg":1,"-":104}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookPersons(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookPersons(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"darshan152":3,"declanleeler":3,"-":26}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false)));","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\", true, false)));","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true, false)));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, true)));","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\", true, false).hashCode());","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true, false).hashCode());","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false, true).hashCode());","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"declanleeler":11,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COLLECTION_TYPE;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELIVERYDATETIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.OrderUuidContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Add more chocolate\";","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Enjoys a joke or two\";","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALID_REMARK_EMPTY \u003d \"\";","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"    public static final String VALID_DETAILS_AMY \u003d \"1:chocolatemuffin\";","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"    public static final String VALID_DETAILS_BOB \u003d \"1:raspberrycake\";","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"    public static final String VALID_UUID_AMY \u003d \"c03d9523-9748-4fdd-938e-5666b9564af6\";","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"    public static final String VALID_UUID_BOB \u003d \"2609b29d-9532-4efb-8d9a-f7ab63d6d612\";","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALID_DELIVERYDATETIME_AMY \u003d \"11-11-2022 15:30\";","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALID_DELIVERYDATETIME_BOB \u003d \"12-12-2022 13:00\";","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALID_COLLECTIONTYPE_AMY_STRING \u003d \"delivery\";","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"    public static final String VALID_COLLECTIONTYPE_BOB_STRING \u003d \"Pickup\";","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"    public static final CollectionType VALID_COLLECTIONTYPE_AMY_TYPE \u003d CollectionType.DELIVERY;","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"    public static final CollectionType VALID_COLLECTIONTYPE_BOB_TYPE \u003d CollectionType.PICKUP;","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"    public static final String VALID_COMPLETE_AMY \u003d \"false\";","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"    public static final String VALID_COMPLETE_BOB \u003d \"true\";","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"onefangg"},"content":"    public static final String DETAILS_DESC_AMY \u003d \" \" + PREFIX_DETAILS + VALID_DETAILS_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"onefangg"},"content":"    public static final String DETAILS_DESC_BOB \u003d \" \" + PREFIX_DETAILS + VALID_DETAILS_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"    public static final String DELIVERYDATETIME_DESC_AMY \u003d \" \" + PREFIX_DELIVERYDATETIME","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"            + VALID_DELIVERYDATETIME_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"    public static final String DELIVERYDATETIME_DESC_BOB \u003d \" \" + PREFIX_DELIVERYDATETIME","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"            + VALID_DELIVERYDATETIME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"    public static final String COLLECTION_TYPE_DESC_AMY \u003d \" \" + PREFIX_COLLECTION_TYPE","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"            + VALID_COLLECTIONTYPE_AMY_STRING;","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"    public static final String COLLECTION_TYPE_DESC_BOB \u003d \" \" + PREFIX_COLLECTION_TYPE","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"            + VALID_COLLECTIONTYPE_BOB_STRING;","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"onefangg"},"content":"    public static final String INVALID_DETAILS_DESC \u003d \" \" + PREFIX_DETAILS","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"onefangg"},"content":"            + \"1: ch0co!ate cake\"; // non-alphabet or whitespace characters allowed","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"onefangg"},"content":"    public static final String INVALID_DETAILS_QUANTITY_DESC \u003d \" \" + PREFIX_DETAILS + \"0:chocolatecake\";","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"onefangg"},"content":"    public static final String INVALID_DETAILS_ITEM_DESC \u003d \" \" + PREFIX_DETAILS","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"onefangg"},"content":"            + \"1:chocolatecakewithexcessivenumberofthings\";","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"    public static final String INVALID_DELIVERYDATETIME_DESC \u003d \" \" + PREFIX_DELIVERYDATETIME","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"            + \"20/01/2022 23:32\"; // format is wrong","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"    public static final String INVALID_COLLECTIONTYPE_DESC \u003d \" \" + PREFIX_COLLECTION_TYPE","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"            + \"PICKUPYY\"; // format is wrong","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"darshan152"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"    public static final EditOrderCommand.EditOrderDescriptor DESC_AMY_ORDER;","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"    public static final EditOrderCommand.EditOrderDescriptor DESC_BOB_ORDER;","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"darshan152"},"content":"        DESC_AMY_ORDER \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"Geralddtan"},"content":"                .withDetails(VALID_DETAILS_AMY).withDeliveryDateTime(VALID_DELIVERYDATETIME_AMY)","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"Geralddtan"},"content":"                .withCollectionType(VALID_COLLECTIONTYPE_AMY_TYPE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"darshan152"},"content":"        DESC_BOB_ORDER \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"Geralddtan"},"content":"                .withDetails(VALID_DETAILS_BOB).withDeliveryDateTime(VALID_DELIVERYDATETIME_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"Geralddtan"},"content":"                .withCollectionType(VALID_COLLECTIONTYPE_BOB_TYPE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"declanleeler"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel,","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"declanleeler"},"content":"                                                  CommandResult expectedCommandResult, Model expectedModel) {","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"declanleeler"},"content":"    public static void assertPersonCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"declanleeler"},"content":"                                                  Model expectedModel) {","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"declanleeler"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, true);","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"declanleeler"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"declanleeler"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"declanleeler"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"declanleeler"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"declanleeler"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"declanleeler"},"content":"    public static void assertOrderCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                                                  Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"declanleeler"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"Geralddtan"},"content":"     * Updates {@code model}\u0027s filtered list to show only the order at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-11"},{"lineNumber":196,"author":{"gitId":"Geralddtan"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":198,"author":{"gitId":"Geralddtan"},"content":"    public static void showOrderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredOrderList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"Geralddtan"},"content":"        Order order \u003d model.getFilteredOrderList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"darshan152"},"content":"        final String[] splitName \u003d order.getUuid().toString().split(\"\\\\s+\");","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"darshan152"},"content":"        model.updateFilteredOrderList(new OrderUuidContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":205,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(1, model.getFilteredOrderList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":207,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"darshan152":11,"Geralddtan":44,"onefangg":10,"declanleeler":15,"-":123,"punnyhuimin":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOrderCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":" * {@code DeleteOrderCommand}.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"public class DeleteOrderCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"        Order orderToDelete \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"        assertOrderCommandSuccess(deleteOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        Order orderToDelete \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"        showNoOrder(expectedModel);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"        assertOrderCommandSuccess(deleteOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"        DeleteOrderCommand deleteFirstCommand \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"        DeleteOrderCommand deleteSecondCommand \u003d new DeleteOrderCommand(INDEX_SECOND_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"        DeleteOrderCommand deleteFirstCommandCopy \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"    private void showNoOrder(Model model) {","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"        model.updateFilteredOrderList(p -\u003e false);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(model.getFilteredOrderList().isEmpty());","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Geralddtan":106,"declanleeler":3}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_PERSON;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":" * {@code DeletePersonCommand}.","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FOURTH_PERSON.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FOURTH_PERSON);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"    public void execute_invalidPersonOrderPresent_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"        assertCommandFailure(deletePersonCommand, model, DeletePersonCommand.MESSAGE_DELETE_PERSON_FAILED_ORDER_FOUND);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"darshan152"},"content":"        showPersonAtIndex(model, INDEX_FOURTH_PERSON);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"declanleeler"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"declanleeler"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"declanleeler"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"declanleeler"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"declanleeler"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"darshan152":11,"declanleeler":15,"-":93}},{"path":"src/test/java/seedu/address/logic/commands/EditOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY_ORDER;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB_ORDER;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COLLECTIONTYPE_BOB_TYPE;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELIVERYDATETIME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOrderCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.logic.commands.EditOrderCommand.EditOrderDescriptor;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditOrderCommand.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"public class EditOrderCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    public void execute_detailsFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"        Order editedOrder \u003d new OrderBuilder(model.getFilteredOrderList().get(0))","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"                .withDetails(\"1: Choc Cake\").build(); // Creates the order in orderbuilder","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(editedOrder).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST_ORDER, descriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"        assertOrderCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"        Index indexLastOrder \u003d Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"        Order lastOrder \u003d model.getFilteredOrderList().get(indexLastOrder.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        OrderBuilder orderInList \u003d new OrderBuilder(lastOrder);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"        Order editedOrder \u003d orderInList","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"                .withDetails(VALID_DETAILS_BOB).withDeliveryDateTime(VALID_DELIVERYDATETIME_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"                .withCollectionType(VALID_COLLECTIONTYPE_BOB_TYPE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"darshan152"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"                .withDetails(VALID_DETAILS_BOB)","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"                .withDeliveryDateTime(VALID_DELIVERYDATETIME_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"                .withCollectionType(VALID_COLLECTIONTYPE_BOB_TYPE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(indexLastOrder, descriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"        expectedModel.setOrder(lastOrder, editedOrder);","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"        assertOrderCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"        Index indexLastOrder \u003d Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"        Order lastOrder \u003d model.getFilteredOrderList().get(indexLastOrder.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"        OrderBuilder orderInList \u003d new OrderBuilder(lastOrder);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"        Order editedOrder \u003d orderInList","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"                .withDetails(VALID_DETAILS_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"                .withDeliveryDateTime(VALID_DELIVERYDATETIME_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"                .withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"                .withCollectionType(VALID_COLLECTIONTYPE_BOB_TYPE).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder()","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"                .withDetails(VALID_DETAILS_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"                .withDeliveryDateTime(VALID_DELIVERYDATETIME_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"                .withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"                .withCollectionType(VALID_COLLECTIONTYPE_BOB_TYPE).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(indexLastOrder, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"        expectedModel.setOrder(lastOrder, editedOrder);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"        assertOrderCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST_ORDER, new EditOrderDescriptor());","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"        Order editedOrder \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"        assertOrderCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"punnyhuimin"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"        Order orderInFilteredList \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"darshan152"},"content":"        Order editedOrder \u003d new OrderBuilder(orderInFilteredList).build();","lastModifiedDate":"2022-03-19"},{"lineNumber":127,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST_ORDER,","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"darshan152"},"content":"                new EditOrderDescriptorBuilder().build());","lastModifiedDate":"2022-03-19"},{"lineNumber":129,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"punnyhuimin"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"punnyhuimin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"punnyhuimin"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"punnyhuimin"},"content":"        assertOrderCommandSuccess(editOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"punnyhuimin"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"punnyhuimin"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"darshan152"},"content":"        EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder().build();","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"punnyhuimin"},"content":"        assertCommandFailure(editOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"punnyhuimin"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"punnyhuimin"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"punnyhuimin"},"content":"    public void execute_invalidOrderIndexFilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"punnyhuimin"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"punnyhuimin"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"punnyhuimin"},"content":"        // ensures that outOfBoundIndex is still in bounds of ReadyBakey Order list","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"punnyhuimin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"darshan152"},"content":"                new EditOrderDescriptorBuilder().build());","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"punnyhuimin"},"content":"        assertCommandFailure(editOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"punnyhuimin"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"punnyhuimin"},"content":"        final EditOrderCommand standardCommand \u003d new EditOrderCommand(INDEX_FIRST_ORDER, DESC_AMY_ORDER);","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"punnyhuimin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderDescriptor copyDescriptor \u003d new EditOrderDescriptor(DESC_AMY_ORDER);","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderCommand commandWithSameValues \u003d new EditOrderCommand(INDEX_FIRST_ORDER, copyDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"punnyhuimin"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"punnyhuimin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"punnyhuimin"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"punnyhuimin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"punnyhuimin"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"punnyhuimin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"punnyhuimin"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"punnyhuimin"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"punnyhuimin"},"content":"        assertFalse(standardCommand.equals(new EditOrderCommand(INDEX_SECOND_ORDER, DESC_AMY_ORDER)));","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"punnyhuimin"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"punnyhuimin"},"content":"        assertFalse(standardCommand.equals(new EditOrderCommand(INDEX_FIRST_ORDER, DESC_BOB_ORDER)));","lastModifiedDate":"2022-03-14"},{"lineNumber":187,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":189,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"darshan152":10,"Geralddtan":6,"onefangg":1,"punnyhuimin":172}},{"path":"src/test/java/seedu/address/logic/commands/EditOrderDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY_ORDER;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB_ORDER;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COLLECTIONTYPE_BOB_TYPE;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELIVERYDATETIME_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAILS_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.logic.commands.EditOrderCommand.EditOrderDescriptor;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.testutil.EditOrderDescriptorBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"public class EditOrderDescriptorTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        EditOrderDescriptor descriptorWithSameValues \u003d new EditOrderDescriptor(DESC_AMY_ORDER);","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        assertTrue(DESC_AMY_ORDER.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        assertTrue(DESC_AMY_ORDER.equals(DESC_AMY_ORDER));","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"        assertFalse(DESC_AMY_ORDER.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        assertFalse(DESC_AMY_ORDER.equals(5));","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"        assertFalse(DESC_AMY_ORDER.equals(DESC_BOB_ORDER));","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"        // different deliverydatetime -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"        EditOrderDescriptor editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY_ORDER)","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"                .withDeliveryDateTime(VALID_DELIVERYDATETIME_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"        assertFalse(DESC_AMY_ORDER.equals(editedAmy));","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"        // different collectiontype -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"        editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY_ORDER)","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"                .withCollectionType(VALID_COLLECTIONTYPE_BOB_TYPE)","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"        assertFalse(DESC_AMY_ORDER.equals(editedAmy));","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"        // different details -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"        editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY_ORDER).withDetails(VALID_DETAILS_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"        assertFalse(DESC_AMY_ORDER.equals(editedAmy));","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"        editedAmy \u003d new EditOrderDescriptorBuilder(DESC_AMY_ORDER).withDetails(VALID_DETAILS_AMY, VALID_DETAILS_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"                .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"        assertFalse(DESC_AMY_ORDER.equals(editedAmy));","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"darshan152":3,"onefangg":20,"punnyhuimin":36}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPersonCommand.","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookPersons(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"darshan152"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"darshan152"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"darshan152"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"darshan152"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"darshan152"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"darshan152"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"darshan152"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"darshan152"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"darshan152"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"darshan152":24,"Geralddtan":1,"declanleeler":5,"-":143}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"darshan152":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false,","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"                false, false, true);","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"declanleeler":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindIncompleteOrdersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"declanleeler"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"declanleeler"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOrderCommandSuccess;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"declanleeler"},"content":"import seedu.address.model.order.OrderIncompleteBeforeDeliveryDateTimePredicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"declanleeler"},"content":"public class FindIncompleteOrdersCommandTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"declanleeler"},"content":"    private Model model;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"declanleeler"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"declanleeler"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"declanleeler"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"    public void equals() {","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        OrderIncompleteBeforeDeliveryDateTimePredicate firstPredicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"declanleeler"},"content":"                new OrderIncompleteBeforeDeliveryDateTimePredicate(new DeliveryDateTime(\"30-12-2022 18:30\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"declanleeler"},"content":"        OrderIncompleteBeforeDeliveryDateTimePredicate secondPredicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"declanleeler"},"content":"                new OrderIncompleteBeforeDeliveryDateTimePredicate(new DeliveryDateTime(\"30-12-2022 15:30\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"declanleeler"},"content":"        FindIncompleteOrdersCommand findFirstCommand \u003d new FindIncompleteOrdersCommand(firstPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        FindIncompleteOrdersCommand findSecondCommand \u003d new FindIncompleteOrdersCommand(secondPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"declanleeler"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"declanleeler"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"declanleeler"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"declanleeler"},"content":"        FindIncompleteOrdersCommand findFirstCommandCopy \u003d new FindIncompleteOrdersCommand(firstPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"declanleeler"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"declanleeler"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"declanleeler"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"declanleeler"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"declanleeler"},"content":"    public void execute_multipleIncomplete_multipleOrdersFound() {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"declanleeler"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"declanleeler"},"content":"        DeliveryDateTime multipleDeliveriesDateTime \u003d new DeliveryDateTime(\"30-12-2022 18:30\");","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"declanleeler"},"content":"        OrderIncompleteBeforeDeliveryDateTimePredicate predicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"declanleeler"},"content":"                new OrderIncompleteBeforeDeliveryDateTimePredicate(multipleDeliveriesDateTime);","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"declanleeler"},"content":"        FindIncompleteOrdersCommand command \u003d new FindIncompleteOrdersCommand(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"declanleeler"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"declanleeler"},"content":"        assertOrderCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"declanleeler"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"declanleeler":66}},{"path":"src/test/java/seedu/address/logic/commands/FindOrderCollectionTypeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FIND_ORDERS_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOrderCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.EMILY;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.JERRY;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionTypeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindOrderCollectionTypeCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"public class FindOrderCollectionTypeCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"        CollectionTypeContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"                new CollectionTypeContainsKeywordsPredicate(\"delivery\");","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"        CollectionTypeContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"                new CollectionTypeContainsKeywordsPredicate(\"pickup\");","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommand \u003d new FindOrderCollectionTypeCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findSecondCommand \u003d new FindOrderCollectionTypeCommand(secondPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommandCopy \u003d new FindOrderCollectionTypeCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"    public void execute_singleKeyword_multipleOrdersFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"onefangg"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FIND_ORDERS_OVERVIEW, 2,","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"                \"collectionType\", \"delivery\");","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"        CollectionTypeContainsKeywordsPredicate predicate \u003d preparePredicate(\"delivery\");","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand command \u003d new FindOrderCollectionTypeCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"        assertOrderCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(Arrays.asList(EMILY, JERRY), model.getFilteredOrderList());","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"     * Parses {@code userInput} into a {@code CollectionTypeContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"    private CollectionTypeContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"        String collectionTypeKeyword \u003d userInput.trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"        return new CollectionTypeContainsKeywordsPredicate(collectionTypeKeyword);","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":70,"onefangg":3}},{"path":"src/test/java/seedu/address/logic/commands/FindOrderDetailsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FIND_ORDERS_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOrderCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.EMILY;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.SIMON;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DetailsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindOrderDetailsCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"public class FindOrderDetailsCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"        DetailsContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"                new DetailsContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"        DetailsContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"                new DetailsContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommand \u003d new FindOrderDetailsCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findSecondCommand \u003d new FindOrderDetailsCommand(secondPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommandCopy \u003d new FindOrderDetailsCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"    public void execute_multipleKeywords_multipleOrdersFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FIND_ORDERS_OVERVIEW, 2,","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"                \"details\", Arrays.asList(\"chocolate vanilla\".split(\" \")));","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"        DetailsContainsKeywordsPredicate predicate \u003d preparePredicate(\"chocolate vanilla\");","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand command \u003d new FindOrderDetailsCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        assertOrderCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(Arrays.asList(EMILY, SIMON), model.getFilteredOrderList());","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"     * Parses {@code userInput} into a {@code DetailsContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"    private DetailsContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"        String[] detailsKeywords \u003d userInput.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"        return new DetailsContainsKeywordsPredicate(Arrays.asList(detailsKeywords));","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":71,"onefangg":3}},{"path":"src/test/java/seedu/address/logic/commands/FindOrderNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FIND_ORDERS_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOrderCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.EMILY;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.SIMON;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.OrderUuidContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindOrderNameCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"public class FindOrderNameCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommand \u003d new FindOrderNameCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findSecondCommand \u003d new FindOrderNameCommand(secondPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommandCopy \u003d new FindOrderNameCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"    public void execute_multipleKeywords_multipleOrdersFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FIND_ORDERS_OVERVIEW, 2,","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"                \"name\", Arrays.asList(\"emily Simon\".split(\" \")));","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"emily Simon\");","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand command \u003d new FindOrderNameCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"        List\u003cPerson\u003e filteredList \u003d expectedModel.getFilteredPersonList().filtered(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"        String[] uuidKeywords \u003d filteredList.stream().map(person-\u003eperson.getUuid().toString()).toArray(String[]::new);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"        expectedModel.updateFilteredOrderList(new OrderUuidContainsKeywordsPredicate(Arrays.asList(uuidKeywords)));","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"        assertOrderCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(Arrays.asList(EMILY, SIMON), model.getFilteredOrderList());","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"        String[] nameKeywords \u003d userInput.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords));","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":78,"onefangg":3}},{"path":"src/test/java/seedu/address/logic/commands/FindOrderPhoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FIND_ORDERS_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOrderCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.EMILY;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.SIMON;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.OrderUuidContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindOrderPhoneCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"public class FindOrderPhoneCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommand \u003d new FindOrderPhoneCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findSecondCommand \u003d new FindOrderPhoneCommand(secondPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommandCopy \u003d new FindOrderPhoneCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"    public void execute_multipleKeywords_multipleOrdersFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FIND_ORDERS_OVERVIEW, 2,","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"                \"phone\", Arrays.asList(\"90032123 91029322\".split(\" \")));","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d preparePredicate(\"90032123 91029322\");","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand command \u003d new FindOrderPhoneCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"        List\u003cPerson\u003e filteredList \u003d expectedModel.getFilteredPersonList().filtered(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"        String[] uuidKeywords \u003d filteredList.stream().map(person-\u003eperson.getUuid().toString()).toArray(String[]::new);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"        expectedModel.updateFilteredOrderList(new OrderUuidContainsKeywordsPredicate(Arrays.asList(uuidKeywords)));","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"        assertOrderCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(Arrays.asList(EMILY, SIMON), model.getFilteredOrderList());","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"    private PhoneContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"        String[] phoneKeywords \u003d userInput.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(phoneKeywords));","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":78,"onefangg":3}},{"path":"src/test/java/seedu/address/logic/commands/FindOrderRemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FIND_ORDERS_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOrderCommandSuccess;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.EMILY;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.JERRY;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.RemarkContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindOrderRemarkCommand}.","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"public class FindOrderRemarkCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"        RemarkContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"                new RemarkContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        RemarkContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"                new RemarkContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommand \u003d new FindOrderRemarkCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findSecondCommand \u003d new FindOrderRemarkCommand(secondPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand findFirstCommandCopy \u003d new FindOrderRemarkCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"    public void execute_multipleKeywords_multipleOrdersFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FIND_ORDERS_OVERVIEW, 2,","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"                \"remark\", Arrays.asList(\"Allergic Hates\".split(\" \")));","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"        RemarkContainsKeywordsPredicate predicate \u003d preparePredicate(\"Allergic Hates\");","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"        FindOrderCommand command \u003d new FindOrderRemarkCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        expectedModel.updateFilteredOrderList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"        assertOrderCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(Arrays.asList(EMILY, JERRY), model.getFilteredOrderList());","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"     * Parses {@code userInput} into a {@code RemarkContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"    private RemarkContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"        String[] remarkKeywords \u003d userInput.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"        return new RemarkContainsKeywordsPredicate(Arrays.asList(remarkKeywords));","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Geralddtan":71,"onefangg":4}},{"path":"src/test/java/seedu/address/logic/commands/FindPersonNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FIND_PERSONS_OVERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"public class FindPersonNameCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookPersons(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookPersons(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonNameCommand(firstPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"        FindPersonCommand findSecondCommand \u003d new FindPersonNameCommand(secondPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonNameCommand(firstPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FIND_PERSONS_OVERVIEW, 3,","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"                \"name\", Arrays.asList(\"Kurz Elle Kunz\".split(\" \")));","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"        FindPersonCommand command \u003d new FindPersonNameCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"darshan152":3,"onefangg":10,"declanleeler":2,"-":60}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"declanleeler"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, false, false, true, false);","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"declanleeler":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"        model \u003d new ModelManager(getTypicalAddressBookPersons(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"darshan152":2,"declanleeler":3,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/ListOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListOrderCommand.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"public class ListOrderCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    private Model model;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(new ListOrderCommand(), model, ListOrderCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(new ListOrderCommand(), model, ListOrderCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Geralddtan":36,"declanleeler":3}},{"path":"src/test/java/seedu/address/logic/commands/ListPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListPersonCommand.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"public class ListPersonCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    private Model model;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"        model \u003d new ModelManager(getTypicalAddressBookPersons(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"darshan152":2,"declanleeler":3,"punnyhuimin":34}},{"path":"src/test/java/seedu/address/logic/commands/MarkOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"declanleeler"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":" * {@code MarkOrderCommand}.","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"public class MarkOrderCommandTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"        Index indexLastOrder \u003d Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        Order lastOrder \u003d model.getFilteredOrderList().get(indexLastOrder.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        OrderBuilder orderInList \u003d new OrderBuilder(lastOrder);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        Order editedMarkedOrder \u003d orderInList.withComplete(true).build(); //Setting complete as true","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"        MarkOrderCommand markOrderCommand \u003d new MarkOrderCommand(indexLastOrder);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        String expectedMessage \u003d String.format(MarkOrderCommand.MESSAGE_MARK_ORDER_SUCCESS, editedMarkedOrder);","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        expectedModel.setOrder(lastOrder, editedMarkedOrder);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(markOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        MarkOrderCommand markOrderCommand \u003d new MarkOrderCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        assertCommandFailure(markOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"        Order orderInFilteredList \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"        Order editedMarkedOrder \u003d new OrderBuilder(orderInFilteredList).withComplete(true).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        MarkOrderCommand markOrderCommand \u003d new MarkOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"        String expectedMessage \u003d String.format(MarkOrderCommand.MESSAGE_MARK_ORDER_SUCCESS, editedMarkedOrder);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedMarkedOrder);","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"declanleeler"},"content":"        assertPersonCommandSuccess(markOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"        MarkOrderCommand markOrderCommand \u003d new MarkOrderCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"        assertCommandFailure(markOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"        MarkOrderCommand markFirstCommand \u003d new MarkOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"        MarkOrderCommand markSecondCommand \u003d new MarkOrderCommand(INDEX_SECOND_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"        MarkOrderCommand markFirstCommandCopy \u003d new MarkOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Geralddtan":105,"declanleeler":3}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPersonCommandSuccess;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalAddressBookOrders;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":" * {@code UnmarkOrderCommand}.","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"public class UnmarkOrderCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookOrders(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"        Index indexLastOrder \u003d Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"        Order unmarkedOrder \u003d model.getFilteredOrderList().get(indexLastOrder.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"        assertFalse(unmarkedOrder.isComplete());","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"        OrderBuilder orderInList \u003d new OrderBuilder(unmarkedOrder);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"darshan152"},"content":"        Order editedMarkedOrder \u003d orderInList.withComplete(true).build(); //Setting complete as true","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"        model.setOrder(unmarkedOrder, editedMarkedOrder);","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"        assertTrue(model.getFilteredOrderList().get(indexLastOrder.getZeroBased()).isComplete());","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"darshan152"},"content":"        UnmarkOrderCommand unmarkOrderCommand \u003d new UnmarkOrderCommand(indexLastOrder);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"        String expectedMessage \u003d String.format(UnmarkOrderCommand.MESSAGE_UNMARK_ORDER_SUCCESS, unmarkedOrder);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"        assertPersonCommandSuccess(unmarkOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"darshan152"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"        UnmarkOrderCommand unmarkOrderCommand \u003d new UnmarkOrderCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"darshan152"},"content":"        assertCommandFailure(unmarkOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"darshan152"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"darshan152"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"darshan152"},"content":"        Order unmarkedOrderInFilteredList \u003d model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"darshan152"},"content":"        assertFalse(unmarkedOrderInFilteredList.isComplete());","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"        Order editedMarkedOrder \u003d new OrderBuilder(unmarkedOrderInFilteredList).withComplete(true).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"        model.setOrder(unmarkedOrderInFilteredList, editedMarkedOrder);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"darshan152"},"content":"        assertTrue(model.getFilteredOrderList().get(INDEX_FIRST_ORDER.getZeroBased()).isComplete());","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"darshan152"},"content":"        UnmarkOrderCommand unmarkOrderCommand \u003d new UnmarkOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"darshan152"},"content":"        String expectedMessage \u003d String.format(UnmarkOrderCommand.MESSAGE_UNMARK_ORDER_SUCCESS,","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"darshan152"},"content":"                unmarkedOrderInFilteredList);","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"darshan152"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"darshan152"},"content":"        assertPersonCommandSuccess(unmarkOrderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"darshan152"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"darshan152"},"content":"        showOrderAtIndex(model, INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"darshan152"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"darshan152"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"darshan152"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"darshan152"},"content":"        UnmarkOrderCommand unmarkOrderCommand \u003d new UnmarkOrderCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"darshan152"},"content":"        assertCommandFailure(unmarkOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"darshan152"},"content":"    public void equals() {","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"darshan152"},"content":"        UnmarkOrderCommand unmarkFirstCommand \u003d new UnmarkOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"darshan152"},"content":"        UnmarkOrderCommand unmarkSecondCommand \u003d new UnmarkOrderCommand(INDEX_SECOND_ORDER);","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"darshan152"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"darshan152"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommand));","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"darshan152"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"darshan152"},"content":"        UnmarkOrderCommand unmarkFirstCommandCopy \u003d new UnmarkOrderCommand(INDEX_FIRST_ORDER);","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"darshan152"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommandCopy));","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"darshan152"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"darshan152"},"content":"        assertFalse(unmarkFirstCommand.equals(1));","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"darshan152"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"darshan152"},"content":"        assertFalse(unmarkFirstCommand.equals(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"darshan152"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"darshan152"},"content":"        assertFalse(unmarkFirstCommand.equals(unmarkSecondCommand));","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"darshan152":123}},{"path":"src/test/java/seedu/address/logic/parser/AddOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MAX_INPUT_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MAX_SIZE_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COLLECTION_TYPE_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COLLECTION_TYPE_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DELIVERYDATETIME_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DELIVERYDATETIME_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DETAILS_DESC_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DETAILS_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COLLECTIONTYPE_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DELIVERYDATETIME_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DETAILS_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DETAILS_ITEM_DESC;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DETAILS_QUANTITY_DESC;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COLLECTIONTYPE_AMY_STRING;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELIVERYDATETIME_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAILS_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.order.Details.ITEM_MESSAGE_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.order.Details.QUANTITY_MESSAGE_LIMIT;","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.util.SampleDataUtil.getDetailsList;","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"import static seedu.address.testutil.TypicalOrders.AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"onefangg"},"content":"public class AddOrderCommandParserTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"    private AddOrderCommandParser parser \u003d new AddOrderCommandParser();","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"onefangg"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"        Order expectedOrder \u003d new OrderBuilder(AMY).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"darshan152"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PHONE_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"                + DETAILS_DESC_AMY + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"darshan152"},"content":"                new AddOrderCommand(new Phone(VALID_PHONE_AMY), new Remark(VALID_REMARK_AMY),","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"                        getDetailsList(VALID_DETAILS_AMY), new DeliveryDateTime(VALID_DELIVERYDATETIME_AMY),","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"darshan152"},"content":"                        CollectionType.DELIVERY));","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"darshan152"},"content":"        assertParseSuccess(parser, PHONE_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"darshan152"},"content":"                + DETAILS_DESC_AMY + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"darshan152"},"content":"                new AddOrderCommand(new Phone(VALID_PHONE_AMY), new Remark(VALID_REMARK_AMY),","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"onefangg"},"content":"                        getDetailsList(VALID_DETAILS_AMY), new DeliveryDateTime(VALID_DELIVERYDATETIME_AMY),","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"                        CollectionType.DELIVERY));","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"darshan152"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PHONE_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"darshan152"},"content":"                + DETAILS_DESC_AMY + REMARK_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"darshan152"},"content":"                + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"darshan152"},"content":"                new AddOrderCommand(new Phone(VALID_PHONE_AMY), new Remark(VALID_REMARK_AMY),","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"                        getDetailsList(VALID_DETAILS_AMY), new DeliveryDateTime(VALID_DELIVERYDATETIME_AMY),","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"darshan152"},"content":"                        CollectionType.DELIVERY));","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"onefangg"},"content":"        // multiple details - all details accepted","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"darshan152"},"content":"        assertParseSuccess(parser, PHONE_DESC_AMY + DETAILS_DESC_BOB + DETAILS_DESC_AMY + REMARK_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"darshan152"},"content":"                + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"darshan152"},"content":"                new AddOrderCommand(new Phone(VALID_PHONE_AMY), new Remark(VALID_REMARK_AMY),","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"onefangg"},"content":"                        getDetailsList(VALID_DETAILS_BOB, VALID_DETAILS_AMY),","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"onefangg"},"content":"                        new DeliveryDateTime(VALID_DELIVERYDATETIME_AMY),","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"darshan152"},"content":"                        CollectionType.DELIVERY));","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"        // multiple deliveryDateTime - last deliveryDateTime accepted","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"darshan152"},"content":"        assertParseSuccess(parser, PHONE_DESC_AMY + DETAILS_DESC_AMY + REMARK_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"darshan152"},"content":"                        + DELIVERYDATETIME_DESC_BOB + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"darshan152"},"content":"                new AddOrderCommand(new Phone(VALID_PHONE_AMY), new Remark(VALID_REMARK_AMY),","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"onefangg"},"content":"                        getDetailsList(VALID_DETAILS_AMY), new DeliveryDateTime(VALID_DELIVERYDATETIME_AMY),","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"darshan152"},"content":"                        CollectionType.DELIVERY));","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"        // multiple collectionType - last collectionType accepted","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"darshan152"},"content":"        assertParseSuccess(parser, PHONE_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"                + DETAILS_DESC_AMY + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"darshan152"},"content":"                + COLLECTION_TYPE_DESC_BOB + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"darshan152"},"content":"                new AddOrderCommand(new Phone(VALID_PHONE_AMY), new Remark(VALID_REMARK_AMY),","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"onefangg"},"content":"                        getDetailsList(VALID_DETAILS_AMY), new DeliveryDateTime(VALID_DELIVERYDATETIME_AMY),","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"darshan152"},"content":"                        CollectionType.DELIVERY));","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"onefangg"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"onefangg"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"onefangg"},"content":"        // missing name prefix","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"Geralddtan"},"content":"        assertParseFailure(parser, VALID_NAME_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + DETAILS_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"Geralddtan"},"content":"                         + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"onefangg"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"onefangg"},"content":"        // missing phone prefix","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"Geralddtan"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + VALID_PHONE_AMY + ADDRESS_DESC_AMY + DETAILS_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"Geralddtan"},"content":"                         + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"onefangg"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"onefangg"},"content":"        // missing address prefix","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"Geralddtan"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + VALID_ADDRESS_AMY + DETAILS_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"Geralddtan"},"content":"                         + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"onefangg"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"onefangg"},"content":"        // missing details prefix","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"Geralddtan"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + VALID_DETAILS_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"Geralddtan"},"content":"                         + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"Geralddtan"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"Geralddtan"},"content":"        // missing deliverydatetime prefix","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"Geralddtan"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + DETAILS_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"Geralddtan"},"content":"                         + VALID_DELIVERYDATETIME_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"Geralddtan"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"Geralddtan"},"content":"        // missing collectionType prefix","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"Geralddtan"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + DETAILS_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"Geralddtan"},"content":"                         + DELIVERYDATETIME_DESC_AMY + VALID_COLLECTIONTYPE_AMY_STRING,","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"onefangg"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"onefangg"},"content":"        // all prefixes missing","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"Geralddtan"},"content":"        assertParseFailure(parser, VALID_NAME_AMY + VALID_PHONE_AMY + VALID_ADDRESS_AMY + VALID_DETAILS_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"Geralddtan"},"content":"                        + VALID_DELIVERYDATETIME_AMY + VALID_COLLECTIONTYPE_AMY_STRING,","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"onefangg"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"onefangg"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"onefangg"},"content":"        // invalid phone","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"darshan152"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"Geralddtan"},"content":"                + DETAILS_DESC_AMY + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"Geralddtan"},"content":"                + COLLECTION_TYPE_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"onefangg"},"content":"        // invalid details","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"onefangg"},"content":"                + INVALID_DETAILS_DESC + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"onefangg"},"content":"                + COLLECTION_TYPE_DESC_AMY, Details.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"onefangg"},"content":"        // valid + invalid details still fails","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"onefangg"},"content":"                + DETAILS_DESC_AMY + INVALID_DETAILS_DESC + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"onefangg"},"content":"                + COLLECTION_TYPE_DESC_AMY, Details.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"onefangg"},"content":"        // invalid quantity passed","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"onefangg"},"content":"                + INVALID_DETAILS_QUANTITY_DESC + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"onefangg"},"content":"                + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"onefangg"},"content":"                String.format(MESSAGE_MAX_INPUT_LIMIT, PREFIX_DETAILS, QUANTITY_MESSAGE_LIMIT));","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"onefangg"},"content":"        // invalid number of characters in order item \u003e 30","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"onefangg"},"content":"                + INVALID_DETAILS_ITEM_DESC + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"onefangg"},"content":"                + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"onefangg"},"content":"                String.format(MESSAGE_MAX_INPUT_LIMIT, PREFIX_DETAILS, ITEM_MESSAGE_LIMIT));","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"Geralddtan"},"content":"        // invalid deliveryDateTime","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"darshan152"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"Geralddtan"},"content":"                + DETAILS_DESC_AMY + REMARK_DESC_AMY + INVALID_DELIVERYDATETIME_DESC","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"Geralddtan"},"content":"                + COLLECTION_TYPE_DESC_AMY, DeliveryDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"Geralddtan"},"content":"        // invalid collectionType","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"darshan152"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"Geralddtan"},"content":"                + DETAILS_DESC_AMY + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"Geralddtan"},"content":"                + INVALID_COLLECTIONTYPE_DESC, CollectionType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"onefangg"},"content":"        // two invalid values - only first invalid value","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"darshan152"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"darshan152"},"content":"                + DETAILS_DESC_AMY + REMARK_DESC_AMY + INVALID_DELIVERYDATETIME_DESC","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"darshan152"},"content":"                + COLLECTION_TYPE_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"darshan152"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"onefangg"},"content":"            + DETAILS_DESC_AMY, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"onefangg"},"content":"        // invalid number of details passed in (\u003e5)","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"onefangg"},"content":"                        + DETAILS_DESC_AMY + DETAILS_DESC_AMY + DETAILS_DESC_AMY + DETAILS_DESC_AMY + DETAILS_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"onefangg"},"content":"                        + DETAILS_DESC_AMY + REMARK_DESC_AMY + DELIVERYDATETIME_DESC_AMY + COLLECTION_TYPE_DESC_AMY,","lastModifiedDate":"2022-03-26"},{"lineNumber":197,"author":{"gitId":"onefangg"},"content":"                String.format(MESSAGE_MAX_SIZE_LIMIT, PREFIX_DETAILS, Order.MAX_DETAIL_SIZE));","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"darshan152":36,"Geralddtan":46,"onefangg":117}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_EMPTY;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"        // multiple remarks - last remark accepted","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"                + REMARK_DESC_AMY + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"                + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"                new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"        // zero remarks","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"        Person expectedPersonMissingRemark \u003d new PersonBuilder(AMY).withRemark(VALID_REMARK_EMPTY).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"                new AddPersonCommand(expectedPersonMissingRemark));","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"        Person expectedPersonMissingTag \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"                new AddPersonCommand(expectedPersonMissingTag));","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"Geralddtan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Geralddtan":27,"-":127}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonNameCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddPersonCommand(person));","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"declanleeler"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"declanleeler"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"declanleeler"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"                + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"darshan152"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"onefangg"},"content":"        // test for find persons by name","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) parser.parseCommand(","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"                FindPersonCommand.COMMAND_WORD + \" \" + PREFIX_NAME + \" \"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"onefangg"},"content":"        assertEquals(new FindPersonNameCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"        assertTrue(parser.parseCommand(seedu.address.logic.commands.ListPersonCommand.COMMAND_WORD)","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"                instanceof seedu.address.logic.commands.ListPersonCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"        assertTrue(parser.parseCommand(seedu.address.logic.commands.ListPersonCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"                instanceof seedu.address.logic.commands.ListPersonCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"darshan152":3,"Geralddtan":3,"onefangg":10,"declanleeler":4,"-":82,"punnyhuimin":6}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"declanleeler"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"declanleeler"},"content":" * outside of the DeletePersonCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"declanleeler"},"content":" * same path through the DeletePersonCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"declanleeler"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"declanleeler"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"declanleeler"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"declanleeler"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"declanleeler"},"content":"                DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"declanleeler":8,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"darshan152"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"darshan152"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"darshan152"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"darshan152"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"darshan152"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"darshan152"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"darshan152"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"darshan152"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"darshan152"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"darshan152"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-02"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"darshan152":17,"-":194}},{"path":"src/test/java/seedu/address/logic/parser/FindOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindOrderCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"public class FindOrderCommandParserTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"    private FindOrderCommandParser parser \u003d new FindOrderCommandParser();","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"                FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"    public void parse_multipleAttributes_throwsParseException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, \" n/Alice p/12345678\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"                FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"onefangg":26}},{"path":"src/test/java/seedu/address/logic/parser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonAddressCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonEmailCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonNameCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonPhoneCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"import seedu.address.logic.commands.FindPersonRemarkCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.RemarkContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"                FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"        FindPersonCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"                new FindPersonNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice Bob\", expectedFindPersonCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t\", expectedFindPersonCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"        // find based on phones","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"        expectedFindPersonCommand \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"                new FindPersonPhoneCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(\"93120283\", \"93214134\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_PHONE + \"93120283 93214134\", expectedFindPersonCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"onefangg"},"content":"        // find based on emails","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"        expectedFindPersonCommand \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"                new FindPersonEmailCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"onefangg"},"content":"                        new EmailContainsKeywordsPredicate(Arrays.asList(\"alex@abc.com\", \"ben@xyz.com\")));","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"onefangg"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_EMAIL + \"alex@abc.com ben@xyz.com\", expectedFindPersonCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"        // find based on remarks","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"        expectedFindPersonCommand \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"                new FindPersonRemarkCommand(new RemarkContainsKeywordsPredicate(Arrays.asList(\"Allergic\", \"Hates\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_REMARK + \"Allergic Hates\", expectedFindPersonCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"        // find based on address","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"        expectedFindPersonCommand \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"                new FindPersonAddressCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"                        new AddressContainsKeywordsPredicate(Arrays.asList(\"Serangoon\", \"Geylang\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ADDRESS + \"Serangoon Geylang\", expectedFindPersonCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"onefangg"},"content":"    public void parse_multipleAttributes_throwsParseException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"onefangg"},"content":"        // multiple attribute search","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, \" n/Alice p/12345678\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"onefangg"},"content":"                FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"        // multiple attribute search with different order","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"        assertParseFailure(parser, \" p/12345678 n/Alice\",","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"onefangg"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"onefangg":57,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Calendar;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"    private static final String INVALID_TAG_TOO_LONG \u003d","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"            \"12345678901234567890123456789012345678901234567890123456789012345678901\";","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"    private static final LocalDate nextMon \u003d LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.MONDAY));","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"    private static final LocalDate nextTues \u003d LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.TUESDAY));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"    private static final LocalDate nextWeds \u003d LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.WEDNESDAY));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"    private static final LocalDate nextThurs \u003d LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.THURSDAY));","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"    private static final LocalDate nextFri \u003d LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.FRIDAY));","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"    private static final LocalDate nextSat \u003d LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.SATURDAY));","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"    private static final LocalDate nextSun \u003d LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.SUNDAY));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"    private static String nextMonStr \u003d dateFormat(\"Monday\");","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"    private static String nextTuesStr \u003d dateFormat(\"Tuesday\");","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"    private static String nextWedsStr \u003d dateFormat(\"Wednesday\");","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"    private static String nextThursStr \u003d dateFormat(\"Thursday\");","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"    private static String nextFriStr \u003d dateFormat(\"Friday\");","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"    private static String nextSatStr \u003d dateFormat(\"Saturday\");","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"    private static String nextSunStr \u003d dateFormat(\"Sunday\");","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_DATETIME \u003d \"20-10-2022 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_NATURAL_MON_DATETIME \u003d \"Monday 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_MON_DATETIME \u003d nextMonStr + \" 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_NATURAL_TUES_DATETIME \u003d \"Tuesday 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_TUES_DATETIME \u003d nextTuesStr + \" 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_NATURAL_WEDS_DATETIME \u003d \"Wednesday 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_WEDS_DATETIME \u003d nextWedsStr + \" 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_NATURAL_THURS_DATETIME \u003d \"Thursday 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_THURS_DATETIME \u003d nextThursStr + \" 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_NATURAL_FRI_DATETIME \u003d \"Friday 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_FRI_DATETIME \u003d nextFriStr + \" 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_NATURAL_SAT_DATETIME \u003d \"Saturday 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_SAT_DATETIME \u003d nextSatStr + \" 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_NATURAL_SUN_DATETIME \u003d \"Sunday 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"    private static final String VALID_SUN_DATETIME \u003d nextSunStr + \" 23:59\";","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"    private static final String INVALID_TIME_NATURAL_DATE \u003d \"Thursday 8:30\";","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"    private static final String INVALID_DATE_VALID_TIME \u003d \"20/10/2022 08:30\";","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"    private static final String INVALID_TIME_VALID_DATE \u003d \"20-10-2022 8:30\";","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"    private static String dateFormat(String dayToGet) {","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"        Calendar calendar \u003d Calendar.getInstance();","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"        int day \u003d calendar.get(Calendar.DAY_OF_WEEK);","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"        if (dayToGet.equals(\"Monday\") \u0026\u0026 (day !\u003d Calendar.MONDAY)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d nextMon;","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"        } else if (dayToGet.equals(\"Tuesday\") \u0026\u0026 day !\u003d Calendar.TUESDAY) {","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d nextTues;","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"        } else if (dayToGet.equals(\"Wednesday\") \u0026\u0026 day !\u003d Calendar.WEDNESDAY) {","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d nextWeds;","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"        } else if (dayToGet.equals(\"Thursday\") \u0026\u0026 day !\u003d Calendar.THURSDAY) {","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d nextThurs;","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"        } else if (dayToGet.equals(\"Friday\") \u0026\u0026 day !\u003d Calendar.FRIDAY) {","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d nextFri;","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"        } else if (dayToGet.equals(\"Saturday\") \u0026\u0026 day !\u003d Calendar.SATURDAY) {","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d nextSat;","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"        } else if (dayToGet.equals(\"Sunday\") \u0026\u0026 day !\u003d Calendar.SUNDAY) {","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d nextSun;","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_validValueWithWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"punnyhuimin"},"content":"        String datetimeWithWhitespace \u003d WHITESPACE + VALID_DATETIME + WHITESPACE;","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"punnyhuimin"},"content":"        DeliveryDateTime expectedDatetime \u003d new DeliveryDateTime(VALID_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(expectedDatetime, ParserUtil.parseDeliveryDateTime(datetimeWithWhitespace));","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"punnyhuimin"},"content":"        DeliveryDateTime expectedDatetime \u003d new DeliveryDateTime(VALID_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(expectedDatetime, ParserUtil.parseDeliveryDateTime(VALID_DATETIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_invalidDateWithoutWhitespace_returnsDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"punnyhuimin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeliveryDateTime(INVALID_DATE_VALID_TIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_invalidTimeWithoutWhitespace_returnsDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"punnyhuimin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeliveryDateTime(INVALID_TIME_VALID_DATE));","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_validNaturalDateMonday_returnsDate() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"punnyhuimin"},"content":"        DeliveryDateTime expectedDatetime \u003d ParserUtil.parseDeliveryDateTime(VALID_NATURAL_MON_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(expectedDatetime, ParserUtil.parseDeliveryDateTime(VALID_MON_DATETIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_validNaturalDateTuesday_returnsDate() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"punnyhuimin"},"content":"        DeliveryDateTime expectedDatetime \u003d ParserUtil.parseDeliveryDateTime(VALID_NATURAL_TUES_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(expectedDatetime, ParserUtil.parseDeliveryDateTime(VALID_TUES_DATETIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_validNaturalDateWednesday_returnsDate() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"punnyhuimin"},"content":"        DeliveryDateTime expectedDatetime \u003d new DeliveryDateTime(VALID_WEDS_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(expectedDatetime, ParserUtil.parseDeliveryDateTime(VALID_NATURAL_WEDS_DATETIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_validNaturalDateThursday_returnsDate() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"punnyhuimin"},"content":"        DeliveryDateTime expectedDatetime \u003d ParserUtil.parseDeliveryDateTime(VALID_NATURAL_THURS_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(expectedDatetime, ParserUtil.parseDeliveryDateTime(VALID_THURS_DATETIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_validNaturalDateFriday_returnsDate() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"punnyhuimin"},"content":"        DeliveryDateTime expectedDatetime \u003d ParserUtil.parseDeliveryDateTime(VALID_NATURAL_FRI_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(expectedDatetime, ParserUtil.parseDeliveryDateTime(VALID_FRI_DATETIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_validNaturalDateSaturday_returnsDate() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"punnyhuimin"},"content":"        DeliveryDateTime expectedDatetime \u003d ParserUtil.parseDeliveryDateTime(VALID_NATURAL_SAT_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(expectedDatetime, ParserUtil.parseDeliveryDateTime(VALID_SAT_DATETIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_validNaturalDateSunday_returnsDate() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"punnyhuimin"},"content":"        DeliveryDateTime expectedDatetime \u003d ParserUtil.parseDeliveryDateTime(VALID_NATURAL_SUN_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(expectedDatetime, ParserUtil.parseDeliveryDateTime(VALID_SUN_DATETIME));","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"punnyhuimin"},"content":"    public void parseCollectionDateTime_invalidTimeValidNaturalDateWithoutWhitespace_returnsDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"punnyhuimin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeliveryDateTime(INVALID_TIME_NATURAL_DATE));","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":303,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":304,"author":{"gitId":"darshan152"},"content":"    public void parseTag_invalidValueTooLong_throwsParseException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":305,"author":{"gitId":"darshan152"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG_TOO_LONG));","lastModifiedDate":"2022-04-05"},{"lineNumber":306,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":307,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"darshan152":7,"-":196,"punnyhuimin":140}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"        AddressBook newData \u003d getTypicalAddressBookPersons();","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"onefangg"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"onefangg"},"content":"        @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"onefangg"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"onefangg"},"content":"            return orders;","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"onefangg"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"darshan152":2,"onefangg":8,"-":100}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"darshan152"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"darshan152"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredOrderList().remove(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"darshan152"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"darshan152"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getPersonList().remove(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"darshan152"},"content":"    public void getOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"darshan152"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getOrderList().remove(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"darshan152":15,"-":132}},{"path":"src/test/java/seedu/address/model/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-03-04"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":52,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":53,"author":{"gitId":"onefangg"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-04"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":56,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":57,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-04"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":62,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2022-03-04"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-04"},{"lineNumber":69,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":70,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":71,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":72,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":73,"author":{"gitId":"onefangg"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2022-03-04"},{"lineNumber":74,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":76,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2022-03-04"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":80,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":81,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":82,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":83,"author":{"gitId":"onefangg"},"content":"    public void deleteOrder(Order target) {","lastModifiedDate":"2022-03-04"},{"lineNumber":84,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":85,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":86,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":87,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"darshan152"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"darshan152"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":93,"author":{"gitId":"onefangg"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":94,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":95,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":96,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":97,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":98,"author":{"gitId":"onefangg"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2022-03-04"},{"lineNumber":99,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":100,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":101,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":102,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"darshan152"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"darshan152"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"darshan152"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"darshan152"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"darshan152"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":113,"author":{"gitId":"onefangg"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-04"},{"lineNumber":114,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":115,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":116,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":117,"author":{"gitId":"onefangg"},"content":"    @Override","lastModifiedDate":"2022-03-04"},{"lineNumber":118,"author":{"gitId":"onefangg"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2022-03-04"},{"lineNumber":119,"author":{"gitId":"onefangg"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-04"},{"lineNumber":120,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-04"},{"lineNumber":121,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"declanleeler"},"content":"    public void updatedSortedOrderList(ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"declanleeler"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"declanleeler"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"declanleeler"},"content":"    public void updatedSortedFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"declanleeler"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"declanleeler"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"declanleeler"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"darshan152":15,"onefangg":106,"declanleeler":11}},{"path":"src/test/java/seedu/address/model/order/CollectionTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"public class CollectionTypeTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    public void isValidDetail() {","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"        // invalid details","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(CollectionType.isValidCollectionTypeValue(\"\")); // empty string","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(CollectionType.isValidCollectionTypeValue(\" \")); // only whitespace","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(CollectionType.isValidCollectionTypeValue(\"Deliveryy\")); // whitespace followed by alphanumeric","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(CollectionType.isValidCollectionTypeValue(\"Pickupy\")); // whitespace followed by alphanumeric","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(CollectionType.isValidCollectionTypeValue(\"Pick-up\")); // whitespace followed by alphanumeric","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"        // valid details","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(CollectionType.isValidCollectionTypeValue(\"Delivery\")); // numbers only","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(CollectionType.isValidCollectionTypeValue(\"Pickup\")); // with capital letters","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Geralddtan":24}},{"path":"src/test/java/seedu/address/model/order/DeliveryDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"public class DeliveryDateTimeTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeliveryDateTime(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    public void constructor_invalidDeliveryDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        String invalidDeliveryDateTime \u003d \"15/12/2022 1432\"; //Invalid date time format","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DeliveryDateTime(invalidDeliveryDateTime));","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    public void isValidDeliveryDateTime() {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        // null datetime","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e DeliveryDateTime.isValidDeliveryDateTime(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"        // invalid datetime","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(DeliveryDateTime.isValidDeliveryDateTime(\"\")); // empty string","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(DeliveryDateTime.isValidDeliveryDateTime(\" \")); // spaces only","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(DeliveryDateTime.isValidDeliveryDateTime(\"15/12/13 13:43\")); // wrong date format","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(DeliveryDateTime.isValidDeliveryDateTime(\"15-12-2022 1340\")); // wrong time format","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"        // valid datetime","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(DeliveryDateTime.isValidDeliveryDateTime(\"25-06-2022 18:30\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(DeliveryDateTime.isValidDeliveryDateTime(\"15-01-2022 13:40\")); // Before current datetime","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        // valid datetime leapyear","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(DeliveryDateTime.isValidDeliveryDateTime(\"29-02-2024 18:30\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        //invalid datetime leapyear","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(DeliveryDateTime.isValidDeliveryDateTime(\"29-02-2023 18:30\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(DeliveryDateTime.isValidDeliveryDateTime(\"29-02-3000 18:30\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"Geralddtan":46}},{"path":"src/test/java/seedu/address/model/order/DetailsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"onefangg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"public class DetailsTest {","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Details(null));","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"        String invalidDetails \u003d \" \";","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Details(invalidDetails));","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"    public void isValidDetail() {","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"        // null details","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"        assertThrows(NullPointerException.class, () -\u003e Details.isValidDetails(null));","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"        // invalid details","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(\"\")); // empty string","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(\" \")); // only whitespace","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(\":\")); // only colon","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(\"1:   \")); // only passing whitespace","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(\"chocolatecake: 1\")); // quantity and item in wrong order","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(\"one: chocolatecake\")); // quantity not in numbers","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(\"1twothree : chocolate cake\")); // alphanumeric characters in quantity","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"                \"1: chocolate cake ?? 1 of each *\")); // non-alphabet and numeric characters present in order item","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(\"1: choco 2: cake\")); // passing in multiple details at the same time","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"        assertFalse(Details.isValidDetails(\"1:     \")); // all blank spaces","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"        // valid details","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"        assertTrue(Details.isValidDetails(\"1: chocolatecake\")); // expected format","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"onefangg"},"content":"        assertTrue(Details.isValidDetails(\"   1 : chocolate cake   \")); // whitespaces in-front of quantity","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"onefangg"},"content":"        assertTrue(Details.isValidDetails(\"1      :      chocolate cake\")); // white spaces between quantity and item","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"        assertTrue(Details.isValidDetails(\"1:chocolatecake\")); // no whitespaces in-between","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"        assertTrue(Details.isValidDetails(\"1: chOcOlateCake\")); // uppercase characters","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"        assertTrue(Details.isValidDetails(\"1: a  very    big  cake\")); // irregular amount of whitespaces in-between","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":49,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"onefangg":49}},{"path":"src/test/java/seedu/address/model/order/OrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.model.order;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELIVERYDATETIME_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UUID_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"onefangg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"onefangg"},"content":"import static seedu.address.testutil.TypicalOrders.EMILY;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"onefangg"},"content":"import static seedu.address.testutil.TypicalOrders.SIMON;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"onefangg"},"content":"public class OrderTest {","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"onefangg"},"content":"        Order order \u003d new OrderBuilder().build();","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"onefangg"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e order.getDetails().remove(0));","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"onefangg"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"onefangg"},"content":"    public void equals() {","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"        Order emilyCopy \u003d new OrderBuilder(EMILY).build();","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"onefangg"},"content":"        assertTrue(EMILY.equals(emilyCopy));","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"onefangg"},"content":"        assertTrue(EMILY.equals(EMILY));","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"onefangg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"        assertFalse(EMILY.equals(null));","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"        assertFalse(EMILY.equals(5));","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"onefangg"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"onefangg"},"content":"        assertFalse(EMILY.equals(SIMON));","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"darshan152"},"content":"        // different uuid -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"darshan152"},"content":"        Order editedEmily \u003d new OrderBuilder(EMILY).withUuid(VALID_UUID_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"        assertFalse(EMILY.equals(editedEmily));","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"        // different details -\u003e returns false","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"        editedEmily \u003d new OrderBuilder(EMILY).withDetails(VALID_DETAILS_BOB).build();","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"        assertFalse(EMILY.equals(editedEmily));","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"        // different remarks -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"        editedEmily \u003d new OrderBuilder(EMILY).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(EMILY.equals(editedEmily));","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        // different deliveryDateTime -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"onefangg"},"content":"        editedEmily \u003d new OrderBuilder(EMILY).withDeliveryDateTime(VALID_DELIVERYDATETIME_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(EMILY.equals(editedEmily));","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"        // different collectionType -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"        editedEmily \u003d new OrderBuilder(EMILY).withCollectionType(CollectionType.PICKUP).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(EMILY.equals(editedEmily));","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":5,"Geralddtan":14,"onefangg":45}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"        // same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"darshan152"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"        // different phone, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"darshan152":4,"-":79}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        assertTrue(Phone.isValidPhone(\"1293842033123\")); // long phone numbers","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        assertTrue(Phone.isValidPhone(\"123456789112345\")); // 15 char phone numbers","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":38,"punnyhuimin":2}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Geralddtan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"public class RemarkTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"    public void isValidRemark() {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"        // null remark","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Geralddtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Geralddtan"},"content":"        // valid remarks","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(Remark.isValidRemark(\"In love with sky diving\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(Remark.isValidRemark(\"-\")); // one character","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(Remark.isValidRemark(\"\")); // empty remark","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"        assertTrue(Remark.isValidRemark(\"Waterfall Enthusiast who loves to play \"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"                + \"water sports and loves car race\")); // long remark exactly 70 characters long","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Geralddtan"},"content":"        assertFalse(Remark.isValidRemark(\"Waterfall Enthusiast who also loves to play water sports, \"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"                + \"board games, watch movies and loves gambling\")); // long remark above 70 characters","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Geralddtan":30}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"    private static final String INVALID_UUID \u003d \"#$$#\";","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"darshan152"},"content":"    private static final String VALID_UUID \u003d BENSON.getUuid().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"darshan152"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"darshan152"},"content":"                        VALID_REMARK, VALID_UUID, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"                VALID_ADDRESS, VALID_REMARK, VALID_UUID, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"darshan152"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"darshan152"},"content":"                        VALID_REMARK, VALID_UUID, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"darshan152"},"content":"                VALID_ADDRESS, VALID_REMARK, VALID_UUID, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"darshan152"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"darshan152"},"content":"                        VALID_REMARK, VALID_UUID, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"darshan152"},"content":"                VALID_ADDRESS, VALID_REMARK, VALID_UUID, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"darshan152"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"darshan152"},"content":"                        VALID_REMARK, VALID_UUID, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"Geralddtan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"darshan152"},"content":"                null, VALID_REMARK, VALID_UUID, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"darshan152"},"content":"    public void toModelType_invalidUuid_throwsIllegalValueException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"darshan152"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"darshan152"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"darshan152"},"content":"                        VALID_REMARK, INVALID_UUID, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"darshan152"},"content":"        String expectedMessage \u003d JsonAdaptedPerson.UUID_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"darshan152"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"darshan152"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"darshan152"},"content":"    public void toModelType_nullUuid_throwsIllegalValueException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"darshan152"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"darshan152"},"content":"                VALID_REMARK, null, VALID_TAGS);","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"darshan152"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName());","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"darshan152"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"Geralddtan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"darshan152"},"content":"                        VALID_REMARK, VALID_UUID, invalidTags);","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"darshan152":40,"Geralddtan":6,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"darshan152"},"content":"        AddressBook original \u003d getTypicalAddressBookPersons();","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"darshan152":2,"-":108}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBookPersons();","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"darshan152":1,"-":46}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"readybakey.json\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"punnyhuimin":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"        AddressBook original \u003d getTypicalAddressBookPersons();","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darshan152":2,"-":66}},{"path":"src/test/java/seedu/address/testutil/EditOrderDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.logic.commands.EditOrderCommand.EditOrderDescriptor;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":" * A utility class to help with building EditOrderDescriptor objects.","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"public class EditOrderDescriptorBuilder {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    private EditOrderDescriptor descriptor;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    public EditOrderDescriptorBuilder() {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    public EditOrderDescriptorBuilder(EditOrderDescriptor descriptor) {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        this.descriptor \u003d new EditOrderDescriptor(descriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     * Returns an {@code EditOrderDescriptor} with fields containing {@code order}\u0027s details","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"    public EditOrderDescriptorBuilder(Order order) {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"        descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        descriptor.setDetails(order.getDetails());","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"        descriptor.setDeliveryDateTime(order.getDeliveryDateTime());","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"        descriptor.setCollectionType(order.getCollectionType());","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Geralddtan"},"content":"        descriptor.setRemark(order.getRemark());","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"     * Sets the {@code Details} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"    public EditOrderDescriptorBuilder withDetails(String... details) {","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"onefangg"},"content":"        List\u003cDetails\u003e detailsList \u003d Stream.of(details).map(Details::new).collect(Collectors.toList());","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"        descriptor.setDetails(detailsList);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"     * Sets the {@code DeliveryDateTime} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"    public EditOrderDescriptorBuilder withDeliveryDateTime(String deliveryDateTime) {","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        descriptor.setDeliveryDateTime(new DeliveryDateTime(deliveryDateTime));","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"     * Sets the {@code CollectionType} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"    public EditOrderDescriptorBuilder withCollectionType(CollectionType collectionType) {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"        descriptor.setCollectionType(collectionType);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"     * Sets the {@code Details} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"    public EditOrderDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"    public EditOrderDescriptor build() {","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"        return descriptor;","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Geralddtan":31,"onefangg":7,"punnyhuimin":40}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"darshan152":1,"Geralddtan":10,"-":86}},{"path":"src/test/java/seedu/address/testutil/OrderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"onefangg"},"content":"import static seedu.address.model.util.SampleDataUtil.getDetailsList;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Complete;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.DeliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Details;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"onefangg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"onefangg"},"content":"public class OrderBuilder {","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"onefangg"},"content":"    public static final String DEFAULT_DETAILS \u003d \"1 : chocolatemuffin\";","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    public static final String DEFAULT_COMPLETE \u003d \"false\";","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"    public static final String DEFAULT_UUID \u003d \"c6a8669e-ee95-4c42-9ef6-4a9b61380164\";","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"    public static final String DEFAULT_REMARK \u003d \"Add more chocolate\";","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"    public static final String DEFAULT_DELIVERYDATETIME \u003d \"10-12-2022 17:00\";","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    public static final CollectionType DEFAULT_COLLECTIONTYPE \u003d CollectionType.DELIVERY;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"Geralddtan"},"content":"    private Remark remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"onefangg"},"content":"    private List\u003cDetails\u003e details;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"Geralddtan"},"content":"    private DeliveryDateTime deliveryDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"    private CollectionType collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"    private Complete complete;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"    private UUID uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"onefangg"},"content":"     * Creates a {@code OrderBuilder} with the default details.","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"    public OrderBuilder() {","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"onefangg"},"content":"        details \u003d getDetailsList(DEFAULT_DETAILS);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"        deliveryDateTime \u003d new DeliveryDateTime(DEFAULT_DELIVERYDATETIME);","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"        collectionType \u003d DEFAULT_COLLECTIONTYPE;","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"        complete \u003d new Complete(DEFAULT_COMPLETE);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"darshan152"},"content":"        uuid \u003d UUID.fromString(DEFAULT_UUID);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"declanleeler"},"content":"     * Initializes the OrderBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"onefangg"},"content":"    public OrderBuilder(Order orderToCopy) {","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"darshan152"},"content":"        uuid \u003d orderToCopy.getUuid();","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"        remark \u003d orderToCopy.getRemark();","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"onefangg"},"content":"        details \u003d new ArrayList\u003c\u003e(orderToCopy.getDetails());","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"        deliveryDateTime \u003d orderToCopy.getDeliveryDateTime();","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"Geralddtan"},"content":"        collectionType \u003d orderToCopy.getCollectionType();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"        complete \u003d orderToCopy.getComplete();","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"     * Sets the {@code UUID} of the {@code Order} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"darshan152"},"content":"    public OrderBuilder withUuid(String uuid) {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"darshan152"},"content":"        this.uuid \u003d UUID.fromString(uuid);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"        return this;","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"     * Sets the {@code Remark} of the {@code Order} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"    public OrderBuilder withRemark(String remark) {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"onefangg"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"onefangg"},"content":"     * Sets the {@code Details} of the {@code Order} that we are building.","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"onefangg"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"onefangg"},"content":"    public OrderBuilder withDetails(String... details) {","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"onefangg"},"content":"        this.details \u003d getDetailsList(details);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"onefangg"},"content":"        return this;","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"     * Sets the {@code deliveryDateTime} of the {@code Order} that we are building.","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"    public OrderBuilder withDeliveryDateTime(String deliveryDateTime) {","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"        this.deliveryDateTime \u003d new DeliveryDateTime(deliveryDateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"        return this;","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"Geralddtan"},"content":"     * Sets the {@code collectionType} of the {@code Order} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"Geralddtan"},"content":"    public OrderBuilder withCollectionType(CollectionType collectionType) {","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"Geralddtan"},"content":"        this.collectionType \u003d collectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"Geralddtan"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"Geralddtan"},"content":"     * Sets the {@code Complete} of the {@code Order} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"Geralddtan"},"content":"    public OrderBuilder withComplete(Boolean complete) {","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"Geralddtan"},"content":"        this.complete \u003d new Complete(complete);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"Geralddtan"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"darshan152"},"content":"     * Builds the {@code Order} according to the attributes given","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"onefangg"},"content":"    public Order build() {","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"darshan152"},"content":"        return new Order(remark, details, deliveryDateTime, collectionType, complete, uuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"onefangg"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":17,"Geralddtan":51,"onefangg":45,"declanleeler":1,"punnyhuimin":2}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"    public static final String DEFAULT_UUID \u003d \"34566ef5-f24f-4563-b232-ad9893b8592e\";","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"    public static final String DEFAULT_REMARK \u003d \"Allergic to All Dairy Products\";","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"    private UUID uuid;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"    private Remark remark;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"darshan152"},"content":"        uuid \u003d UUID.fromString(DEFAULT_UUID);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"darshan152"},"content":"        uuid \u003d personToCopy.getUuid();","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"darshan152"},"content":"     * Sets the {@code Uuid} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"darshan152"},"content":"    public PersonBuilder withUuid(String uuid) {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"darshan152"},"content":"        this.uuid \u003d UUID.fromString(uuid);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"darshan152"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":119,"author":{"gitId":"darshan152"},"content":"        return new Person(name, phone, email, address, remark, tags, uuid);","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"darshan152":14,"Geralddtan":13,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"    public static String getAddPersonCommand(Person person) {","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"Geralddtan"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"darshan152":1,"Geralddtan":6,"-":58}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darshan152"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalOrders.getTypicalOrders;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"darshan152"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"darshan152"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"darshan152"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"darshan152"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"darshan152"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"darshan152"},"content":"    private TypicalAddressBook() {} // prevents instantiation","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"darshan152"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"darshan152"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"darshan152"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"darshan152"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"darshan152"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"darshan152"},"content":"        for (Order order : getTypicalOrders()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"darshan152"},"content":"            ab.addOrder(order);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"        return ab;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"darshan152"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"darshan152"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"darshan152":33}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"darshan152"},"content":"    public static final Index INDEX_FOURTH_PERSON \u003d Index.fromOneBased(4);","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"    public static final Index INDEX_FIRST_ORDER \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"    public static final Index INDEX_SECOND_ORDER \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"    public static final Index INDEX_THIRD_ORDER \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"darshan152":1,"Geralddtan":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalOrders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"onefangg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELIVERYDATETIME_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DELIVERYDATETIME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAILS_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"onefangg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Geralddtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Geralddtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.CollectionType;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Geralddtan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"onefangg"},"content":"public class TypicalOrders {","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"darshan152"},"content":"    public static final Order EMILY \u003d new OrderBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"darshan152"},"content":"            .withUuid(\"237e9877-e79b-12d4-a765-321741963000\")","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"onefangg"},"content":"            .withDetails(\"1:vanilla cake\")","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"            .withRemark(\"Allergic to Nuts\")","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"Geralddtan"},"content":"            .withDeliveryDateTime(\"10-12-2022 09:30\")","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"Geralddtan"},"content":"            .withCollectionType(CollectionType.DELIVERY)","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"Geralddtan"},"content":"            .withComplete(false).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"darshan152"},"content":"    public static final Order SIMON \u003d new OrderBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"darshan152"},"content":"            .withUuid(\"ea3cb232-f297-451c-80d8-c1800fef118f\")","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"onefangg"},"content":"            .withDetails(\"1:chocolate cake\")","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"            .withRemark(\"Add Chocolate\")","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"Geralddtan"},"content":"            .withDeliveryDateTime(\"11-12-2022 19:30\")","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"Geralddtan"},"content":"            .withCollectionType(CollectionType.PICKUP)","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"Geralddtan"},"content":"            .withComplete(false).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"darshan152"},"content":"    public static final Order JERRY \u003d new OrderBuilder()","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"            .withUuid(\"15580af3-4d85-4948-ba35-628962989444\")","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"onefangg"},"content":"            .withDetails(\"1:jerryfavouritecheesecake\")","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"Geralddtan"},"content":"            .withRemark(\"Allergic to Cheese\")","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"Geralddtan"},"content":"            .withDeliveryDateTime(\"15-12-2022 20:30\")","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"Geralddtan"},"content":"            .withCollectionType(CollectionType.DELIVERY)","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"            .withComplete(false).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"onefangg"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Geralddtan"},"content":"    public static final Person EMILY_PERSON \u003d new PersonBuilder().withName(\"Emily\").withPhone(\"90032123\")","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(\"Emily@gmail.com\").withAddress(\"Market 123\").withRemark(\"Loves to eat Mint Leaves\")","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Geralddtan"},"content":"            .withTags(VALID_TAG_FRIEND).withUuid(\"237e9877-e79b-12d4-a765-321741963000\").build();","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"    public static final Person SIMON_PERSON \u003d new PersonBuilder().withName(\"Simon\").withPhone(\"91029322\")","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(\"simon@hotmail.com\").withAddress(\"Village 123\").withRemark(\"Loves to watch Pokemon\")","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Geralddtan"},"content":"            .withTags(VALID_TAG_FRIEND).withUuid(\"ea3cb232-f297-451c-80d8-c1800fef118f\")","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Geralddtan"},"content":"            .build();","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"Geralddtan"},"content":"    public static final Person JERRY_PERSON \u003d new PersonBuilder().withName(\"Jerry\").withPhone(\"82932342\")","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(\"jerry@hotmail.com\").withAddress(\"Apartment 123\").withRemark(\"Loves to watch Soccer\")","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"Geralddtan"},"content":"            .withTags(VALID_TAG_FRIEND).withUuid(\"15580af3-4d85-4948-ba35-628962989444\")","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"Geralddtan"},"content":"            .build();","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"darshan152"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"darshan152"},"content":"    public static final Order AMY \u003d new OrderBuilder().withDetails(VALID_DETAILS_AMY)","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"Geralddtan"},"content":"            .withDeliveryDateTime(VALID_DELIVERYDATETIME_AMY).withCollectionType(CollectionType.DELIVERY)","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"onefangg"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"darshan152"},"content":"    public static final Order BOB \u003d new OrderBuilder().withDetails(VALID_DETAILS_BOB)","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"Geralddtan"},"content":"            .withDeliveryDateTime(VALID_DELIVERYDATETIME_BOB).withCollectionType(CollectionType.PICKUP)","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"onefangg"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"onefangg"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"Geralddtan"},"content":"    private TypicalOrders() {} // prevents instantiation","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"Geralddtan"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"Geralddtan"},"content":"     * Returns an {@code AddressBook} with all the typical orders.","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"Geralddtan"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"Geralddtan"},"content":"    public static AddressBook getTypicalAddressBookOrders() {","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"Geralddtan"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"Geralddtan"},"content":"        for (Order order : getTypicalOrders()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"Geralddtan"},"content":"            ab.addOrder(order);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"Geralddtan"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"Geralddtan"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"Geralddtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"Geralddtan"},"content":"        return ab;","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"Geralddtan"},"content":"    public static List\u003cOrder\u003e getTypicalOrders() {","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"Geralddtan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(EMILY, SIMON, JERRY));","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"Geralddtan"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"Geralddtan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(EMILY_PERSON, SIMON_PERSON, JERRY_PERSON));","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"Geralddtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"onefangg"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"darshan152":9,"Geralddtan":66,"onefangg":17}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Geralddtan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"Geralddtan"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"Geralddtan"},"content":"            .withPhone(\"94351253\").withRemark(\"Loves Ice Cream\")","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"darshan152"},"content":"            .withTags(\"friends\").withUuid(\"237e9877-e79b-12d4-a765-321741963000\").build();","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withRemark(\"Allergic to Peanuts\")","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Geralddtan"},"content":"            .withRemark(\"Loves Pistachio\")","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"darshan152"},"content":"            .withTags(\"owesMoney\", \"friends\").withUuid(\"ea3cb232-f297-451c-80d8-c1800fef118f\").build();","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"darshan152"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withRemark(\"\")","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"darshan152"},"content":"            .withUuid(\"15580af3-4d85-4948-ba35-628962989444\").build();","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withRemark(\"\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withRemark(\"\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withRemark(\"\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withRemark(\"\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"Geralddtan"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"Geralddtan"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"Geralddtan"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"darshan152"},"content":"    public static AddressBook getTypicalAddressBookPersons() {","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"darshan152":5,"Geralddtan":14,"-":64}}]
